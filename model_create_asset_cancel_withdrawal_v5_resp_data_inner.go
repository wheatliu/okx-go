/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateAssetCancelWithdrawalV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetCancelWithdrawalV5RespDataInner{}

// CreateAssetCancelWithdrawalV5RespDataInner struct for CreateAssetCancelWithdrawalV5RespDataInner
type CreateAssetCancelWithdrawalV5RespDataInner struct {
	// Withdrawal ID
	WdId *string `json:"wdId,omitempty"`
}

// NewCreateAssetCancelWithdrawalV5RespDataInner instantiates a new CreateAssetCancelWithdrawalV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetCancelWithdrawalV5RespDataInner() *CreateAssetCancelWithdrawalV5RespDataInner {
	this := CreateAssetCancelWithdrawalV5RespDataInner{}
	var wdId string = ""
	this.WdId = &wdId
	return &this
}

// NewCreateAssetCancelWithdrawalV5RespDataInnerWithDefaults instantiates a new CreateAssetCancelWithdrawalV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetCancelWithdrawalV5RespDataInnerWithDefaults() *CreateAssetCancelWithdrawalV5RespDataInner {
	this := CreateAssetCancelWithdrawalV5RespDataInner{}
	var wdId string = ""
	this.WdId = &wdId
	return &this
}

// GetWdId returns the WdId field value if set, zero value otherwise.
func (o *CreateAssetCancelWithdrawalV5RespDataInner) GetWdId() string {
	if o == nil || IsNil(o.WdId) {
		var ret string
		return ret
	}
	return *o.WdId
}

// GetWdIdOk returns a tuple with the WdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetCancelWithdrawalV5RespDataInner) GetWdIdOk() (*string, bool) {
	if o == nil || IsNil(o.WdId) {
		return nil, false
	}
	return o.WdId, true
}

// HasWdId returns a boolean if a field has been set.
func (o *CreateAssetCancelWithdrawalV5RespDataInner) HasWdId() bool {
	if o != nil && !IsNil(o.WdId) {
		return true
	}

	return false
}

// SetWdId gets a reference to the given string and assigns it to the WdId field.
func (o *CreateAssetCancelWithdrawalV5RespDataInner) SetWdId(v string) {
	o.WdId = &v
}

func (o CreateAssetCancelWithdrawalV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetCancelWithdrawalV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WdId) {
		toSerialize["wdId"] = o.WdId
	}
	return toSerialize, nil
}

type NullableCreateAssetCancelWithdrawalV5RespDataInner struct {
	value *CreateAssetCancelWithdrawalV5RespDataInner
	isSet bool
}

func (v NullableCreateAssetCancelWithdrawalV5RespDataInner) Get() *CreateAssetCancelWithdrawalV5RespDataInner {
	return v.value
}

func (v *NullableCreateAssetCancelWithdrawalV5RespDataInner) Set(val *CreateAssetCancelWithdrawalV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetCancelWithdrawalV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetCancelWithdrawalV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetCancelWithdrawalV5RespDataInner(val *CreateAssetCancelWithdrawalV5RespDataInner) *NullableCreateAssetCancelWithdrawalV5RespDataInner {
	return &NullableCreateAssetCancelWithdrawalV5RespDataInner{value: val, isSet: true}
}

func (v NullableCreateAssetCancelWithdrawalV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetCancelWithdrawalV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


