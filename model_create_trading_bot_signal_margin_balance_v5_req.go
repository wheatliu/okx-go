/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotSignalMarginBalanceV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotSignalMarginBalanceV5Req{}

// CreateTradingBotSignalMarginBalanceV5Req struct for CreateTradingBotSignalMarginBalanceV5Req
type CreateTradingBotSignalMarginBalanceV5Req struct {
	// Algo ID
	AlgoId string `json:"algoId"`
	// Whether to reinvest with newly added margin. The default value is `false`.   `false`:it will be used as passive margin to prevent liquidation and will not be used as active investment  `true`:the margin added here will furthermore be accounted for in calculations of your total investment amount, and furthermore your order size。  Only applicable to your signal comes in with an “investmentType” of “percentage_investment”
	AllowReinvest *bool `json:"allowReinvest,omitempty"`
	// Adjust margin balance amount  Either `amt` or `percent` is required.
	Amt string `json:"amt"`
	// Adjust margin balance type  `add` `reduce`
	Type string `json:"type"`
}

type _CreateTradingBotSignalMarginBalanceV5Req CreateTradingBotSignalMarginBalanceV5Req

// NewCreateTradingBotSignalMarginBalanceV5Req instantiates a new CreateTradingBotSignalMarginBalanceV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotSignalMarginBalanceV5Req(algoId string, amt string, type_ string) *CreateTradingBotSignalMarginBalanceV5Req {
	this := CreateTradingBotSignalMarginBalanceV5Req{}
	this.AlgoId = algoId
	this.Amt = amt
	this.Type = type_
	return &this
}

// NewCreateTradingBotSignalMarginBalanceV5ReqWithDefaults instantiates a new CreateTradingBotSignalMarginBalanceV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotSignalMarginBalanceV5ReqWithDefaults() *CreateTradingBotSignalMarginBalanceV5Req {
	this := CreateTradingBotSignalMarginBalanceV5Req{}
	var algoId string = ""
	this.AlgoId = algoId
	var amt string = ""
	this.Amt = amt
	var type_ string = ""
	this.Type = type_
	return &this
}

// GetAlgoId returns the AlgoId field value
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetAlgoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlgoId
}

// GetAlgoIdOk returns a tuple with the AlgoId field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetAlgoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlgoId, true
}

// SetAlgoId sets field value
func (o *CreateTradingBotSignalMarginBalanceV5Req) SetAlgoId(v string) {
	o.AlgoId = v
}

// GetAllowReinvest returns the AllowReinvest field value if set, zero value otherwise.
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetAllowReinvest() bool {
	if o == nil || IsNil(o.AllowReinvest) {
		var ret bool
		return ret
	}
	return *o.AllowReinvest
}

// GetAllowReinvestOk returns a tuple with the AllowReinvest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetAllowReinvestOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowReinvest) {
		return nil, false
	}
	return o.AllowReinvest, true
}

// HasAllowReinvest returns a boolean if a field has been set.
func (o *CreateTradingBotSignalMarginBalanceV5Req) HasAllowReinvest() bool {
	if o != nil && !IsNil(o.AllowReinvest) {
		return true
	}

	return false
}

// SetAllowReinvest gets a reference to the given bool and assigns it to the AllowReinvest field.
func (o *CreateTradingBotSignalMarginBalanceV5Req) SetAllowReinvest(v bool) {
	o.AllowReinvest = &v
}

// GetAmt returns the Amt field value
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetAmt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amt
}

// GetAmtOk returns a tuple with the Amt field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetAmtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amt, true
}

// SetAmt sets field value
func (o *CreateTradingBotSignalMarginBalanceV5Req) SetAmt(v string) {
	o.Amt = v
}

// GetType returns the Type field value
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalMarginBalanceV5Req) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateTradingBotSignalMarginBalanceV5Req) SetType(v string) {
	o.Type = v
}

func (o CreateTradingBotSignalMarginBalanceV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotSignalMarginBalanceV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algoId"] = o.AlgoId
	if !IsNil(o.AllowReinvest) {
		toSerialize["allowReinvest"] = o.AllowReinvest
	}
	toSerialize["amt"] = o.Amt
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *CreateTradingBotSignalMarginBalanceV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algoId",
		"amt",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotSignalMarginBalanceV5Req := _CreateTradingBotSignalMarginBalanceV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotSignalMarginBalanceV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotSignalMarginBalanceV5Req(varCreateTradingBotSignalMarginBalanceV5Req)

	return err
}

type NullableCreateTradingBotSignalMarginBalanceV5Req struct {
	value *CreateTradingBotSignalMarginBalanceV5Req
	isSet bool
}

func (v NullableCreateTradingBotSignalMarginBalanceV5Req) Get() *CreateTradingBotSignalMarginBalanceV5Req {
	return v.value
}

func (v *NullableCreateTradingBotSignalMarginBalanceV5Req) Set(val *CreateTradingBotSignalMarginBalanceV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotSignalMarginBalanceV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotSignalMarginBalanceV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotSignalMarginBalanceV5Req(val *CreateTradingBotSignalMarginBalanceV5Req) *NullableCreateTradingBotSignalMarginBalanceV5Req {
	return &NullableCreateTradingBotSignalMarginBalanceV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotSignalMarginBalanceV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotSignalMarginBalanceV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


