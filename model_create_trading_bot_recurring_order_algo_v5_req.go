/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotRecurringOrderAlgoV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotRecurringOrderAlgoV5Req{}

// CreateTradingBotRecurringOrderAlgoV5Req struct for CreateTradingBotRecurringOrderAlgoV5Req
type CreateTradingBotRecurringOrderAlgoV5Req struct {
	// Client-supplied Algo ID  There will be a value when algo order attaching algoClOrdId is triggered, or it will be \"\".  A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
	AlgoClOrdId *string `json:"algoClOrdId,omitempty"`
	// Quantity invested per cycle
	Amt string `json:"amt"`
	// The invested quantity unit, can only be `USDT`/`USDC`
	InvestmentCcy string `json:"investmentCcy"`
	// Period  `monthly`  `weekly`  `daily`  `hourly`
	Period string `json:"period"`
	// Recurring buy date  When the period is `monthly`, the value range is an integer of [1,28]  When the period is `weekly`, the value range is an integer of [1,7]  When the period is `daily`/`hourly`, the parameter is not required.
	RecurringDay *string `json:"recurringDay,omitempty"`
	// Recurring buy by hourly  `1`/`4`/`8`/`12`, e.g. `4` represents \"recurring buy every 4 hour\"  When the period is `hourly`, the parameter is required.
	RecurringHour *string `json:"recurringHour,omitempty"`
	// Recurring buy info
	RecurringList []CreateTradingBotRecurringOrderAlgoV5ReqRecurringListInner `json:"recurringList"`
	// Recurring buy time, the value range is an integer of [0,23]  When the period is `hourly`, the parameter is the time of the first investment occurs.
	RecurringTime string `json:"recurringTime"`
	// Custom name for trading bot, no more than 40 characters
	StgyName string `json:"stgyName"`
	// Order tag  A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 16 characters.
	Tag *string `json:"tag,omitempty"`
	// Trading mode  Margin mode: `cross`  Non-Margin mode: `cash`
	TdMode string `json:"tdMode"`
	// UTC time zone, the value range is an integer of [-12,14]  e.g. \"8\" representing UTC+8 (East 8 District), Beijing Time
	TimeZone string `json:"timeZone"`
}

type _CreateTradingBotRecurringOrderAlgoV5Req CreateTradingBotRecurringOrderAlgoV5Req

// NewCreateTradingBotRecurringOrderAlgoV5Req instantiates a new CreateTradingBotRecurringOrderAlgoV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotRecurringOrderAlgoV5Req(amt string, investmentCcy string, period string, recurringList []CreateTradingBotRecurringOrderAlgoV5ReqRecurringListInner, recurringTime string, stgyName string, tdMode string, timeZone string) *CreateTradingBotRecurringOrderAlgoV5Req {
	this := CreateTradingBotRecurringOrderAlgoV5Req{}
	var algoClOrdId string = ""
	this.AlgoClOrdId = &algoClOrdId
	this.Amt = amt
	this.InvestmentCcy = investmentCcy
	this.Period = period
	var recurringDay string = ""
	this.RecurringDay = &recurringDay
	var recurringHour string = ""
	this.RecurringHour = &recurringHour
	this.RecurringList = recurringList
	this.RecurringTime = recurringTime
	this.StgyName = stgyName
	var tag string = ""
	this.Tag = &tag
	this.TdMode = tdMode
	this.TimeZone = timeZone
	return &this
}

// NewCreateTradingBotRecurringOrderAlgoV5ReqWithDefaults instantiates a new CreateTradingBotRecurringOrderAlgoV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotRecurringOrderAlgoV5ReqWithDefaults() *CreateTradingBotRecurringOrderAlgoV5Req {
	this := CreateTradingBotRecurringOrderAlgoV5Req{}
	var algoClOrdId string = ""
	this.AlgoClOrdId = &algoClOrdId
	var amt string = ""
	this.Amt = amt
	var investmentCcy string = ""
	this.InvestmentCcy = investmentCcy
	var period string = ""
	this.Period = period
	var recurringDay string = ""
	this.RecurringDay = &recurringDay
	var recurringHour string = ""
	this.RecurringHour = &recurringHour
	var recurringTime string = ""
	this.RecurringTime = recurringTime
	var stgyName string = ""
	this.StgyName = stgyName
	var tag string = ""
	this.Tag = &tag
	var tdMode string = ""
	this.TdMode = tdMode
	var timeZone string = ""
	this.TimeZone = timeZone
	return &this
}

// GetAlgoClOrdId returns the AlgoClOrdId field value if set, zero value otherwise.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetAlgoClOrdId() string {
	if o == nil || IsNil(o.AlgoClOrdId) {
		var ret string
		return ret
	}
	return *o.AlgoClOrdId
}

// GetAlgoClOrdIdOk returns a tuple with the AlgoClOrdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetAlgoClOrdIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlgoClOrdId) {
		return nil, false
	}
	return o.AlgoClOrdId, true
}

// HasAlgoClOrdId returns a boolean if a field has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) HasAlgoClOrdId() bool {
	if o != nil && !IsNil(o.AlgoClOrdId) {
		return true
	}

	return false
}

// SetAlgoClOrdId gets a reference to the given string and assigns it to the AlgoClOrdId field.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetAlgoClOrdId(v string) {
	o.AlgoClOrdId = &v
}

// GetAmt returns the Amt field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetAmt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amt
}

// GetAmtOk returns a tuple with the Amt field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetAmtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amt, true
}

// SetAmt sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetAmt(v string) {
	o.Amt = v
}

// GetInvestmentCcy returns the InvestmentCcy field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetInvestmentCcy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvestmentCcy
}

// GetInvestmentCcyOk returns a tuple with the InvestmentCcy field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetInvestmentCcyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvestmentCcy, true
}

// SetInvestmentCcy sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetInvestmentCcy(v string) {
	o.InvestmentCcy = v
}

// GetPeriod returns the Period field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetPeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetPeriod(v string) {
	o.Period = v
}

// GetRecurringDay returns the RecurringDay field value if set, zero value otherwise.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringDay() string {
	if o == nil || IsNil(o.RecurringDay) {
		var ret string
		return ret
	}
	return *o.RecurringDay
}

// GetRecurringDayOk returns a tuple with the RecurringDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringDayOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringDay) {
		return nil, false
	}
	return o.RecurringDay, true
}

// HasRecurringDay returns a boolean if a field has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) HasRecurringDay() bool {
	if o != nil && !IsNil(o.RecurringDay) {
		return true
	}

	return false
}

// SetRecurringDay gets a reference to the given string and assigns it to the RecurringDay field.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetRecurringDay(v string) {
	o.RecurringDay = &v
}

// GetRecurringHour returns the RecurringHour field value if set, zero value otherwise.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringHour() string {
	if o == nil || IsNil(o.RecurringHour) {
		var ret string
		return ret
	}
	return *o.RecurringHour
}

// GetRecurringHourOk returns a tuple with the RecurringHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringHourOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringHour) {
		return nil, false
	}
	return o.RecurringHour, true
}

// HasRecurringHour returns a boolean if a field has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) HasRecurringHour() bool {
	if o != nil && !IsNil(o.RecurringHour) {
		return true
	}

	return false
}

// SetRecurringHour gets a reference to the given string and assigns it to the RecurringHour field.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetRecurringHour(v string) {
	o.RecurringHour = &v
}

// GetRecurringList returns the RecurringList field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringList() []CreateTradingBotRecurringOrderAlgoV5ReqRecurringListInner {
	if o == nil {
		var ret []CreateTradingBotRecurringOrderAlgoV5ReqRecurringListInner
		return ret
	}

	return o.RecurringList
}

// GetRecurringListOk returns a tuple with the RecurringList field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringListOk() ([]CreateTradingBotRecurringOrderAlgoV5ReqRecurringListInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecurringList, true
}

// SetRecurringList sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetRecurringList(v []CreateTradingBotRecurringOrderAlgoV5ReqRecurringListInner) {
	o.RecurringList = v
}

// GetRecurringTime returns the RecurringTime field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecurringTime
}

// GetRecurringTimeOk returns a tuple with the RecurringTime field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetRecurringTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecurringTime, true
}

// SetRecurringTime sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetRecurringTime(v string) {
	o.RecurringTime = v
}

// GetStgyName returns the StgyName field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetStgyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StgyName
}

// GetStgyNameOk returns a tuple with the StgyName field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetStgyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StgyName, true
}

// SetStgyName sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetStgyName(v string) {
	o.StgyName = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetTag(v string) {
	o.Tag = &v
}

// GetTdMode returns the TdMode field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetTdMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TdMode
}

// GetTdModeOk returns a tuple with the TdMode field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetTdModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TdMode, true
}

// SetTdMode sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetTdMode(v string) {
	o.TdMode = v
}

// GetTimeZone returns the TimeZone field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetTimeZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotRecurringOrderAlgoV5Req) GetTimeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZone, true
}

// SetTimeZone sets field value
func (o *CreateTradingBotRecurringOrderAlgoV5Req) SetTimeZone(v string) {
	o.TimeZone = v
}

func (o CreateTradingBotRecurringOrderAlgoV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotRecurringOrderAlgoV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlgoClOrdId) {
		toSerialize["algoClOrdId"] = o.AlgoClOrdId
	}
	toSerialize["amt"] = o.Amt
	toSerialize["investmentCcy"] = o.InvestmentCcy
	toSerialize["period"] = o.Period
	if !IsNil(o.RecurringDay) {
		toSerialize["recurringDay"] = o.RecurringDay
	}
	if !IsNil(o.RecurringHour) {
		toSerialize["recurringHour"] = o.RecurringHour
	}
	toSerialize["recurringList"] = o.RecurringList
	toSerialize["recurringTime"] = o.RecurringTime
	toSerialize["stgyName"] = o.StgyName
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	toSerialize["tdMode"] = o.TdMode
	toSerialize["timeZone"] = o.TimeZone
	return toSerialize, nil
}

func (o *CreateTradingBotRecurringOrderAlgoV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amt",
		"investmentCcy",
		"period",
		"recurringList",
		"recurringTime",
		"stgyName",
		"tdMode",
		"timeZone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotRecurringOrderAlgoV5Req := _CreateTradingBotRecurringOrderAlgoV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotRecurringOrderAlgoV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotRecurringOrderAlgoV5Req(varCreateTradingBotRecurringOrderAlgoV5Req)

	return err
}

type NullableCreateTradingBotRecurringOrderAlgoV5Req struct {
	value *CreateTradingBotRecurringOrderAlgoV5Req
	isSet bool
}

func (v NullableCreateTradingBotRecurringOrderAlgoV5Req) Get() *CreateTradingBotRecurringOrderAlgoV5Req {
	return v.value
}

func (v *NullableCreateTradingBotRecurringOrderAlgoV5Req) Set(val *CreateTradingBotRecurringOrderAlgoV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotRecurringOrderAlgoV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotRecurringOrderAlgoV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotRecurringOrderAlgoV5Req(val *CreateTradingBotRecurringOrderAlgoV5Req) *NullableCreateTradingBotRecurringOrderAlgoV5Req {
	return &NullableCreateTradingBotRecurringOrderAlgoV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotRecurringOrderAlgoV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotRecurringOrderAlgoV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


