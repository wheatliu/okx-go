/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRfqExecuteQuoteV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqExecuteQuoteV5Req{}

// CreateRfqExecuteQuoteV5Req struct for CreateRfqExecuteQuoteV5Req
type CreateRfqExecuteQuoteV5Req struct {
	// An Array of objects containing the execution size of each leg of the RFQ.   The ratio of the leg sizes needs to be the same as the RFQ.   *Note: `tgtCcy` and `side` of each leg will be same as ones in the RFQ. `px` will be the same as the ones in the Quote.
	Legs []CreateRfqExecuteQuoteV5ReqLegsInner `json:"legs,omitempty"`
	// Quote ID.
	QuoteId string `json:"quoteId"`
	// RFQ ID .
	RfqId string `json:"rfqId"`
}

type _CreateRfqExecuteQuoteV5Req CreateRfqExecuteQuoteV5Req

// NewCreateRfqExecuteQuoteV5Req instantiates a new CreateRfqExecuteQuoteV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqExecuteQuoteV5Req(quoteId string, rfqId string) *CreateRfqExecuteQuoteV5Req {
	this := CreateRfqExecuteQuoteV5Req{}
	this.QuoteId = quoteId
	this.RfqId = rfqId
	return &this
}

// NewCreateRfqExecuteQuoteV5ReqWithDefaults instantiates a new CreateRfqExecuteQuoteV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqExecuteQuoteV5ReqWithDefaults() *CreateRfqExecuteQuoteV5Req {
	this := CreateRfqExecuteQuoteV5Req{}
	var quoteId string = ""
	this.QuoteId = quoteId
	var rfqId string = ""
	this.RfqId = rfqId
	return &this
}

// GetLegs returns the Legs field value if set, zero value otherwise.
func (o *CreateRfqExecuteQuoteV5Req) GetLegs() []CreateRfqExecuteQuoteV5ReqLegsInner {
	if o == nil || IsNil(o.Legs) {
		var ret []CreateRfqExecuteQuoteV5ReqLegsInner
		return ret
	}
	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqExecuteQuoteV5Req) GetLegsOk() ([]CreateRfqExecuteQuoteV5ReqLegsInner, bool) {
	if o == nil || IsNil(o.Legs) {
		return nil, false
	}
	return o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *CreateRfqExecuteQuoteV5Req) HasLegs() bool {
	if o != nil && !IsNil(o.Legs) {
		return true
	}

	return false
}

// SetLegs gets a reference to the given []CreateRfqExecuteQuoteV5ReqLegsInner and assigns it to the Legs field.
func (o *CreateRfqExecuteQuoteV5Req) SetLegs(v []CreateRfqExecuteQuoteV5ReqLegsInner) {
	o.Legs = v
}

// GetQuoteId returns the QuoteId field value
func (o *CreateRfqExecuteQuoteV5Req) GetQuoteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value
// and a boolean to check if the value has been set.
func (o *CreateRfqExecuteQuoteV5Req) GetQuoteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteId, true
}

// SetQuoteId sets field value
func (o *CreateRfqExecuteQuoteV5Req) SetQuoteId(v string) {
	o.QuoteId = v
}

// GetRfqId returns the RfqId field value
func (o *CreateRfqExecuteQuoteV5Req) GetRfqId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RfqId
}

// GetRfqIdOk returns a tuple with the RfqId field value
// and a boolean to check if the value has been set.
func (o *CreateRfqExecuteQuoteV5Req) GetRfqIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RfqId, true
}

// SetRfqId sets field value
func (o *CreateRfqExecuteQuoteV5Req) SetRfqId(v string) {
	o.RfqId = v
}

func (o CreateRfqExecuteQuoteV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqExecuteQuoteV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Legs) {
		toSerialize["legs"] = o.Legs
	}
	toSerialize["quoteId"] = o.QuoteId
	toSerialize["rfqId"] = o.RfqId
	return toSerialize, nil
}

func (o *CreateRfqExecuteQuoteV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quoteId",
		"rfqId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRfqExecuteQuoteV5Req := _CreateRfqExecuteQuoteV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRfqExecuteQuoteV5Req)

	if err != nil {
		return err
	}

	*o = CreateRfqExecuteQuoteV5Req(varCreateRfqExecuteQuoteV5Req)

	return err
}

type NullableCreateRfqExecuteQuoteV5Req struct {
	value *CreateRfqExecuteQuoteV5Req
	isSet bool
}

func (v NullableCreateRfqExecuteQuoteV5Req) Get() *CreateRfqExecuteQuoteV5Req {
	return v.value
}

func (v *NullableCreateRfqExecuteQuoteV5Req) Set(val *CreateRfqExecuteQuoteV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqExecuteQuoteV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqExecuteQuoteV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqExecuteQuoteV5Req(val *CreateRfqExecuteQuoteV5Req) *NullableCreateRfqExecuteQuoteV5Req {
	return &NullableCreateRfqExecuteQuoteV5Req{value: val, isSet: true}
}

func (v NullableCreateRfqExecuteQuoteV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqExecuteQuoteV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


