/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRfqCancelAllAfterV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqCancelAllAfterV5Req{}

// CreateRfqCancelAllAfterV5Req struct for CreateRfqCancelAllAfterV5Req
type CreateRfqCancelAllAfterV5Req struct {
	// The countdown for quotes cancellation, with second as the unit.  Range of value can be 0, [10, 120].   Setting timeOut to 0 disables Cancel All After.
	TimeOut string `json:"timeOut"`
}

type _CreateRfqCancelAllAfterV5Req CreateRfqCancelAllAfterV5Req

// NewCreateRfqCancelAllAfterV5Req instantiates a new CreateRfqCancelAllAfterV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqCancelAllAfterV5Req(timeOut string) *CreateRfqCancelAllAfterV5Req {
	this := CreateRfqCancelAllAfterV5Req{}
	this.TimeOut = timeOut
	return &this
}

// NewCreateRfqCancelAllAfterV5ReqWithDefaults instantiates a new CreateRfqCancelAllAfterV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqCancelAllAfterV5ReqWithDefaults() *CreateRfqCancelAllAfterV5Req {
	this := CreateRfqCancelAllAfterV5Req{}
	var timeOut string = ""
	this.TimeOut = timeOut
	return &this
}

// GetTimeOut returns the TimeOut field value
func (o *CreateRfqCancelAllAfterV5Req) GetTimeOut() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeOut
}

// GetTimeOutOk returns a tuple with the TimeOut field value
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelAllAfterV5Req) GetTimeOutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeOut, true
}

// SetTimeOut sets field value
func (o *CreateRfqCancelAllAfterV5Req) SetTimeOut(v string) {
	o.TimeOut = v
}

func (o CreateRfqCancelAllAfterV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqCancelAllAfterV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timeOut"] = o.TimeOut
	return toSerialize, nil
}

func (o *CreateRfqCancelAllAfterV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timeOut",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRfqCancelAllAfterV5Req := _CreateRfqCancelAllAfterV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRfqCancelAllAfterV5Req)

	if err != nil {
		return err
	}

	*o = CreateRfqCancelAllAfterV5Req(varCreateRfqCancelAllAfterV5Req)

	return err
}

type NullableCreateRfqCancelAllAfterV5Req struct {
	value *CreateRfqCancelAllAfterV5Req
	isSet bool
}

func (v NullableCreateRfqCancelAllAfterV5Req) Get() *CreateRfqCancelAllAfterV5Req {
	return v.value
}

func (v *NullableCreateRfqCancelAllAfterV5Req) Set(val *CreateRfqCancelAllAfterV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqCancelAllAfterV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqCancelAllAfterV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqCancelAllAfterV5Req(val *CreateRfqCancelAllAfterV5Req) *NullableCreateRfqCancelAllAfterV5Req {
	return &NullableCreateRfqCancelAllAfterV5Req{value: val, isSet: true}
}

func (v NullableCreateRfqCancelAllAfterV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqCancelAllAfterV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


