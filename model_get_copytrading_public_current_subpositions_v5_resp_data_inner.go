/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetCopytradingPublicCurrentSubpositionsV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCopytradingPublicCurrentSubpositionsV5RespDataInner{}

// GetCopytradingPublicCurrentSubpositionsV5RespDataInner struct for GetCopytradingPublicCurrentSubpositionsV5RespDataInner
type GetCopytradingPublicCurrentSubpositionsV5RespDataInner struct {
	// Currency
	Ccy *string `json:"ccy,omitempty"`
	// Instrument ID, e.g. BTC-USDT-SWAP
	InstId *string `json:"instId,omitempty"`
	// Instrument type
	InstType *string `json:"instType,omitempty"`
	// Leverage
	Lever *string `json:"lever,omitempty"`
	// Margin
	Margin *string `json:"margin,omitempty"`
	// Latest mark price, only applicable to contract
	MarkPx *string `json:"markPx,omitempty"`
	// Margin mode. `cross` `isolated`
	MgnMode *string `json:"mgnMode,omitempty"`
	// Average open price
	OpenAvgPx *string `json:"openAvgPx,omitempty"`
	// Open time
	OpenTime *string `json:"openTime,omitempty"`
	// Position side  `long`   `short`   `net`  (Long positions have positive subPos; short positions have negative subPos)
	PosSide *string `json:"posSide,omitempty"`
	// Quantity of positions
	SubPos *string `json:"subPos,omitempty"`
	// Lead position ID
	SubPosId *string `json:"subPosId,omitempty"`
	// Lead trader unique code
	UniqueCode *string `json:"uniqueCode,omitempty"`
	// Unrealized profit and loss
	Upl *string `json:"upl,omitempty"`
	// Unrealized profit and loss ratio
	UplRatio *string `json:"uplRatio,omitempty"`
}

// NewGetCopytradingPublicCurrentSubpositionsV5RespDataInner instantiates a new GetCopytradingPublicCurrentSubpositionsV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCopytradingPublicCurrentSubpositionsV5RespDataInner() *GetCopytradingPublicCurrentSubpositionsV5RespDataInner {
	this := GetCopytradingPublicCurrentSubpositionsV5RespDataInner{}
	var ccy string = ""
	this.Ccy = &ccy
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var margin string = ""
	this.Margin = &margin
	var markPx string = ""
	this.MarkPx = &markPx
	var mgnMode string = ""
	this.MgnMode = &mgnMode
	var openAvgPx string = ""
	this.OpenAvgPx = &openAvgPx
	var openTime string = ""
	this.OpenTime = &openTime
	var posSide string = ""
	this.PosSide = &posSide
	var subPos string = ""
	this.SubPos = &subPos
	var subPosId string = ""
	this.SubPosId = &subPosId
	var uniqueCode string = ""
	this.UniqueCode = &uniqueCode
	var upl string = ""
	this.Upl = &upl
	var uplRatio string = ""
	this.UplRatio = &uplRatio
	return &this
}

// NewGetCopytradingPublicCurrentSubpositionsV5RespDataInnerWithDefaults instantiates a new GetCopytradingPublicCurrentSubpositionsV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCopytradingPublicCurrentSubpositionsV5RespDataInnerWithDefaults() *GetCopytradingPublicCurrentSubpositionsV5RespDataInner {
	this := GetCopytradingPublicCurrentSubpositionsV5RespDataInner{}
	var ccy string = ""
	this.Ccy = &ccy
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var margin string = ""
	this.Margin = &margin
	var markPx string = ""
	this.MarkPx = &markPx
	var mgnMode string = ""
	this.MgnMode = &mgnMode
	var openAvgPx string = ""
	this.OpenAvgPx = &openAvgPx
	var openTime string = ""
	this.OpenTime = &openTime
	var posSide string = ""
	this.PosSide = &posSide
	var subPos string = ""
	this.SubPos = &subPos
	var subPosId string = ""
	this.SubPosId = &subPosId
	var uniqueCode string = ""
	this.UniqueCode = &uniqueCode
	var upl string = ""
	this.Upl = &upl
	var uplRatio string = ""
	this.UplRatio = &uplRatio
	return &this
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetCcy(v string) {
	o.Ccy = &v
}

// GetInstId returns the InstId field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetInstId(v string) {
	o.InstId = &v
}

// GetInstType returns the InstType field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetInstType() string {
	if o == nil || IsNil(o.InstType) {
		var ret string
		return ret
	}
	return *o.InstType
}

// GetInstTypeOk returns a tuple with the InstType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetInstTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstType) {
		return nil, false
	}
	return o.InstType, true
}

// HasInstType returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasInstType() bool {
	if o != nil && !IsNil(o.InstType) {
		return true
	}

	return false
}

// SetInstType gets a reference to the given string and assigns it to the InstType field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetInstType(v string) {
	o.InstType = &v
}

// GetLever returns the Lever field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetLever() string {
	if o == nil || IsNil(o.Lever) {
		var ret string
		return ret
	}
	return *o.Lever
}

// GetLeverOk returns a tuple with the Lever field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetLeverOk() (*string, bool) {
	if o == nil || IsNil(o.Lever) {
		return nil, false
	}
	return o.Lever, true
}

// HasLever returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasLever() bool {
	if o != nil && !IsNil(o.Lever) {
		return true
	}

	return false
}

// SetLever gets a reference to the given string and assigns it to the Lever field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetLever(v string) {
	o.Lever = &v
}

// GetMargin returns the Margin field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetMargin() string {
	if o == nil || IsNil(o.Margin) {
		var ret string
		return ret
	}
	return *o.Margin
}

// GetMarginOk returns a tuple with the Margin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetMarginOk() (*string, bool) {
	if o == nil || IsNil(o.Margin) {
		return nil, false
	}
	return o.Margin, true
}

// HasMargin returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasMargin() bool {
	if o != nil && !IsNil(o.Margin) {
		return true
	}

	return false
}

// SetMargin gets a reference to the given string and assigns it to the Margin field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetMargin(v string) {
	o.Margin = &v
}

// GetMarkPx returns the MarkPx field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetMarkPx() string {
	if o == nil || IsNil(o.MarkPx) {
		var ret string
		return ret
	}
	return *o.MarkPx
}

// GetMarkPxOk returns a tuple with the MarkPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetMarkPxOk() (*string, bool) {
	if o == nil || IsNil(o.MarkPx) {
		return nil, false
	}
	return o.MarkPx, true
}

// HasMarkPx returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasMarkPx() bool {
	if o != nil && !IsNil(o.MarkPx) {
		return true
	}

	return false
}

// SetMarkPx gets a reference to the given string and assigns it to the MarkPx field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetMarkPx(v string) {
	o.MarkPx = &v
}

// GetMgnMode returns the MgnMode field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetMgnMode() string {
	if o == nil || IsNil(o.MgnMode) {
		var ret string
		return ret
	}
	return *o.MgnMode
}

// GetMgnModeOk returns a tuple with the MgnMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetMgnModeOk() (*string, bool) {
	if o == nil || IsNil(o.MgnMode) {
		return nil, false
	}
	return o.MgnMode, true
}

// HasMgnMode returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasMgnMode() bool {
	if o != nil && !IsNil(o.MgnMode) {
		return true
	}

	return false
}

// SetMgnMode gets a reference to the given string and assigns it to the MgnMode field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetMgnMode(v string) {
	o.MgnMode = &v
}

// GetOpenAvgPx returns the OpenAvgPx field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetOpenAvgPx() string {
	if o == nil || IsNil(o.OpenAvgPx) {
		var ret string
		return ret
	}
	return *o.OpenAvgPx
}

// GetOpenAvgPxOk returns a tuple with the OpenAvgPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetOpenAvgPxOk() (*string, bool) {
	if o == nil || IsNil(o.OpenAvgPx) {
		return nil, false
	}
	return o.OpenAvgPx, true
}

// HasOpenAvgPx returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasOpenAvgPx() bool {
	if o != nil && !IsNil(o.OpenAvgPx) {
		return true
	}

	return false
}

// SetOpenAvgPx gets a reference to the given string and assigns it to the OpenAvgPx field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetOpenAvgPx(v string) {
	o.OpenAvgPx = &v
}

// GetOpenTime returns the OpenTime field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetOpenTime() string {
	if o == nil || IsNil(o.OpenTime) {
		var ret string
		return ret
	}
	return *o.OpenTime
}

// GetOpenTimeOk returns a tuple with the OpenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetOpenTimeOk() (*string, bool) {
	if o == nil || IsNil(o.OpenTime) {
		return nil, false
	}
	return o.OpenTime, true
}

// HasOpenTime returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasOpenTime() bool {
	if o != nil && !IsNil(o.OpenTime) {
		return true
	}

	return false
}

// SetOpenTime gets a reference to the given string and assigns it to the OpenTime field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetOpenTime(v string) {
	o.OpenTime = &v
}

// GetPosSide returns the PosSide field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetPosSide() string {
	if o == nil || IsNil(o.PosSide) {
		var ret string
		return ret
	}
	return *o.PosSide
}

// GetPosSideOk returns a tuple with the PosSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetPosSideOk() (*string, bool) {
	if o == nil || IsNil(o.PosSide) {
		return nil, false
	}
	return o.PosSide, true
}

// HasPosSide returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasPosSide() bool {
	if o != nil && !IsNil(o.PosSide) {
		return true
	}

	return false
}

// SetPosSide gets a reference to the given string and assigns it to the PosSide field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetPosSide(v string) {
	o.PosSide = &v
}

// GetSubPos returns the SubPos field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetSubPos() string {
	if o == nil || IsNil(o.SubPos) {
		var ret string
		return ret
	}
	return *o.SubPos
}

// GetSubPosOk returns a tuple with the SubPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetSubPosOk() (*string, bool) {
	if o == nil || IsNil(o.SubPos) {
		return nil, false
	}
	return o.SubPos, true
}

// HasSubPos returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasSubPos() bool {
	if o != nil && !IsNil(o.SubPos) {
		return true
	}

	return false
}

// SetSubPos gets a reference to the given string and assigns it to the SubPos field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetSubPos(v string) {
	o.SubPos = &v
}

// GetSubPosId returns the SubPosId field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetSubPosId() string {
	if o == nil || IsNil(o.SubPosId) {
		var ret string
		return ret
	}
	return *o.SubPosId
}

// GetSubPosIdOk returns a tuple with the SubPosId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetSubPosIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubPosId) {
		return nil, false
	}
	return o.SubPosId, true
}

// HasSubPosId returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasSubPosId() bool {
	if o != nil && !IsNil(o.SubPosId) {
		return true
	}

	return false
}

// SetSubPosId gets a reference to the given string and assigns it to the SubPosId field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetSubPosId(v string) {
	o.SubPosId = &v
}

// GetUniqueCode returns the UniqueCode field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetUniqueCode() string {
	if o == nil || IsNil(o.UniqueCode) {
		var ret string
		return ret
	}
	return *o.UniqueCode
}

// GetUniqueCodeOk returns a tuple with the UniqueCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetUniqueCodeOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueCode) {
		return nil, false
	}
	return o.UniqueCode, true
}

// HasUniqueCode returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasUniqueCode() bool {
	if o != nil && !IsNil(o.UniqueCode) {
		return true
	}

	return false
}

// SetUniqueCode gets a reference to the given string and assigns it to the UniqueCode field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetUniqueCode(v string) {
	o.UniqueCode = &v
}

// GetUpl returns the Upl field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetUpl() string {
	if o == nil || IsNil(o.Upl) {
		var ret string
		return ret
	}
	return *o.Upl
}

// GetUplOk returns a tuple with the Upl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetUplOk() (*string, bool) {
	if o == nil || IsNil(o.Upl) {
		return nil, false
	}
	return o.Upl, true
}

// HasUpl returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasUpl() bool {
	if o != nil && !IsNil(o.Upl) {
		return true
	}

	return false
}

// SetUpl gets a reference to the given string and assigns it to the Upl field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetUpl(v string) {
	o.Upl = &v
}

// GetUplRatio returns the UplRatio field value if set, zero value otherwise.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetUplRatio() string {
	if o == nil || IsNil(o.UplRatio) {
		var ret string
		return ret
	}
	return *o.UplRatio
}

// GetUplRatioOk returns a tuple with the UplRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) GetUplRatioOk() (*string, bool) {
	if o == nil || IsNil(o.UplRatio) {
		return nil, false
	}
	return o.UplRatio, true
}

// HasUplRatio returns a boolean if a field has been set.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) HasUplRatio() bool {
	if o != nil && !IsNil(o.UplRatio) {
		return true
	}

	return false
}

// SetUplRatio gets a reference to the given string and assigns it to the UplRatio field.
func (o *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) SetUplRatio(v string) {
	o.UplRatio = &v
}

func (o GetCopytradingPublicCurrentSubpositionsV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCopytradingPublicCurrentSubpositionsV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	if !IsNil(o.InstId) {
		toSerialize["instId"] = o.InstId
	}
	if !IsNil(o.InstType) {
		toSerialize["instType"] = o.InstType
	}
	if !IsNil(o.Lever) {
		toSerialize["lever"] = o.Lever
	}
	if !IsNil(o.Margin) {
		toSerialize["margin"] = o.Margin
	}
	if !IsNil(o.MarkPx) {
		toSerialize["markPx"] = o.MarkPx
	}
	if !IsNil(o.MgnMode) {
		toSerialize["mgnMode"] = o.MgnMode
	}
	if !IsNil(o.OpenAvgPx) {
		toSerialize["openAvgPx"] = o.OpenAvgPx
	}
	if !IsNil(o.OpenTime) {
		toSerialize["openTime"] = o.OpenTime
	}
	if !IsNil(o.PosSide) {
		toSerialize["posSide"] = o.PosSide
	}
	if !IsNil(o.SubPos) {
		toSerialize["subPos"] = o.SubPos
	}
	if !IsNil(o.SubPosId) {
		toSerialize["subPosId"] = o.SubPosId
	}
	if !IsNil(o.UniqueCode) {
		toSerialize["uniqueCode"] = o.UniqueCode
	}
	if !IsNil(o.Upl) {
		toSerialize["upl"] = o.Upl
	}
	if !IsNil(o.UplRatio) {
		toSerialize["uplRatio"] = o.UplRatio
	}
	return toSerialize, nil
}

type NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner struct {
	value *GetCopytradingPublicCurrentSubpositionsV5RespDataInner
	isSet bool
}

func (v NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner) Get() *GetCopytradingPublicCurrentSubpositionsV5RespDataInner {
	return v.value
}

func (v *NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner) Set(val *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner(val *GetCopytradingPublicCurrentSubpositionsV5RespDataInner) *NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner {
	return &NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCopytradingPublicCurrentSubpositionsV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


