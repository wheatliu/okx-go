/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetTradeOrderV5RespDataAttachAlgoOrdsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradeOrderV5RespDataAttachAlgoOrdsInner{}

// GetTradeOrderV5RespDataAttachAlgoOrdsInner struct for GetTradeOrderV5RespDataAttachAlgoOrdsInner
type GetTradeOrderV5RespDataAttachAlgoOrdsInner struct {
	// Whether to enable Cost-price SL. Only applicable to SL order of split TPs.   `0`: disable, the default value   `1`: Enable
	AmendPxOnTriggerType *string `json:"amendPxOnTriggerType,omitempty"`
	// Client-supplied Algo ID when placing order attaching TP/SL  A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.  It will be posted to `algoClOrdId` when placing TP/SL order once the general order is filled completely.
	AttachAlgoClOrdId *string `json:"attachAlgoClOrdId,omitempty"`
	// The order ID of attached TP/SL order. It can be used to identity the TP/SL order when amending. It will not be posted to algoId when placing TP/SL order after the general order is filled completely.
	AttachAlgoId *string `json:"attachAlgoId,omitempty"`
	// The error code when failing to place TP/SL order, e.g. 51020   The default is \"\"
	FailCode *string `json:"failCode,omitempty"`
	// The error reason when failing to place TP/SL order.   The default is \"\"
	FailReason *string `json:"failReason,omitempty"`
	// Stop-loss order price.
	SlOrdPx *string `json:"slOrdPx,omitempty"`
	// Stop-loss trigger price.
	SlTriggerPx *string `json:"slTriggerPx,omitempty"`
	// Stop-loss trigger price type.   `last`: last price  `index`: index price  `mark`: mark price
	SlTriggerPxType *string `json:"slTriggerPxType,omitempty"`
	// Size. Only applicable to TP order of split TPs
	Sz *string `json:"sz,omitempty"`
	// TP order kind  `condition`  `limit`
	TpOrdKind *string `json:"tpOrdKind,omitempty"`
	// Take-profit order price.
	TpOrdPx *string `json:"tpOrdPx,omitempty"`
	// Take-profit trigger price.
	TpTriggerPx *string `json:"tpTriggerPx,omitempty"`
	// Take-profit trigger price type.   `last`: last price  `index`: index price  `mark`: mark price
	TpTriggerPxType *string `json:"tpTriggerPxType,omitempty"`
}

// NewGetTradeOrderV5RespDataAttachAlgoOrdsInner instantiates a new GetTradeOrderV5RespDataAttachAlgoOrdsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradeOrderV5RespDataAttachAlgoOrdsInner() *GetTradeOrderV5RespDataAttachAlgoOrdsInner {
	this := GetTradeOrderV5RespDataAttachAlgoOrdsInner{}
	var amendPxOnTriggerType string = ""
	this.AmendPxOnTriggerType = &amendPxOnTriggerType
	var attachAlgoClOrdId string = ""
	this.AttachAlgoClOrdId = &attachAlgoClOrdId
	var attachAlgoId string = ""
	this.AttachAlgoId = &attachAlgoId
	var failCode string = ""
	this.FailCode = &failCode
	var failReason string = ""
	this.FailReason = &failReason
	var slOrdPx string = ""
	this.SlOrdPx = &slOrdPx
	var slTriggerPx string = ""
	this.SlTriggerPx = &slTriggerPx
	var slTriggerPxType string = ""
	this.SlTriggerPxType = &slTriggerPxType
	var sz string = ""
	this.Sz = &sz
	var tpOrdKind string = ""
	this.TpOrdKind = &tpOrdKind
	var tpOrdPx string = ""
	this.TpOrdPx = &tpOrdPx
	var tpTriggerPx string = ""
	this.TpTriggerPx = &tpTriggerPx
	var tpTriggerPxType string = ""
	this.TpTriggerPxType = &tpTriggerPxType
	return &this
}

// NewGetTradeOrderV5RespDataAttachAlgoOrdsInnerWithDefaults instantiates a new GetTradeOrderV5RespDataAttachAlgoOrdsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradeOrderV5RespDataAttachAlgoOrdsInnerWithDefaults() *GetTradeOrderV5RespDataAttachAlgoOrdsInner {
	this := GetTradeOrderV5RespDataAttachAlgoOrdsInner{}
	var amendPxOnTriggerType string = ""
	this.AmendPxOnTriggerType = &amendPxOnTriggerType
	var attachAlgoClOrdId string = ""
	this.AttachAlgoClOrdId = &attachAlgoClOrdId
	var attachAlgoId string = ""
	this.AttachAlgoId = &attachAlgoId
	var failCode string = ""
	this.FailCode = &failCode
	var failReason string = ""
	this.FailReason = &failReason
	var slOrdPx string = ""
	this.SlOrdPx = &slOrdPx
	var slTriggerPx string = ""
	this.SlTriggerPx = &slTriggerPx
	var slTriggerPxType string = ""
	this.SlTriggerPxType = &slTriggerPxType
	var sz string = ""
	this.Sz = &sz
	var tpOrdKind string = ""
	this.TpOrdKind = &tpOrdKind
	var tpOrdPx string = ""
	this.TpOrdPx = &tpOrdPx
	var tpTriggerPx string = ""
	this.TpTriggerPx = &tpTriggerPx
	var tpTriggerPxType string = ""
	this.TpTriggerPxType = &tpTriggerPxType
	return &this
}

// GetAmendPxOnTriggerType returns the AmendPxOnTriggerType field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetAmendPxOnTriggerType() string {
	if o == nil || IsNil(o.AmendPxOnTriggerType) {
		var ret string
		return ret
	}
	return *o.AmendPxOnTriggerType
}

// GetAmendPxOnTriggerTypeOk returns a tuple with the AmendPxOnTriggerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetAmendPxOnTriggerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AmendPxOnTriggerType) {
		return nil, false
	}
	return o.AmendPxOnTriggerType, true
}

// HasAmendPxOnTriggerType returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasAmendPxOnTriggerType() bool {
	if o != nil && !IsNil(o.AmendPxOnTriggerType) {
		return true
	}

	return false
}

// SetAmendPxOnTriggerType gets a reference to the given string and assigns it to the AmendPxOnTriggerType field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetAmendPxOnTriggerType(v string) {
	o.AmendPxOnTriggerType = &v
}

// GetAttachAlgoClOrdId returns the AttachAlgoClOrdId field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetAttachAlgoClOrdId() string {
	if o == nil || IsNil(o.AttachAlgoClOrdId) {
		var ret string
		return ret
	}
	return *o.AttachAlgoClOrdId
}

// GetAttachAlgoClOrdIdOk returns a tuple with the AttachAlgoClOrdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetAttachAlgoClOrdIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttachAlgoClOrdId) {
		return nil, false
	}
	return o.AttachAlgoClOrdId, true
}

// HasAttachAlgoClOrdId returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasAttachAlgoClOrdId() bool {
	if o != nil && !IsNil(o.AttachAlgoClOrdId) {
		return true
	}

	return false
}

// SetAttachAlgoClOrdId gets a reference to the given string and assigns it to the AttachAlgoClOrdId field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetAttachAlgoClOrdId(v string) {
	o.AttachAlgoClOrdId = &v
}

// GetAttachAlgoId returns the AttachAlgoId field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetAttachAlgoId() string {
	if o == nil || IsNil(o.AttachAlgoId) {
		var ret string
		return ret
	}
	return *o.AttachAlgoId
}

// GetAttachAlgoIdOk returns a tuple with the AttachAlgoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetAttachAlgoIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttachAlgoId) {
		return nil, false
	}
	return o.AttachAlgoId, true
}

// HasAttachAlgoId returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasAttachAlgoId() bool {
	if o != nil && !IsNil(o.AttachAlgoId) {
		return true
	}

	return false
}

// SetAttachAlgoId gets a reference to the given string and assigns it to the AttachAlgoId field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetAttachAlgoId(v string) {
	o.AttachAlgoId = &v
}

// GetFailCode returns the FailCode field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetFailCode() string {
	if o == nil || IsNil(o.FailCode) {
		var ret string
		return ret
	}
	return *o.FailCode
}

// GetFailCodeOk returns a tuple with the FailCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetFailCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FailCode) {
		return nil, false
	}
	return o.FailCode, true
}

// HasFailCode returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasFailCode() bool {
	if o != nil && !IsNil(o.FailCode) {
		return true
	}

	return false
}

// SetFailCode gets a reference to the given string and assigns it to the FailCode field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetFailCode(v string) {
	o.FailCode = &v
}

// GetFailReason returns the FailReason field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetFailReason() string {
	if o == nil || IsNil(o.FailReason) {
		var ret string
		return ret
	}
	return *o.FailReason
}

// GetFailReasonOk returns a tuple with the FailReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetFailReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailReason) {
		return nil, false
	}
	return o.FailReason, true
}

// HasFailReason returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasFailReason() bool {
	if o != nil && !IsNil(o.FailReason) {
		return true
	}

	return false
}

// SetFailReason gets a reference to the given string and assigns it to the FailReason field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetFailReason(v string) {
	o.FailReason = &v
}

// GetSlOrdPx returns the SlOrdPx field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSlOrdPx() string {
	if o == nil || IsNil(o.SlOrdPx) {
		var ret string
		return ret
	}
	return *o.SlOrdPx
}

// GetSlOrdPxOk returns a tuple with the SlOrdPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSlOrdPxOk() (*string, bool) {
	if o == nil || IsNil(o.SlOrdPx) {
		return nil, false
	}
	return o.SlOrdPx, true
}

// HasSlOrdPx returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasSlOrdPx() bool {
	if o != nil && !IsNil(o.SlOrdPx) {
		return true
	}

	return false
}

// SetSlOrdPx gets a reference to the given string and assigns it to the SlOrdPx field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetSlOrdPx(v string) {
	o.SlOrdPx = &v
}

// GetSlTriggerPx returns the SlTriggerPx field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSlTriggerPx() string {
	if o == nil || IsNil(o.SlTriggerPx) {
		var ret string
		return ret
	}
	return *o.SlTriggerPx
}

// GetSlTriggerPxOk returns a tuple with the SlTriggerPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSlTriggerPxOk() (*string, bool) {
	if o == nil || IsNil(o.SlTriggerPx) {
		return nil, false
	}
	return o.SlTriggerPx, true
}

// HasSlTriggerPx returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasSlTriggerPx() bool {
	if o != nil && !IsNil(o.SlTriggerPx) {
		return true
	}

	return false
}

// SetSlTriggerPx gets a reference to the given string and assigns it to the SlTriggerPx field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetSlTriggerPx(v string) {
	o.SlTriggerPx = &v
}

// GetSlTriggerPxType returns the SlTriggerPxType field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSlTriggerPxType() string {
	if o == nil || IsNil(o.SlTriggerPxType) {
		var ret string
		return ret
	}
	return *o.SlTriggerPxType
}

// GetSlTriggerPxTypeOk returns a tuple with the SlTriggerPxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSlTriggerPxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SlTriggerPxType) {
		return nil, false
	}
	return o.SlTriggerPxType, true
}

// HasSlTriggerPxType returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasSlTriggerPxType() bool {
	if o != nil && !IsNil(o.SlTriggerPxType) {
		return true
	}

	return false
}

// SetSlTriggerPxType gets a reference to the given string and assigns it to the SlTriggerPxType field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetSlTriggerPxType(v string) {
	o.SlTriggerPxType = &v
}

// GetSz returns the Sz field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSz() string {
	if o == nil || IsNil(o.Sz) {
		var ret string
		return ret
	}
	return *o.Sz
}

// GetSzOk returns a tuple with the Sz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetSzOk() (*string, bool) {
	if o == nil || IsNil(o.Sz) {
		return nil, false
	}
	return o.Sz, true
}

// HasSz returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasSz() bool {
	if o != nil && !IsNil(o.Sz) {
		return true
	}

	return false
}

// SetSz gets a reference to the given string and assigns it to the Sz field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetSz(v string) {
	o.Sz = &v
}

// GetTpOrdKind returns the TpOrdKind field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpOrdKind() string {
	if o == nil || IsNil(o.TpOrdKind) {
		var ret string
		return ret
	}
	return *o.TpOrdKind
}

// GetTpOrdKindOk returns a tuple with the TpOrdKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpOrdKindOk() (*string, bool) {
	if o == nil || IsNil(o.TpOrdKind) {
		return nil, false
	}
	return o.TpOrdKind, true
}

// HasTpOrdKind returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasTpOrdKind() bool {
	if o != nil && !IsNil(o.TpOrdKind) {
		return true
	}

	return false
}

// SetTpOrdKind gets a reference to the given string and assigns it to the TpOrdKind field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetTpOrdKind(v string) {
	o.TpOrdKind = &v
}

// GetTpOrdPx returns the TpOrdPx field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpOrdPx() string {
	if o == nil || IsNil(o.TpOrdPx) {
		var ret string
		return ret
	}
	return *o.TpOrdPx
}

// GetTpOrdPxOk returns a tuple with the TpOrdPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpOrdPxOk() (*string, bool) {
	if o == nil || IsNil(o.TpOrdPx) {
		return nil, false
	}
	return o.TpOrdPx, true
}

// HasTpOrdPx returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasTpOrdPx() bool {
	if o != nil && !IsNil(o.TpOrdPx) {
		return true
	}

	return false
}

// SetTpOrdPx gets a reference to the given string and assigns it to the TpOrdPx field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetTpOrdPx(v string) {
	o.TpOrdPx = &v
}

// GetTpTriggerPx returns the TpTriggerPx field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpTriggerPx() string {
	if o == nil || IsNil(o.TpTriggerPx) {
		var ret string
		return ret
	}
	return *o.TpTriggerPx
}

// GetTpTriggerPxOk returns a tuple with the TpTriggerPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpTriggerPxOk() (*string, bool) {
	if o == nil || IsNil(o.TpTriggerPx) {
		return nil, false
	}
	return o.TpTriggerPx, true
}

// HasTpTriggerPx returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasTpTriggerPx() bool {
	if o != nil && !IsNil(o.TpTriggerPx) {
		return true
	}

	return false
}

// SetTpTriggerPx gets a reference to the given string and assigns it to the TpTriggerPx field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetTpTriggerPx(v string) {
	o.TpTriggerPx = &v
}

// GetTpTriggerPxType returns the TpTriggerPxType field value if set, zero value otherwise.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpTriggerPxType() string {
	if o == nil || IsNil(o.TpTriggerPxType) {
		var ret string
		return ret
	}
	return *o.TpTriggerPxType
}

// GetTpTriggerPxTypeOk returns a tuple with the TpTriggerPxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) GetTpTriggerPxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TpTriggerPxType) {
		return nil, false
	}
	return o.TpTriggerPxType, true
}

// HasTpTriggerPxType returns a boolean if a field has been set.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) HasTpTriggerPxType() bool {
	if o != nil && !IsNil(o.TpTriggerPxType) {
		return true
	}

	return false
}

// SetTpTriggerPxType gets a reference to the given string and assigns it to the TpTriggerPxType field.
func (o *GetTradeOrderV5RespDataAttachAlgoOrdsInner) SetTpTriggerPxType(v string) {
	o.TpTriggerPxType = &v
}

func (o GetTradeOrderV5RespDataAttachAlgoOrdsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradeOrderV5RespDataAttachAlgoOrdsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmendPxOnTriggerType) {
		toSerialize["amendPxOnTriggerType"] = o.AmendPxOnTriggerType
	}
	if !IsNil(o.AttachAlgoClOrdId) {
		toSerialize["attachAlgoClOrdId"] = o.AttachAlgoClOrdId
	}
	if !IsNil(o.AttachAlgoId) {
		toSerialize["attachAlgoId"] = o.AttachAlgoId
	}
	if !IsNil(o.FailCode) {
		toSerialize["failCode"] = o.FailCode
	}
	if !IsNil(o.FailReason) {
		toSerialize["failReason"] = o.FailReason
	}
	if !IsNil(o.SlOrdPx) {
		toSerialize["slOrdPx"] = o.SlOrdPx
	}
	if !IsNil(o.SlTriggerPx) {
		toSerialize["slTriggerPx"] = o.SlTriggerPx
	}
	if !IsNil(o.SlTriggerPxType) {
		toSerialize["slTriggerPxType"] = o.SlTriggerPxType
	}
	if !IsNil(o.Sz) {
		toSerialize["sz"] = o.Sz
	}
	if !IsNil(o.TpOrdKind) {
		toSerialize["tpOrdKind"] = o.TpOrdKind
	}
	if !IsNil(o.TpOrdPx) {
		toSerialize["tpOrdPx"] = o.TpOrdPx
	}
	if !IsNil(o.TpTriggerPx) {
		toSerialize["tpTriggerPx"] = o.TpTriggerPx
	}
	if !IsNil(o.TpTriggerPxType) {
		toSerialize["tpTriggerPxType"] = o.TpTriggerPxType
	}
	return toSerialize, nil
}

type NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner struct {
	value *GetTradeOrderV5RespDataAttachAlgoOrdsInner
	isSet bool
}

func (v NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner) Get() *GetTradeOrderV5RespDataAttachAlgoOrdsInner {
	return v.value
}

func (v *NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner) Set(val *GetTradeOrderV5RespDataAttachAlgoOrdsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradeOrderV5RespDataAttachAlgoOrdsInner(val *GetTradeOrderV5RespDataAttachAlgoOrdsInner) *NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner {
	return &NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner{value: val, isSet: true}
}

func (v NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradeOrderV5RespDataAttachAlgoOrdsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


