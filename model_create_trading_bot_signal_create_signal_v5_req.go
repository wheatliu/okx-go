/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotSignalCreateSignalV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotSignalCreateSignalV5Req{}

// CreateTradingBotSignalCreateSignalV5Req struct for CreateTradingBotSignalCreateSignalV5Req
type CreateTradingBotSignalCreateSignalV5Req struct {
	// Signal channel description
	SignalChanDesc *string `json:"signalChanDesc,omitempty"`
	// Signal channel name
	SignalChanName string `json:"signalChanName"`
}

type _CreateTradingBotSignalCreateSignalV5Req CreateTradingBotSignalCreateSignalV5Req

// NewCreateTradingBotSignalCreateSignalV5Req instantiates a new CreateTradingBotSignalCreateSignalV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotSignalCreateSignalV5Req(signalChanName string) *CreateTradingBotSignalCreateSignalV5Req {
	this := CreateTradingBotSignalCreateSignalV5Req{}
	var signalChanDesc string = ""
	this.SignalChanDesc = &signalChanDesc
	this.SignalChanName = signalChanName
	return &this
}

// NewCreateTradingBotSignalCreateSignalV5ReqWithDefaults instantiates a new CreateTradingBotSignalCreateSignalV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotSignalCreateSignalV5ReqWithDefaults() *CreateTradingBotSignalCreateSignalV5Req {
	this := CreateTradingBotSignalCreateSignalV5Req{}
	var signalChanDesc string = ""
	this.SignalChanDesc = &signalChanDesc
	var signalChanName string = ""
	this.SignalChanName = signalChanName
	return &this
}

// GetSignalChanDesc returns the SignalChanDesc field value if set, zero value otherwise.
func (o *CreateTradingBotSignalCreateSignalV5Req) GetSignalChanDesc() string {
	if o == nil || IsNil(o.SignalChanDesc) {
		var ret string
		return ret
	}
	return *o.SignalChanDesc
}

// GetSignalChanDescOk returns a tuple with the SignalChanDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalCreateSignalV5Req) GetSignalChanDescOk() (*string, bool) {
	if o == nil || IsNil(o.SignalChanDesc) {
		return nil, false
	}
	return o.SignalChanDesc, true
}

// HasSignalChanDesc returns a boolean if a field has been set.
func (o *CreateTradingBotSignalCreateSignalV5Req) HasSignalChanDesc() bool {
	if o != nil && !IsNil(o.SignalChanDesc) {
		return true
	}

	return false
}

// SetSignalChanDesc gets a reference to the given string and assigns it to the SignalChanDesc field.
func (o *CreateTradingBotSignalCreateSignalV5Req) SetSignalChanDesc(v string) {
	o.SignalChanDesc = &v
}

// GetSignalChanName returns the SignalChanName field value
func (o *CreateTradingBotSignalCreateSignalV5Req) GetSignalChanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignalChanName
}

// GetSignalChanNameOk returns a tuple with the SignalChanName field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalCreateSignalV5Req) GetSignalChanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignalChanName, true
}

// SetSignalChanName sets field value
func (o *CreateTradingBotSignalCreateSignalV5Req) SetSignalChanName(v string) {
	o.SignalChanName = v
}

func (o CreateTradingBotSignalCreateSignalV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotSignalCreateSignalV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignalChanDesc) {
		toSerialize["signalChanDesc"] = o.SignalChanDesc
	}
	toSerialize["signalChanName"] = o.SignalChanName
	return toSerialize, nil
}

func (o *CreateTradingBotSignalCreateSignalV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signalChanName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotSignalCreateSignalV5Req := _CreateTradingBotSignalCreateSignalV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotSignalCreateSignalV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotSignalCreateSignalV5Req(varCreateTradingBotSignalCreateSignalV5Req)

	return err
}

type NullableCreateTradingBotSignalCreateSignalV5Req struct {
	value *CreateTradingBotSignalCreateSignalV5Req
	isSet bool
}

func (v NullableCreateTradingBotSignalCreateSignalV5Req) Get() *CreateTradingBotSignalCreateSignalV5Req {
	return v.value
}

func (v *NullableCreateTradingBotSignalCreateSignalV5Req) Set(val *CreateTradingBotSignalCreateSignalV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotSignalCreateSignalV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotSignalCreateSignalV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotSignalCreateSignalV5Req(val *CreateTradingBotSignalCreateSignalV5Req) *NullableCreateTradingBotSignalCreateSignalV5Req {
	return &NullableCreateTradingBotSignalCreateSignalV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotSignalCreateSignalV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotSignalCreateSignalV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


