/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateRfqCancelRfqV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqCancelRfqV5Req{}

// CreateRfqCancelRfqV5Req struct for CreateRfqCancelRfqV5Req
type CreateRfqCancelRfqV5Req struct {
	// Client-supplied RFQ ID.   A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.    Either rfqId or clRfqId is required. If both are passed, rfqId will be used.
	ClRfqId *string `json:"clRfqId,omitempty"`
	// RFQ ID created .
	RfqId *string `json:"rfqId,omitempty"`
}

// NewCreateRfqCancelRfqV5Req instantiates a new CreateRfqCancelRfqV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqCancelRfqV5Req() *CreateRfqCancelRfqV5Req {
	this := CreateRfqCancelRfqV5Req{}
	var clRfqId string = ""
	this.ClRfqId = &clRfqId
	var rfqId string = ""
	this.RfqId = &rfqId
	return &this
}

// NewCreateRfqCancelRfqV5ReqWithDefaults instantiates a new CreateRfqCancelRfqV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqCancelRfqV5ReqWithDefaults() *CreateRfqCancelRfqV5Req {
	this := CreateRfqCancelRfqV5Req{}
	var clRfqId string = ""
	this.ClRfqId = &clRfqId
	var rfqId string = ""
	this.RfqId = &rfqId
	return &this
}

// GetClRfqId returns the ClRfqId field value if set, zero value otherwise.
func (o *CreateRfqCancelRfqV5Req) GetClRfqId() string {
	if o == nil || IsNil(o.ClRfqId) {
		var ret string
		return ret
	}
	return *o.ClRfqId
}

// GetClRfqIdOk returns a tuple with the ClRfqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelRfqV5Req) GetClRfqIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClRfqId) {
		return nil, false
	}
	return o.ClRfqId, true
}

// HasClRfqId returns a boolean if a field has been set.
func (o *CreateRfqCancelRfqV5Req) HasClRfqId() bool {
	if o != nil && !IsNil(o.ClRfqId) {
		return true
	}

	return false
}

// SetClRfqId gets a reference to the given string and assigns it to the ClRfqId field.
func (o *CreateRfqCancelRfqV5Req) SetClRfqId(v string) {
	o.ClRfqId = &v
}

// GetRfqId returns the RfqId field value if set, zero value otherwise.
func (o *CreateRfqCancelRfqV5Req) GetRfqId() string {
	if o == nil || IsNil(o.RfqId) {
		var ret string
		return ret
	}
	return *o.RfqId
}

// GetRfqIdOk returns a tuple with the RfqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelRfqV5Req) GetRfqIdOk() (*string, bool) {
	if o == nil || IsNil(o.RfqId) {
		return nil, false
	}
	return o.RfqId, true
}

// HasRfqId returns a boolean if a field has been set.
func (o *CreateRfqCancelRfqV5Req) HasRfqId() bool {
	if o != nil && !IsNil(o.RfqId) {
		return true
	}

	return false
}

// SetRfqId gets a reference to the given string and assigns it to the RfqId field.
func (o *CreateRfqCancelRfqV5Req) SetRfqId(v string) {
	o.RfqId = &v
}

func (o CreateRfqCancelRfqV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqCancelRfqV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClRfqId) {
		toSerialize["clRfqId"] = o.ClRfqId
	}
	if !IsNil(o.RfqId) {
		toSerialize["rfqId"] = o.RfqId
	}
	return toSerialize, nil
}

type NullableCreateRfqCancelRfqV5Req struct {
	value *CreateRfqCancelRfqV5Req
	isSet bool
}

func (v NullableCreateRfqCancelRfqV5Req) Get() *CreateRfqCancelRfqV5Req {
	return v.value
}

func (v *NullableCreateRfqCancelRfqV5Req) Set(val *CreateRfqCancelRfqV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqCancelRfqV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqCancelRfqV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqCancelRfqV5Req(val *CreateRfqCancelRfqV5Req) *NullableCreateRfqCancelRfqV5Req {
	return &NullableCreateRfqCancelRfqV5Req{value: val, isSet: true}
}

func (v NullableCreateRfqCancelRfqV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqCancelRfqV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


