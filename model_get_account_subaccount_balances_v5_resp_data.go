/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetAccountSubaccountBalancesV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountSubaccountBalancesV5RespData{}

// GetAccountSubaccountBalancesV5RespData struct for GetAccountSubaccountBalancesV5RespData
type GetAccountSubaccountBalancesV5RespData struct {
	// Adjusted / Effective equity in `USD`   The net fiat value of the assets in the account that can provide margins for spot, expiry futures, perpetual futures and options under the cross-margin mode.   In multi-ccy or PM mode, the asset and margin requirement will all be converted to USD value to process the order check or liquidation.   Due to the volatility of each currency market, our platform calculates the actual USD value of each currency based on discount rates to balance market risks.   Applicable to `Spot mode`/`Multi-currency margin` and `Portfolio margin`
	AdjEq *string `json:"adjEq,omitempty"`
	// Potential borrowing IMR of the account in `USD`   Only applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`. It is \"\" for other margin modes.
	BorrowFroz *string `json:"borrowFroz,omitempty"`
	// Detailed asset information in all currencies
	Details []GetAccountSubaccountBalancesV5RespDataDetailsInner `json:"details,omitempty"`
	// Initial margin requirement in `USD`   The sum of initial margins of all open positions and pending orders under cross-margin mode in `USD`.   Applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`
	Imr *string `json:"imr,omitempty"`
	// Isolated margin equity in `USD`  Applicable to `Spot and futures mode`/`Multi-currency margin`/`Portfolio margin`
	IsoEq *string `json:"isoEq,omitempty"`
	// Margin ratio in `USD`   Applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`
	MgnRatio *string `json:"mgnRatio,omitempty"`
	// Maintenance margin requirement in `USD`   The sum of maintenance margins of all open positions and pending orders under cross-margin mode in `USD`.   Applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`
	Mmr *string `json:"mmr,omitempty"`
	// Notional value of positions in `USD`   Applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`
	NotionalUsd *string `json:"notionalUsd,omitempty"`
	// Notional value for `Borrow` in USD  Applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`
	NotionalUsdForBorrow *string `json:"notionalUsdForBorrow,omitempty"`
	// Notional value of positions for `Expiry Futures` in USD  Applicable to `Multi-currency margin`/`Portfolio margin`
	NotionalUsdForFutures *string `json:"notionalUsdForFutures,omitempty"`
	// Notional value of positions for `Option` in USD  Applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`
	NotionalUsdForOption *string `json:"notionalUsdForOption,omitempty"`
	// Notional value of positions for `Perpetual Futures` in USD  Applicable to `Multi-currency margin`/`Portfolio margin`
	NotionalUsdForSwap *string `json:"notionalUsdForSwap,omitempty"`
	// Cross margin frozen for pending orders in `USD`   Only applicable to `Spot mode`/`Multi-currency margin`/`Portfolio margin`
	OrdFroz *string `json:"ordFroz,omitempty"`
	// The total amount of equity in `USD`
	TotalEq *string `json:"totalEq,omitempty"`
	// Update time of account information, millisecond format of Unix timestamp, e.g. `1597026383085`
	UTime *string `json:"uTime,omitempty"`
	// Cross-margin info of unrealized profit and loss at the account level in `USD`  Applicable to `Multi-currency margin`/`Portfolio margin`
	Upl *string `json:"upl,omitempty"`
}

// NewGetAccountSubaccountBalancesV5RespData instantiates a new GetAccountSubaccountBalancesV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountSubaccountBalancesV5RespData() *GetAccountSubaccountBalancesV5RespData {
	this := GetAccountSubaccountBalancesV5RespData{}
	var adjEq string = ""
	this.AdjEq = &adjEq
	var borrowFroz string = ""
	this.BorrowFroz = &borrowFroz
	var imr string = ""
	this.Imr = &imr
	var isoEq string = ""
	this.IsoEq = &isoEq
	var mgnRatio string = ""
	this.MgnRatio = &mgnRatio
	var mmr string = ""
	this.Mmr = &mmr
	var notionalUsd string = ""
	this.NotionalUsd = &notionalUsd
	var notionalUsdForBorrow string = ""
	this.NotionalUsdForBorrow = &notionalUsdForBorrow
	var notionalUsdForFutures string = ""
	this.NotionalUsdForFutures = &notionalUsdForFutures
	var notionalUsdForOption string = ""
	this.NotionalUsdForOption = &notionalUsdForOption
	var notionalUsdForSwap string = ""
	this.NotionalUsdForSwap = &notionalUsdForSwap
	var ordFroz string = ""
	this.OrdFroz = &ordFroz
	var totalEq string = ""
	this.TotalEq = &totalEq
	var uTime string = ""
	this.UTime = &uTime
	var upl string = ""
	this.Upl = &upl
	return &this
}

// NewGetAccountSubaccountBalancesV5RespDataWithDefaults instantiates a new GetAccountSubaccountBalancesV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountSubaccountBalancesV5RespDataWithDefaults() *GetAccountSubaccountBalancesV5RespData {
	this := GetAccountSubaccountBalancesV5RespData{}
	var adjEq string = ""
	this.AdjEq = &adjEq
	var borrowFroz string = ""
	this.BorrowFroz = &borrowFroz
	var imr string = ""
	this.Imr = &imr
	var isoEq string = ""
	this.IsoEq = &isoEq
	var mgnRatio string = ""
	this.MgnRatio = &mgnRatio
	var mmr string = ""
	this.Mmr = &mmr
	var notionalUsd string = ""
	this.NotionalUsd = &notionalUsd
	var notionalUsdForBorrow string = ""
	this.NotionalUsdForBorrow = &notionalUsdForBorrow
	var notionalUsdForFutures string = ""
	this.NotionalUsdForFutures = &notionalUsdForFutures
	var notionalUsdForOption string = ""
	this.NotionalUsdForOption = &notionalUsdForOption
	var notionalUsdForSwap string = ""
	this.NotionalUsdForSwap = &notionalUsdForSwap
	var ordFroz string = ""
	this.OrdFroz = &ordFroz
	var totalEq string = ""
	this.TotalEq = &totalEq
	var uTime string = ""
	this.UTime = &uTime
	var upl string = ""
	this.Upl = &upl
	return &this
}

// GetAdjEq returns the AdjEq field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetAdjEq() string {
	if o == nil || IsNil(o.AdjEq) {
		var ret string
		return ret
	}
	return *o.AdjEq
}

// GetAdjEqOk returns a tuple with the AdjEq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetAdjEqOk() (*string, bool) {
	if o == nil || IsNil(o.AdjEq) {
		return nil, false
	}
	return o.AdjEq, true
}

// HasAdjEq returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasAdjEq() bool {
	if o != nil && !IsNil(o.AdjEq) {
		return true
	}

	return false
}

// SetAdjEq gets a reference to the given string and assigns it to the AdjEq field.
func (o *GetAccountSubaccountBalancesV5RespData) SetAdjEq(v string) {
	o.AdjEq = &v
}

// GetBorrowFroz returns the BorrowFroz field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetBorrowFroz() string {
	if o == nil || IsNil(o.BorrowFroz) {
		var ret string
		return ret
	}
	return *o.BorrowFroz
}

// GetBorrowFrozOk returns a tuple with the BorrowFroz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetBorrowFrozOk() (*string, bool) {
	if o == nil || IsNil(o.BorrowFroz) {
		return nil, false
	}
	return o.BorrowFroz, true
}

// HasBorrowFroz returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasBorrowFroz() bool {
	if o != nil && !IsNil(o.BorrowFroz) {
		return true
	}

	return false
}

// SetBorrowFroz gets a reference to the given string and assigns it to the BorrowFroz field.
func (o *GetAccountSubaccountBalancesV5RespData) SetBorrowFroz(v string) {
	o.BorrowFroz = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetDetails() []GetAccountSubaccountBalancesV5RespDataDetailsInner {
	if o == nil || IsNil(o.Details) {
		var ret []GetAccountSubaccountBalancesV5RespDataDetailsInner
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetDetailsOk() ([]GetAccountSubaccountBalancesV5RespDataDetailsInner, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []GetAccountSubaccountBalancesV5RespDataDetailsInner and assigns it to the Details field.
func (o *GetAccountSubaccountBalancesV5RespData) SetDetails(v []GetAccountSubaccountBalancesV5RespDataDetailsInner) {
	o.Details = v
}

// GetImr returns the Imr field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetImr() string {
	if o == nil || IsNil(o.Imr) {
		var ret string
		return ret
	}
	return *o.Imr
}

// GetImrOk returns a tuple with the Imr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetImrOk() (*string, bool) {
	if o == nil || IsNil(o.Imr) {
		return nil, false
	}
	return o.Imr, true
}

// HasImr returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasImr() bool {
	if o != nil && !IsNil(o.Imr) {
		return true
	}

	return false
}

// SetImr gets a reference to the given string and assigns it to the Imr field.
func (o *GetAccountSubaccountBalancesV5RespData) SetImr(v string) {
	o.Imr = &v
}

// GetIsoEq returns the IsoEq field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetIsoEq() string {
	if o == nil || IsNil(o.IsoEq) {
		var ret string
		return ret
	}
	return *o.IsoEq
}

// GetIsoEqOk returns a tuple with the IsoEq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetIsoEqOk() (*string, bool) {
	if o == nil || IsNil(o.IsoEq) {
		return nil, false
	}
	return o.IsoEq, true
}

// HasIsoEq returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasIsoEq() bool {
	if o != nil && !IsNil(o.IsoEq) {
		return true
	}

	return false
}

// SetIsoEq gets a reference to the given string and assigns it to the IsoEq field.
func (o *GetAccountSubaccountBalancesV5RespData) SetIsoEq(v string) {
	o.IsoEq = &v
}

// GetMgnRatio returns the MgnRatio field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetMgnRatio() string {
	if o == nil || IsNil(o.MgnRatio) {
		var ret string
		return ret
	}
	return *o.MgnRatio
}

// GetMgnRatioOk returns a tuple with the MgnRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetMgnRatioOk() (*string, bool) {
	if o == nil || IsNil(o.MgnRatio) {
		return nil, false
	}
	return o.MgnRatio, true
}

// HasMgnRatio returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasMgnRatio() bool {
	if o != nil && !IsNil(o.MgnRatio) {
		return true
	}

	return false
}

// SetMgnRatio gets a reference to the given string and assigns it to the MgnRatio field.
func (o *GetAccountSubaccountBalancesV5RespData) SetMgnRatio(v string) {
	o.MgnRatio = &v
}

// GetMmr returns the Mmr field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetMmr() string {
	if o == nil || IsNil(o.Mmr) {
		var ret string
		return ret
	}
	return *o.Mmr
}

// GetMmrOk returns a tuple with the Mmr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetMmrOk() (*string, bool) {
	if o == nil || IsNil(o.Mmr) {
		return nil, false
	}
	return o.Mmr, true
}

// HasMmr returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasMmr() bool {
	if o != nil && !IsNil(o.Mmr) {
		return true
	}

	return false
}

// SetMmr gets a reference to the given string and assigns it to the Mmr field.
func (o *GetAccountSubaccountBalancesV5RespData) SetMmr(v string) {
	o.Mmr = &v
}

// GetNotionalUsd returns the NotionalUsd field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsd() string {
	if o == nil || IsNil(o.NotionalUsd) {
		var ret string
		return ret
	}
	return *o.NotionalUsd
}

// GetNotionalUsdOk returns a tuple with the NotionalUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdOk() (*string, bool) {
	if o == nil || IsNil(o.NotionalUsd) {
		return nil, false
	}
	return o.NotionalUsd, true
}

// HasNotionalUsd returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasNotionalUsd() bool {
	if o != nil && !IsNil(o.NotionalUsd) {
		return true
	}

	return false
}

// SetNotionalUsd gets a reference to the given string and assigns it to the NotionalUsd field.
func (o *GetAccountSubaccountBalancesV5RespData) SetNotionalUsd(v string) {
	o.NotionalUsd = &v
}

// GetNotionalUsdForBorrow returns the NotionalUsdForBorrow field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForBorrow() string {
	if o == nil || IsNil(o.NotionalUsdForBorrow) {
		var ret string
		return ret
	}
	return *o.NotionalUsdForBorrow
}

// GetNotionalUsdForBorrowOk returns a tuple with the NotionalUsdForBorrow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForBorrowOk() (*string, bool) {
	if o == nil || IsNil(o.NotionalUsdForBorrow) {
		return nil, false
	}
	return o.NotionalUsdForBorrow, true
}

// HasNotionalUsdForBorrow returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasNotionalUsdForBorrow() bool {
	if o != nil && !IsNil(o.NotionalUsdForBorrow) {
		return true
	}

	return false
}

// SetNotionalUsdForBorrow gets a reference to the given string and assigns it to the NotionalUsdForBorrow field.
func (o *GetAccountSubaccountBalancesV5RespData) SetNotionalUsdForBorrow(v string) {
	o.NotionalUsdForBorrow = &v
}

// GetNotionalUsdForFutures returns the NotionalUsdForFutures field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForFutures() string {
	if o == nil || IsNil(o.NotionalUsdForFutures) {
		var ret string
		return ret
	}
	return *o.NotionalUsdForFutures
}

// GetNotionalUsdForFuturesOk returns a tuple with the NotionalUsdForFutures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForFuturesOk() (*string, bool) {
	if o == nil || IsNil(o.NotionalUsdForFutures) {
		return nil, false
	}
	return o.NotionalUsdForFutures, true
}

// HasNotionalUsdForFutures returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasNotionalUsdForFutures() bool {
	if o != nil && !IsNil(o.NotionalUsdForFutures) {
		return true
	}

	return false
}

// SetNotionalUsdForFutures gets a reference to the given string and assigns it to the NotionalUsdForFutures field.
func (o *GetAccountSubaccountBalancesV5RespData) SetNotionalUsdForFutures(v string) {
	o.NotionalUsdForFutures = &v
}

// GetNotionalUsdForOption returns the NotionalUsdForOption field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForOption() string {
	if o == nil || IsNil(o.NotionalUsdForOption) {
		var ret string
		return ret
	}
	return *o.NotionalUsdForOption
}

// GetNotionalUsdForOptionOk returns a tuple with the NotionalUsdForOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForOptionOk() (*string, bool) {
	if o == nil || IsNil(o.NotionalUsdForOption) {
		return nil, false
	}
	return o.NotionalUsdForOption, true
}

// HasNotionalUsdForOption returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasNotionalUsdForOption() bool {
	if o != nil && !IsNil(o.NotionalUsdForOption) {
		return true
	}

	return false
}

// SetNotionalUsdForOption gets a reference to the given string and assigns it to the NotionalUsdForOption field.
func (o *GetAccountSubaccountBalancesV5RespData) SetNotionalUsdForOption(v string) {
	o.NotionalUsdForOption = &v
}

// GetNotionalUsdForSwap returns the NotionalUsdForSwap field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForSwap() string {
	if o == nil || IsNil(o.NotionalUsdForSwap) {
		var ret string
		return ret
	}
	return *o.NotionalUsdForSwap
}

// GetNotionalUsdForSwapOk returns a tuple with the NotionalUsdForSwap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetNotionalUsdForSwapOk() (*string, bool) {
	if o == nil || IsNil(o.NotionalUsdForSwap) {
		return nil, false
	}
	return o.NotionalUsdForSwap, true
}

// HasNotionalUsdForSwap returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasNotionalUsdForSwap() bool {
	if o != nil && !IsNil(o.NotionalUsdForSwap) {
		return true
	}

	return false
}

// SetNotionalUsdForSwap gets a reference to the given string and assigns it to the NotionalUsdForSwap field.
func (o *GetAccountSubaccountBalancesV5RespData) SetNotionalUsdForSwap(v string) {
	o.NotionalUsdForSwap = &v
}

// GetOrdFroz returns the OrdFroz field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetOrdFroz() string {
	if o == nil || IsNil(o.OrdFroz) {
		var ret string
		return ret
	}
	return *o.OrdFroz
}

// GetOrdFrozOk returns a tuple with the OrdFroz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetOrdFrozOk() (*string, bool) {
	if o == nil || IsNil(o.OrdFroz) {
		return nil, false
	}
	return o.OrdFroz, true
}

// HasOrdFroz returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasOrdFroz() bool {
	if o != nil && !IsNil(o.OrdFroz) {
		return true
	}

	return false
}

// SetOrdFroz gets a reference to the given string and assigns it to the OrdFroz field.
func (o *GetAccountSubaccountBalancesV5RespData) SetOrdFroz(v string) {
	o.OrdFroz = &v
}

// GetTotalEq returns the TotalEq field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetTotalEq() string {
	if o == nil || IsNil(o.TotalEq) {
		var ret string
		return ret
	}
	return *o.TotalEq
}

// GetTotalEqOk returns a tuple with the TotalEq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetTotalEqOk() (*string, bool) {
	if o == nil || IsNil(o.TotalEq) {
		return nil, false
	}
	return o.TotalEq, true
}

// HasTotalEq returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasTotalEq() bool {
	if o != nil && !IsNil(o.TotalEq) {
		return true
	}

	return false
}

// SetTotalEq gets a reference to the given string and assigns it to the TotalEq field.
func (o *GetAccountSubaccountBalancesV5RespData) SetTotalEq(v string) {
	o.TotalEq = &v
}

// GetUTime returns the UTime field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetUTime() string {
	if o == nil || IsNil(o.UTime) {
		var ret string
		return ret
	}
	return *o.UTime
}

// GetUTimeOk returns a tuple with the UTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetUTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UTime) {
		return nil, false
	}
	return o.UTime, true
}

// HasUTime returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasUTime() bool {
	if o != nil && !IsNil(o.UTime) {
		return true
	}

	return false
}

// SetUTime gets a reference to the given string and assigns it to the UTime field.
func (o *GetAccountSubaccountBalancesV5RespData) SetUTime(v string) {
	o.UTime = &v
}

// GetUpl returns the Upl field value if set, zero value otherwise.
func (o *GetAccountSubaccountBalancesV5RespData) GetUpl() string {
	if o == nil || IsNil(o.Upl) {
		var ret string
		return ret
	}
	return *o.Upl
}

// GetUplOk returns a tuple with the Upl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountSubaccountBalancesV5RespData) GetUplOk() (*string, bool) {
	if o == nil || IsNil(o.Upl) {
		return nil, false
	}
	return o.Upl, true
}

// HasUpl returns a boolean if a field has been set.
func (o *GetAccountSubaccountBalancesV5RespData) HasUpl() bool {
	if o != nil && !IsNil(o.Upl) {
		return true
	}

	return false
}

// SetUpl gets a reference to the given string and assigns it to the Upl field.
func (o *GetAccountSubaccountBalancesV5RespData) SetUpl(v string) {
	o.Upl = &v
}

func (o GetAccountSubaccountBalancesV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountSubaccountBalancesV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdjEq) {
		toSerialize["adjEq"] = o.AdjEq
	}
	if !IsNil(o.BorrowFroz) {
		toSerialize["borrowFroz"] = o.BorrowFroz
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Imr) {
		toSerialize["imr"] = o.Imr
	}
	if !IsNil(o.IsoEq) {
		toSerialize["isoEq"] = o.IsoEq
	}
	if !IsNil(o.MgnRatio) {
		toSerialize["mgnRatio"] = o.MgnRatio
	}
	if !IsNil(o.Mmr) {
		toSerialize["mmr"] = o.Mmr
	}
	if !IsNil(o.NotionalUsd) {
		toSerialize["notionalUsd"] = o.NotionalUsd
	}
	if !IsNil(o.NotionalUsdForBorrow) {
		toSerialize["notionalUsdForBorrow"] = o.NotionalUsdForBorrow
	}
	if !IsNil(o.NotionalUsdForFutures) {
		toSerialize["notionalUsdForFutures"] = o.NotionalUsdForFutures
	}
	if !IsNil(o.NotionalUsdForOption) {
		toSerialize["notionalUsdForOption"] = o.NotionalUsdForOption
	}
	if !IsNil(o.NotionalUsdForSwap) {
		toSerialize["notionalUsdForSwap"] = o.NotionalUsdForSwap
	}
	if !IsNil(o.OrdFroz) {
		toSerialize["ordFroz"] = o.OrdFroz
	}
	if !IsNil(o.TotalEq) {
		toSerialize["totalEq"] = o.TotalEq
	}
	if !IsNil(o.UTime) {
		toSerialize["uTime"] = o.UTime
	}
	if !IsNil(o.Upl) {
		toSerialize["upl"] = o.Upl
	}
	return toSerialize, nil
}

type NullableGetAccountSubaccountBalancesV5RespData struct {
	value *GetAccountSubaccountBalancesV5RespData
	isSet bool
}

func (v NullableGetAccountSubaccountBalancesV5RespData) Get() *GetAccountSubaccountBalancesV5RespData {
	return v.value
}

func (v *NullableGetAccountSubaccountBalancesV5RespData) Set(val *GetAccountSubaccountBalancesV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountSubaccountBalancesV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountSubaccountBalancesV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountSubaccountBalancesV5RespData(val *GetAccountSubaccountBalancesV5RespData) *NullableGetAccountSubaccountBalancesV5RespData {
	return &NullableGetAccountSubaccountBalancesV5RespData{value: val, isSet: true}
}

func (v NullableGetAccountSubaccountBalancesV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountSubaccountBalancesV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


