/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRfqCreateRfqV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqCreateRfqV5Req{}

// CreateRfqCreateRfqV5Req struct for CreateRfqCreateRfqV5Req
type CreateRfqCreateRfqV5Req struct {
	// Whether the RFQ can be partially filled provided that the shape of legs stays the same. Valid values are `true` or `false`.   `false` by default.
	AllowPartialExecution *bool `json:"allowPartialExecution,omitempty"`
	// Submit RFQ on a disclosed or anonymous basis. Valid values are `true` or `false`.   If not specified, the default value is `false`.   When anonymous = true, the takerâ€™s identify is not disclosed to maker even after trade execution.
	Anonymous *bool `json:"anonymous,omitempty"`
	// Client-supplied RFQ ID.   A combination of case-sensitive alpha-numeric, all numbers, or all letters of up to 32 characters.
	ClRfqId *string `json:"clRfqId,omitempty"`
	// The trader code(s) of the counterparties who receive the RFQ. Can be found via /api/v5/rfq/counterparties/
	Counterparties []string `json:"counterparties"`
	// An Array of objects containing each leg of the RFQ. Maximum 15 legs can be placed per request
	Legs []CreateRfqCreateRfqV5ReqLegsInner `json:"legs"`
	// RFQ tag.   The block trade associated with the RFQ will have the same tag.   A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 16 characters.
	Tag *string `json:"tag,omitempty"`
}

type _CreateRfqCreateRfqV5Req CreateRfqCreateRfqV5Req

// NewCreateRfqCreateRfqV5Req instantiates a new CreateRfqCreateRfqV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqCreateRfqV5Req(counterparties []string, legs []CreateRfqCreateRfqV5ReqLegsInner) *CreateRfqCreateRfqV5Req {
	this := CreateRfqCreateRfqV5Req{}
	var clRfqId string = ""
	this.ClRfqId = &clRfqId
	this.Counterparties = counterparties
	this.Legs = legs
	var tag string = ""
	this.Tag = &tag
	return &this
}

// NewCreateRfqCreateRfqV5ReqWithDefaults instantiates a new CreateRfqCreateRfqV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqCreateRfqV5ReqWithDefaults() *CreateRfqCreateRfqV5Req {
	this := CreateRfqCreateRfqV5Req{}
	var clRfqId string = ""
	this.ClRfqId = &clRfqId
	var tag string = ""
	this.Tag = &tag
	return &this
}

// GetAllowPartialExecution returns the AllowPartialExecution field value if set, zero value otherwise.
func (o *CreateRfqCreateRfqV5Req) GetAllowPartialExecution() bool {
	if o == nil || IsNil(o.AllowPartialExecution) {
		var ret bool
		return ret
	}
	return *o.AllowPartialExecution
}

// GetAllowPartialExecutionOk returns a tuple with the AllowPartialExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateRfqV5Req) GetAllowPartialExecutionOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPartialExecution) {
		return nil, false
	}
	return o.AllowPartialExecution, true
}

// HasAllowPartialExecution returns a boolean if a field has been set.
func (o *CreateRfqCreateRfqV5Req) HasAllowPartialExecution() bool {
	if o != nil && !IsNil(o.AllowPartialExecution) {
		return true
	}

	return false
}

// SetAllowPartialExecution gets a reference to the given bool and assigns it to the AllowPartialExecution field.
func (o *CreateRfqCreateRfqV5Req) SetAllowPartialExecution(v bool) {
	o.AllowPartialExecution = &v
}

// GetAnonymous returns the Anonymous field value if set, zero value otherwise.
func (o *CreateRfqCreateRfqV5Req) GetAnonymous() bool {
	if o == nil || IsNil(o.Anonymous) {
		var ret bool
		return ret
	}
	return *o.Anonymous
}

// GetAnonymousOk returns a tuple with the Anonymous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateRfqV5Req) GetAnonymousOk() (*bool, bool) {
	if o == nil || IsNil(o.Anonymous) {
		return nil, false
	}
	return o.Anonymous, true
}

// HasAnonymous returns a boolean if a field has been set.
func (o *CreateRfqCreateRfqV5Req) HasAnonymous() bool {
	if o != nil && !IsNil(o.Anonymous) {
		return true
	}

	return false
}

// SetAnonymous gets a reference to the given bool and assigns it to the Anonymous field.
func (o *CreateRfqCreateRfqV5Req) SetAnonymous(v bool) {
	o.Anonymous = &v
}

// GetClRfqId returns the ClRfqId field value if set, zero value otherwise.
func (o *CreateRfqCreateRfqV5Req) GetClRfqId() string {
	if o == nil || IsNil(o.ClRfqId) {
		var ret string
		return ret
	}
	return *o.ClRfqId
}

// GetClRfqIdOk returns a tuple with the ClRfqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateRfqV5Req) GetClRfqIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClRfqId) {
		return nil, false
	}
	return o.ClRfqId, true
}

// HasClRfqId returns a boolean if a field has been set.
func (o *CreateRfqCreateRfqV5Req) HasClRfqId() bool {
	if o != nil && !IsNil(o.ClRfqId) {
		return true
	}

	return false
}

// SetClRfqId gets a reference to the given string and assigns it to the ClRfqId field.
func (o *CreateRfqCreateRfqV5Req) SetClRfqId(v string) {
	o.ClRfqId = &v
}

// GetCounterparties returns the Counterparties field value
func (o *CreateRfqCreateRfqV5Req) GetCounterparties() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Counterparties
}

// GetCounterpartiesOk returns a tuple with the Counterparties field value
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateRfqV5Req) GetCounterpartiesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Counterparties, true
}

// SetCounterparties sets field value
func (o *CreateRfqCreateRfqV5Req) SetCounterparties(v []string) {
	o.Counterparties = v
}

// GetLegs returns the Legs field value
func (o *CreateRfqCreateRfqV5Req) GetLegs() []CreateRfqCreateRfqV5ReqLegsInner {
	if o == nil {
		var ret []CreateRfqCreateRfqV5ReqLegsInner
		return ret
	}

	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateRfqV5Req) GetLegsOk() ([]CreateRfqCreateRfqV5ReqLegsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Legs, true
}

// SetLegs sets field value
func (o *CreateRfqCreateRfqV5Req) SetLegs(v []CreateRfqCreateRfqV5ReqLegsInner) {
	o.Legs = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *CreateRfqCreateRfqV5Req) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateRfqV5Req) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *CreateRfqCreateRfqV5Req) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *CreateRfqCreateRfqV5Req) SetTag(v string) {
	o.Tag = &v
}

func (o CreateRfqCreateRfqV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqCreateRfqV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowPartialExecution) {
		toSerialize["allowPartialExecution"] = o.AllowPartialExecution
	}
	if !IsNil(o.Anonymous) {
		toSerialize["anonymous"] = o.Anonymous
	}
	if !IsNil(o.ClRfqId) {
		toSerialize["clRfqId"] = o.ClRfqId
	}
	toSerialize["counterparties"] = o.Counterparties
	toSerialize["legs"] = o.Legs
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

func (o *CreateRfqCreateRfqV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"counterparties",
		"legs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRfqCreateRfqV5Req := _CreateRfqCreateRfqV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRfqCreateRfqV5Req)

	if err != nil {
		return err
	}

	*o = CreateRfqCreateRfqV5Req(varCreateRfqCreateRfqV5Req)

	return err
}

type NullableCreateRfqCreateRfqV5Req struct {
	value *CreateRfqCreateRfqV5Req
	isSet bool
}

func (v NullableCreateRfqCreateRfqV5Req) Get() *CreateRfqCreateRfqV5Req {
	return v.value
}

func (v *NullableCreateRfqCreateRfqV5Req) Set(val *CreateRfqCreateRfqV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqCreateRfqV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqCreateRfqV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqCreateRfqV5Req(val *CreateRfqCreateRfqV5Req) *NullableCreateRfqCreateRfqV5Req {
	return &NullableCreateRfqCreateRfqV5Req{value: val, isSet: true}
}

func (v NullableCreateRfqCreateRfqV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqCreateRfqV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


