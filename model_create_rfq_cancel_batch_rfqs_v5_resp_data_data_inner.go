/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateRfqCancelBatchRfqsV5RespDataDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqCancelBatchRfqsV5RespDataDataInner{}

// CreateRfqCancelBatchRfqsV5RespDataDataInner struct for CreateRfqCancelBatchRfqsV5RespDataDataInner
type CreateRfqCancelBatchRfqsV5RespDataDataInner struct {
	// Client-supplied RFQ ID.
	ClRfqId *string `json:"clRfqId,omitempty"`
	// RFQ ID
	RfqId *string `json:"rfqId,omitempty"`
	// The code of the event execution result, `0` means success.
	SCode *string `json:"sCode,omitempty"`
	// Rejection message if the request is unsuccessful.
	SMsg *string `json:"sMsg,omitempty"`
}

// NewCreateRfqCancelBatchRfqsV5RespDataDataInner instantiates a new CreateRfqCancelBatchRfqsV5RespDataDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqCancelBatchRfqsV5RespDataDataInner() *CreateRfqCancelBatchRfqsV5RespDataDataInner {
	this := CreateRfqCancelBatchRfqsV5RespDataDataInner{}
	var clRfqId string = ""
	this.ClRfqId = &clRfqId
	var rfqId string = ""
	this.RfqId = &rfqId
	var sCode string = ""
	this.SCode = &sCode
	var sMsg string = ""
	this.SMsg = &sMsg
	return &this
}

// NewCreateRfqCancelBatchRfqsV5RespDataDataInnerWithDefaults instantiates a new CreateRfqCancelBatchRfqsV5RespDataDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqCancelBatchRfqsV5RespDataDataInnerWithDefaults() *CreateRfqCancelBatchRfqsV5RespDataDataInner {
	this := CreateRfqCancelBatchRfqsV5RespDataDataInner{}
	var clRfqId string = ""
	this.ClRfqId = &clRfqId
	var rfqId string = ""
	this.RfqId = &rfqId
	var sCode string = ""
	this.SCode = &sCode
	var sMsg string = ""
	this.SMsg = &sMsg
	return &this
}

// GetClRfqId returns the ClRfqId field value if set, zero value otherwise.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetClRfqId() string {
	if o == nil || IsNil(o.ClRfqId) {
		var ret string
		return ret
	}
	return *o.ClRfqId
}

// GetClRfqIdOk returns a tuple with the ClRfqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetClRfqIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClRfqId) {
		return nil, false
	}
	return o.ClRfqId, true
}

// HasClRfqId returns a boolean if a field has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) HasClRfqId() bool {
	if o != nil && !IsNil(o.ClRfqId) {
		return true
	}

	return false
}

// SetClRfqId gets a reference to the given string and assigns it to the ClRfqId field.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) SetClRfqId(v string) {
	o.ClRfqId = &v
}

// GetRfqId returns the RfqId field value if set, zero value otherwise.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetRfqId() string {
	if o == nil || IsNil(o.RfqId) {
		var ret string
		return ret
	}
	return *o.RfqId
}

// GetRfqIdOk returns a tuple with the RfqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetRfqIdOk() (*string, bool) {
	if o == nil || IsNil(o.RfqId) {
		return nil, false
	}
	return o.RfqId, true
}

// HasRfqId returns a boolean if a field has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) HasRfqId() bool {
	if o != nil && !IsNil(o.RfqId) {
		return true
	}

	return false
}

// SetRfqId gets a reference to the given string and assigns it to the RfqId field.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) SetRfqId(v string) {
	o.RfqId = &v
}

// GetSCode returns the SCode field value if set, zero value otherwise.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetSCode() string {
	if o == nil || IsNil(o.SCode) {
		var ret string
		return ret
	}
	return *o.SCode
}

// GetSCodeOk returns a tuple with the SCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetSCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SCode) {
		return nil, false
	}
	return o.SCode, true
}

// HasSCode returns a boolean if a field has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) HasSCode() bool {
	if o != nil && !IsNil(o.SCode) {
		return true
	}

	return false
}

// SetSCode gets a reference to the given string and assigns it to the SCode field.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) SetSCode(v string) {
	o.SCode = &v
}

// GetSMsg returns the SMsg field value if set, zero value otherwise.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetSMsg() string {
	if o == nil || IsNil(o.SMsg) {
		var ret string
		return ret
	}
	return *o.SMsg
}

// GetSMsgOk returns a tuple with the SMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) GetSMsgOk() (*string, bool) {
	if o == nil || IsNil(o.SMsg) {
		return nil, false
	}
	return o.SMsg, true
}

// HasSMsg returns a boolean if a field has been set.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) HasSMsg() bool {
	if o != nil && !IsNil(o.SMsg) {
		return true
	}

	return false
}

// SetSMsg gets a reference to the given string and assigns it to the SMsg field.
func (o *CreateRfqCancelBatchRfqsV5RespDataDataInner) SetSMsg(v string) {
	o.SMsg = &v
}

func (o CreateRfqCancelBatchRfqsV5RespDataDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqCancelBatchRfqsV5RespDataDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClRfqId) {
		toSerialize["clRfqId"] = o.ClRfqId
	}
	if !IsNil(o.RfqId) {
		toSerialize["rfqId"] = o.RfqId
	}
	if !IsNil(o.SCode) {
		toSerialize["sCode"] = o.SCode
	}
	if !IsNil(o.SMsg) {
		toSerialize["sMsg"] = o.SMsg
	}
	return toSerialize, nil
}

type NullableCreateRfqCancelBatchRfqsV5RespDataDataInner struct {
	value *CreateRfqCancelBatchRfqsV5RespDataDataInner
	isSet bool
}

func (v NullableCreateRfqCancelBatchRfqsV5RespDataDataInner) Get() *CreateRfqCancelBatchRfqsV5RespDataDataInner {
	return v.value
}

func (v *NullableCreateRfqCancelBatchRfqsV5RespDataDataInner) Set(val *CreateRfqCancelBatchRfqsV5RespDataDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqCancelBatchRfqsV5RespDataDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqCancelBatchRfqsV5RespDataDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqCancelBatchRfqsV5RespDataDataInner(val *CreateRfqCancelBatchRfqsV5RespDataDataInner) *NullableCreateRfqCancelBatchRfqsV5RespDataDataInner {
	return &NullableCreateRfqCancelBatchRfqsV5RespDataDataInner{value: val, isSet: true}
}

func (v NullableCreateRfqCancelBatchRfqsV5RespDataDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqCancelBatchRfqsV5RespDataDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


