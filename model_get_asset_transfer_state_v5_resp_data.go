/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetAssetTransferStateV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAssetTransferStateV5RespData{}

// GetAssetTransferStateV5RespData struct for GetAssetTransferStateV5RespData
type GetAssetTransferStateV5RespData struct {
	// Amount to be transferred
	Amt *string `json:"amt,omitempty"`
	// Currency, e.g. `USDT`
	Ccy *string `json:"ccy,omitempty"`
	// Client-supplied ID
	ClientId *string `json:"clientId,omitempty"`
	// The remitting account  `6`: Funding account  `18`: Trading account
	From *string `json:"from,omitempty"`
	// deprecated
	// Deprecated
	InstId *string `json:"instId,omitempty"`
	// Transfer state  `success`  `pending`  `failed`
	State *string `json:"state,omitempty"`
	// Name of the sub-account
	SubAcct *string `json:"subAcct,omitempty"`
	// The beneficiary account  `6`: Funding account  `18`: Trading account
	To *string `json:"to,omitempty"`
	// deprecated
	// Deprecated
	ToInstId *string `json:"toInstId,omitempty"`
	// Transfer ID
	TransId *string `json:"transId,omitempty"`
	// Transfer type  `0`: transfer within account  `1`: master account to sub-account (Only applicable to API Key from master account)   `2`: sub-account to master account (Only applicable to APIKey from master account)  `3`: sub-account to master account (Only applicable to APIKey from sub-account)  `4`: sub-account to sub-account (Only applicable to APIKey from sub-account, and target account needs to be another sub-account which belongs to same master account)
	Type *string `json:"type,omitempty"`
}

// NewGetAssetTransferStateV5RespData instantiates a new GetAssetTransferStateV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAssetTransferStateV5RespData() *GetAssetTransferStateV5RespData {
	this := GetAssetTransferStateV5RespData{}
	var amt string = ""
	this.Amt = &amt
	var ccy string = ""
	this.Ccy = &ccy
	var clientId string = ""
	this.ClientId = &clientId
	var from string = ""
	this.From = &from
	var instId string = ""
	this.InstId = &instId
	var state string = ""
	this.State = &state
	var subAcct string = ""
	this.SubAcct = &subAcct
	var to string = ""
	this.To = &to
	var toInstId string = ""
	this.ToInstId = &toInstId
	var transId string = ""
	this.TransId = &transId
	var type_ string = ""
	this.Type = &type_
	return &this
}

// NewGetAssetTransferStateV5RespDataWithDefaults instantiates a new GetAssetTransferStateV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAssetTransferStateV5RespDataWithDefaults() *GetAssetTransferStateV5RespData {
	this := GetAssetTransferStateV5RespData{}
	var amt string = ""
	this.Amt = &amt
	var ccy string = ""
	this.Ccy = &ccy
	var clientId string = ""
	this.ClientId = &clientId
	var from string = ""
	this.From = &from
	var instId string = ""
	this.InstId = &instId
	var state string = ""
	this.State = &state
	var subAcct string = ""
	this.SubAcct = &subAcct
	var to string = ""
	this.To = &to
	var toInstId string = ""
	this.ToInstId = &toInstId
	var transId string = ""
	this.TransId = &transId
	var type_ string = ""
	this.Type = &type_
	return &this
}

// GetAmt returns the Amt field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetAmt() string {
	if o == nil || IsNil(o.Amt) {
		var ret string
		return ret
	}
	return *o.Amt
}

// GetAmtOk returns a tuple with the Amt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetAmtOk() (*string, bool) {
	if o == nil || IsNil(o.Amt) {
		return nil, false
	}
	return o.Amt, true
}

// HasAmt returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasAmt() bool {
	if o != nil && !IsNil(o.Amt) {
		return true
	}

	return false
}

// SetAmt gets a reference to the given string and assigns it to the Amt field.
func (o *GetAssetTransferStateV5RespData) SetAmt(v string) {
	o.Amt = &v
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *GetAssetTransferStateV5RespData) SetCcy(v string) {
	o.Ccy = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GetAssetTransferStateV5RespData) SetClientId(v string) {
	o.ClientId = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *GetAssetTransferStateV5RespData) SetFrom(v string) {
	o.From = &v
}

// GetInstId returns the InstId field value if set, zero value otherwise.
// Deprecated
func (o *GetAssetTransferStateV5RespData) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetAssetTransferStateV5RespData) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
// Deprecated
func (o *GetAssetTransferStateV5RespData) SetInstId(v string) {
	o.InstId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetAssetTransferStateV5RespData) SetState(v string) {
	o.State = &v
}

// GetSubAcct returns the SubAcct field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetSubAcct() string {
	if o == nil || IsNil(o.SubAcct) {
		var ret string
		return ret
	}
	return *o.SubAcct
}

// GetSubAcctOk returns a tuple with the SubAcct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetSubAcctOk() (*string, bool) {
	if o == nil || IsNil(o.SubAcct) {
		return nil, false
	}
	return o.SubAcct, true
}

// HasSubAcct returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasSubAcct() bool {
	if o != nil && !IsNil(o.SubAcct) {
		return true
	}

	return false
}

// SetSubAcct gets a reference to the given string and assigns it to the SubAcct field.
func (o *GetAssetTransferStateV5RespData) SetSubAcct(v string) {
	o.SubAcct = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *GetAssetTransferStateV5RespData) SetTo(v string) {
	o.To = &v
}

// GetToInstId returns the ToInstId field value if set, zero value otherwise.
// Deprecated
func (o *GetAssetTransferStateV5RespData) GetToInstId() string {
	if o == nil || IsNil(o.ToInstId) {
		var ret string
		return ret
	}
	return *o.ToInstId
}

// GetToInstIdOk returns a tuple with the ToInstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetAssetTransferStateV5RespData) GetToInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.ToInstId) {
		return nil, false
	}
	return o.ToInstId, true
}

// HasToInstId returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasToInstId() bool {
	if o != nil && !IsNil(o.ToInstId) {
		return true
	}

	return false
}

// SetToInstId gets a reference to the given string and assigns it to the ToInstId field.
// Deprecated
func (o *GetAssetTransferStateV5RespData) SetToInstId(v string) {
	o.ToInstId = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetTransId() string {
	if o == nil || IsNil(o.TransId) {
		var ret string
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetTransIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given string and assigns it to the TransId field.
func (o *GetAssetTransferStateV5RespData) SetTransId(v string) {
	o.TransId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAssetTransferStateV5RespData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetTransferStateV5RespData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetAssetTransferStateV5RespData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetAssetTransferStateV5RespData) SetType(v string) {
	o.Type = &v
}

func (o GetAssetTransferStateV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAssetTransferStateV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amt) {
		toSerialize["amt"] = o.Amt
	}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.InstId) {
		toSerialize["instId"] = o.InstId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SubAcct) {
		toSerialize["subAcct"] = o.SubAcct
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.ToInstId) {
		toSerialize["toInstId"] = o.ToInstId
	}
	if !IsNil(o.TransId) {
		toSerialize["transId"] = o.TransId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetAssetTransferStateV5RespData struct {
	value *GetAssetTransferStateV5RespData
	isSet bool
}

func (v NullableGetAssetTransferStateV5RespData) Get() *GetAssetTransferStateV5RespData {
	return v.value
}

func (v *NullableGetAssetTransferStateV5RespData) Set(val *GetAssetTransferStateV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAssetTransferStateV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAssetTransferStateV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAssetTransferStateV5RespData(val *GetAssetTransferStateV5RespData) *NullableGetAssetTransferStateV5RespData {
	return &NullableGetAssetTransferStateV5RespData{value: val, isSet: true}
}

func (v NullableGetAssetTransferStateV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAssetTransferStateV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


