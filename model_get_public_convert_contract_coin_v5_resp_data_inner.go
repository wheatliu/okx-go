/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetPublicConvertContractCoinV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPublicConvertContractCoinV5RespDataInner{}

// GetPublicConvertContractCoinV5RespDataInner struct for GetPublicConvertContractCoinV5RespDataInner
type GetPublicConvertContractCoinV5RespDataInner struct {
	// Instrument ID
	InstId *string `json:"instId,omitempty"`
	// Order price
	Px *string `json:"px,omitempty"`
	// Quantity to buy or sell  It is quantity of contract while converting currency to contract  It is quantity of currency while contract to currency.
	Sz *string `json:"sz,omitempty"`
	// Convert type   `1`: Convert currency to contract  `2`: Convert contract to currency
	Type *string `json:"type,omitempty"`
	// The unit of currency  `coin`  `usds`: USDT/USDC
	Unit *string `json:"unit,omitempty"`
}

// NewGetPublicConvertContractCoinV5RespDataInner instantiates a new GetPublicConvertContractCoinV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPublicConvertContractCoinV5RespDataInner() *GetPublicConvertContractCoinV5RespDataInner {
	this := GetPublicConvertContractCoinV5RespDataInner{}
	var instId string = ""
	this.InstId = &instId
	var px string = ""
	this.Px = &px
	var sz string = ""
	this.Sz = &sz
	var type_ string = ""
	this.Type = &type_
	var unit string = ""
	this.Unit = &unit
	return &this
}

// NewGetPublicConvertContractCoinV5RespDataInnerWithDefaults instantiates a new GetPublicConvertContractCoinV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPublicConvertContractCoinV5RespDataInnerWithDefaults() *GetPublicConvertContractCoinV5RespDataInner {
	this := GetPublicConvertContractCoinV5RespDataInner{}
	var instId string = ""
	this.InstId = &instId
	var px string = ""
	this.Px = &px
	var sz string = ""
	this.Sz = &sz
	var type_ string = ""
	this.Type = &type_
	var unit string = ""
	this.Unit = &unit
	return &this
}

// GetInstId returns the InstId field value if set, zero value otherwise.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
func (o *GetPublicConvertContractCoinV5RespDataInner) SetInstId(v string) {
	o.InstId = &v
}

// GetPx returns the Px field value if set, zero value otherwise.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetPx() string {
	if o == nil || IsNil(o.Px) {
		var ret string
		return ret
	}
	return *o.Px
}

// GetPxOk returns a tuple with the Px field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetPxOk() (*string, bool) {
	if o == nil || IsNil(o.Px) {
		return nil, false
	}
	return o.Px, true
}

// HasPx returns a boolean if a field has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) HasPx() bool {
	if o != nil && !IsNil(o.Px) {
		return true
	}

	return false
}

// SetPx gets a reference to the given string and assigns it to the Px field.
func (o *GetPublicConvertContractCoinV5RespDataInner) SetPx(v string) {
	o.Px = &v
}

// GetSz returns the Sz field value if set, zero value otherwise.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetSz() string {
	if o == nil || IsNil(o.Sz) {
		var ret string
		return ret
	}
	return *o.Sz
}

// GetSzOk returns a tuple with the Sz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetSzOk() (*string, bool) {
	if o == nil || IsNil(o.Sz) {
		return nil, false
	}
	return o.Sz, true
}

// HasSz returns a boolean if a field has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) HasSz() bool {
	if o != nil && !IsNil(o.Sz) {
		return true
	}

	return false
}

// SetSz gets a reference to the given string and assigns it to the Sz field.
func (o *GetPublicConvertContractCoinV5RespDataInner) SetSz(v string) {
	o.Sz = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetPublicConvertContractCoinV5RespDataInner) SetType(v string) {
	o.Type = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *GetPublicConvertContractCoinV5RespDataInner) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *GetPublicConvertContractCoinV5RespDataInner) SetUnit(v string) {
	o.Unit = &v
}

func (o GetPublicConvertContractCoinV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPublicConvertContractCoinV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstId) {
		toSerialize["instId"] = o.InstId
	}
	if !IsNil(o.Px) {
		toSerialize["px"] = o.Px
	}
	if !IsNil(o.Sz) {
		toSerialize["sz"] = o.Sz
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableGetPublicConvertContractCoinV5RespDataInner struct {
	value *GetPublicConvertContractCoinV5RespDataInner
	isSet bool
}

func (v NullableGetPublicConvertContractCoinV5RespDataInner) Get() *GetPublicConvertContractCoinV5RespDataInner {
	return v.value
}

func (v *NullableGetPublicConvertContractCoinV5RespDataInner) Set(val *GetPublicConvertContractCoinV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPublicConvertContractCoinV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPublicConvertContractCoinV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPublicConvertContractCoinV5RespDataInner(val *GetPublicConvertContractCoinV5RespDataInner) *NullableGetPublicConvertContractCoinV5RespDataInner {
	return &NullableGetPublicConvertContractCoinV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetPublicConvertContractCoinV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPublicConvertContractCoinV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


