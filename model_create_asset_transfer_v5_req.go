/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAssetTransferV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetTransferV5Req{}

// CreateAssetTransferV5Req struct for CreateAssetTransferV5Req
type CreateAssetTransferV5Req struct {
	// Amount to be transferred
	Amt string `json:"amt"`
	// Transfer currency, e.g. `USDT`
	Ccy string `json:"ccy"`
	// Client-supplied ID  A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
	ClientId *string `json:"clientId,omitempty"`
	// The remitting account  `6`: Funding account  `18`: Trading account
	From string `json:"from"`
	// Whether or not borrowed coins can be transferred out under `Spot mode`/`Multi-currency margin`/`Portfolio margin`  `true`: borrowed coins can be transferred out  `false`: borrowed coins cannot be transferred out  the default is `false`
	LoanTrans *bool `json:"loanTrans,omitempty"`
	// Ignore position risk  Default is `false`  Applicable to `Portfolio margin`
	OmitPosRisk *string `json:"omitPosRisk,omitempty"`
	// Name of the sub-account  When `type` is `1`/`2`/`4`, this parameter is required.
	SubAcct *string `json:"subAcct,omitempty"`
	// The beneficiary account  `6`: Funding account  `18`: Trading account
	To string `json:"to"`
	// Transfer type  `0`: transfer within account  `1`: master account to sub-account (Only applicable to API Key from master account)  `2`: sub-account to master account (Only applicable to API Key from master account)  `3`: sub-account to master account (Only applicable to APIKey from sub-account)  `4`: sub-account to sub-account (Only applicable to APIKey from sub-account, and target account needs to be another sub-account which belongs to same master account. Sub-account directly transfer out permission is disabled by default, set permission please refer to )  The default is `0`.  If you want to make transfer between sub-accounts by master account API key, refer to 
	Type *string `json:"type,omitempty"`
}

type _CreateAssetTransferV5Req CreateAssetTransferV5Req

// NewCreateAssetTransferV5Req instantiates a new CreateAssetTransferV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetTransferV5Req(amt string, ccy string, from string, to string) *CreateAssetTransferV5Req {
	this := CreateAssetTransferV5Req{}
	this.Amt = amt
	this.Ccy = ccy
	var clientId string = ""
	this.ClientId = &clientId
	this.From = from
	var omitPosRisk string = ""
	this.OmitPosRisk = &omitPosRisk
	var subAcct string = ""
	this.SubAcct = &subAcct
	this.To = to
	var type_ string = ""
	this.Type = &type_
	return &this
}

// NewCreateAssetTransferV5ReqWithDefaults instantiates a new CreateAssetTransferV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetTransferV5ReqWithDefaults() *CreateAssetTransferV5Req {
	this := CreateAssetTransferV5Req{}
	var amt string = ""
	this.Amt = amt
	var ccy string = ""
	this.Ccy = ccy
	var clientId string = ""
	this.ClientId = &clientId
	var from string = ""
	this.From = from
	var omitPosRisk string = ""
	this.OmitPosRisk = &omitPosRisk
	var subAcct string = ""
	this.SubAcct = &subAcct
	var to string = ""
	this.To = to
	var type_ string = ""
	this.Type = &type_
	return &this
}

// GetAmt returns the Amt field value
func (o *CreateAssetTransferV5Req) GetAmt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amt
}

// GetAmtOk returns a tuple with the Amt field value
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetAmtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amt, true
}

// SetAmt sets field value
func (o *CreateAssetTransferV5Req) SetAmt(v string) {
	o.Amt = v
}

// GetCcy returns the Ccy field value
func (o *CreateAssetTransferV5Req) GetCcy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetCcyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ccy, true
}

// SetCcy sets field value
func (o *CreateAssetTransferV5Req) SetCcy(v string) {
	o.Ccy = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CreateAssetTransferV5Req) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CreateAssetTransferV5Req) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CreateAssetTransferV5Req) SetClientId(v string) {
	o.ClientId = &v
}

// GetFrom returns the From field value
func (o *CreateAssetTransferV5Req) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *CreateAssetTransferV5Req) SetFrom(v string) {
	o.From = v
}

// GetLoanTrans returns the LoanTrans field value if set, zero value otherwise.
func (o *CreateAssetTransferV5Req) GetLoanTrans() bool {
	if o == nil || IsNil(o.LoanTrans) {
		var ret bool
		return ret
	}
	return *o.LoanTrans
}

// GetLoanTransOk returns a tuple with the LoanTrans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetLoanTransOk() (*bool, bool) {
	if o == nil || IsNil(o.LoanTrans) {
		return nil, false
	}
	return o.LoanTrans, true
}

// HasLoanTrans returns a boolean if a field has been set.
func (o *CreateAssetTransferV5Req) HasLoanTrans() bool {
	if o != nil && !IsNil(o.LoanTrans) {
		return true
	}

	return false
}

// SetLoanTrans gets a reference to the given bool and assigns it to the LoanTrans field.
func (o *CreateAssetTransferV5Req) SetLoanTrans(v bool) {
	o.LoanTrans = &v
}

// GetOmitPosRisk returns the OmitPosRisk field value if set, zero value otherwise.
func (o *CreateAssetTransferV5Req) GetOmitPosRisk() string {
	if o == nil || IsNil(o.OmitPosRisk) {
		var ret string
		return ret
	}
	return *o.OmitPosRisk
}

// GetOmitPosRiskOk returns a tuple with the OmitPosRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetOmitPosRiskOk() (*string, bool) {
	if o == nil || IsNil(o.OmitPosRisk) {
		return nil, false
	}
	return o.OmitPosRisk, true
}

// HasOmitPosRisk returns a boolean if a field has been set.
func (o *CreateAssetTransferV5Req) HasOmitPosRisk() bool {
	if o != nil && !IsNil(o.OmitPosRisk) {
		return true
	}

	return false
}

// SetOmitPosRisk gets a reference to the given string and assigns it to the OmitPosRisk field.
func (o *CreateAssetTransferV5Req) SetOmitPosRisk(v string) {
	o.OmitPosRisk = &v
}

// GetSubAcct returns the SubAcct field value if set, zero value otherwise.
func (o *CreateAssetTransferV5Req) GetSubAcct() string {
	if o == nil || IsNil(o.SubAcct) {
		var ret string
		return ret
	}
	return *o.SubAcct
}

// GetSubAcctOk returns a tuple with the SubAcct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetSubAcctOk() (*string, bool) {
	if o == nil || IsNil(o.SubAcct) {
		return nil, false
	}
	return o.SubAcct, true
}

// HasSubAcct returns a boolean if a field has been set.
func (o *CreateAssetTransferV5Req) HasSubAcct() bool {
	if o != nil && !IsNil(o.SubAcct) {
		return true
	}

	return false
}

// SetSubAcct gets a reference to the given string and assigns it to the SubAcct field.
func (o *CreateAssetTransferV5Req) SetSubAcct(v string) {
	o.SubAcct = &v
}

// GetTo returns the To field value
func (o *CreateAssetTransferV5Req) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *CreateAssetTransferV5Req) SetTo(v string) {
	o.To = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateAssetTransferV5Req) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetTransferV5Req) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateAssetTransferV5Req) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateAssetTransferV5Req) SetType(v string) {
	o.Type = &v
}

func (o CreateAssetTransferV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetTransferV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amt"] = o.Amt
	toSerialize["ccy"] = o.Ccy
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	toSerialize["from"] = o.From
	if !IsNil(o.LoanTrans) {
		toSerialize["loanTrans"] = o.LoanTrans
	}
	if !IsNil(o.OmitPosRisk) {
		toSerialize["omitPosRisk"] = o.OmitPosRisk
	}
	if !IsNil(o.SubAcct) {
		toSerialize["subAcct"] = o.SubAcct
	}
	toSerialize["to"] = o.To
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

func (o *CreateAssetTransferV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amt",
		"ccy",
		"from",
		"to",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetTransferV5Req := _CreateAssetTransferV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAssetTransferV5Req)

	if err != nil {
		return err
	}

	*o = CreateAssetTransferV5Req(varCreateAssetTransferV5Req)

	return err
}

type NullableCreateAssetTransferV5Req struct {
	value *CreateAssetTransferV5Req
	isSet bool
}

func (v NullableCreateAssetTransferV5Req) Get() *CreateAssetTransferV5Req {
	return v.value
}

func (v *NullableCreateAssetTransferV5Req) Set(val *CreateAssetTransferV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetTransferV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetTransferV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetTransferV5Req(val *CreateAssetTransferV5Req) *NullableCreateAssetTransferV5Req {
	return &NullableCreateAssetTransferV5Req{value: val, isSet: true}
}

func (v NullableCreateAssetTransferV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetTransferV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


