/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetAccountPositionsHistoryV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountPositionsHistoryV5RespData{}

// GetAccountPositionsHistoryV5RespData struct for GetAccountPositionsHistoryV5RespData
type GetAccountPositionsHistoryV5RespData struct {
	// Created time of position
	CTime *string `json:"cTime,omitempty"`
	// Currency used for margin
	Ccy *string `json:"ccy,omitempty"`
	// Average price of closing position
	CloseAvgPx *string `json:"closeAvgPx,omitempty"`
	// Position's cumulative closed volume
	CloseTotalPos *string `json:"closeTotalPos,omitempty"`
	// Direction: `long` `short`  Only applicable to `MARGIN/FUTURES/SWAP/OPTION`
	Direction *string `json:"direction,omitempty"`
	// Accumulated fee  Negative number represents the user transaction fee charged by the platform.Positive number represents rebate.
	Fee *string `json:"fee,omitempty"`
	// Accumulated funding fee
	FundingFee *string `json:"fundingFee,omitempty"`
	// Instrument ID
	InstId *string `json:"instId,omitempty"`
	// Instrument type
	InstType *string `json:"instType,omitempty"`
	// Leverage
	Lever *string `json:"lever,omitempty"`
	// Accumulated liquidation penalty. It is negative when there is a value.
	LiqPenalty *string `json:"liqPenalty,omitempty"`
	// Margin mode  `cross` `isolated`
	MgnMode *string `json:"mgnMode,omitempty"`
	// Non-settlement entry price  The non-settlement entry price only reflects the average price at which the position is opened or increased.  Only applicable to `cross` `FUTURES`
	NonSettleAvgPx *string `json:"nonSettleAvgPx,omitempty"`
	// Average price of opening position  Under cross-margin mode, the entry price of expiry futures will update at settlement to the last settlement price, and when the position is opened or increased.
	OpenAvgPx *string `json:"openAvgPx,omitempty"`
	// Max quantity of position
	OpenMaxPos *string `json:"openMaxPos,omitempty"`
	// Profit and loss
	Pnl *string `json:"pnl,omitempty"`
	// Realized P&L ratio
	PnlRatio *string `json:"pnlRatio,omitempty"`
	// Position ID
	PosId *string `json:"posId,omitempty"`
	// Position mode side   `long`: Hedge mode long   `short`: Hedge mode short   `net`: Net mode
	PosSide *string `json:"posSide,omitempty"`
	// Realized profit and loss  Only applicable to `FUTURES`/`SWAP`/`OPTION`  `realizedPnl`=`pnl`+`fee`+`fundingFee`+`liqPenalty`+`settledPnl`
	RealizedPnl *string `json:"realizedPnl,omitempty"`
	// Accumulated settled profit and loss (calculated by settlement price)  Only applicable to `cross` `FUTURES`
	SettledPnl *string `json:"settledPnl,omitempty"`
	// trigger mark price. There is value when `type` is equal to `3`, `4` or `5`. It is \"\" when `type` is equal to `1` or `2`
	TriggerPx *string `json:"triggerPx,omitempty"`
	// The type of latest close position  `1`：Close position partially;`2`：Close all;`3`：Liquidation;`4`：Partial liquidation; `5`：ADL;   It is the latest type if there are several types for the same position.
	Type *string `json:"type,omitempty"`
	// Updated time of position
	UTime *string `json:"uTime,omitempty"`
	// Underlying
	Uly *string `json:"uly,omitempty"`
}

// NewGetAccountPositionsHistoryV5RespData instantiates a new GetAccountPositionsHistoryV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountPositionsHistoryV5RespData() *GetAccountPositionsHistoryV5RespData {
	this := GetAccountPositionsHistoryV5RespData{}
	var cTime string = ""
	this.CTime = &cTime
	var ccy string = ""
	this.Ccy = &ccy
	var closeAvgPx string = ""
	this.CloseAvgPx = &closeAvgPx
	var closeTotalPos string = ""
	this.CloseTotalPos = &closeTotalPos
	var direction string = ""
	this.Direction = &direction
	var fee string = ""
	this.Fee = &fee
	var fundingFee string = ""
	this.FundingFee = &fundingFee
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var liqPenalty string = ""
	this.LiqPenalty = &liqPenalty
	var mgnMode string = ""
	this.MgnMode = &mgnMode
	var nonSettleAvgPx string = ""
	this.NonSettleAvgPx = &nonSettleAvgPx
	var openAvgPx string = ""
	this.OpenAvgPx = &openAvgPx
	var openMaxPos string = ""
	this.OpenMaxPos = &openMaxPos
	var pnl string = ""
	this.Pnl = &pnl
	var pnlRatio string = ""
	this.PnlRatio = &pnlRatio
	var posId string = ""
	this.PosId = &posId
	var posSide string = ""
	this.PosSide = &posSide
	var realizedPnl string = ""
	this.RealizedPnl = &realizedPnl
	var settledPnl string = ""
	this.SettledPnl = &settledPnl
	var triggerPx string = ""
	this.TriggerPx = &triggerPx
	var type_ string = ""
	this.Type = &type_
	var uTime string = ""
	this.UTime = &uTime
	var uly string = ""
	this.Uly = &uly
	return &this
}

// NewGetAccountPositionsHistoryV5RespDataWithDefaults instantiates a new GetAccountPositionsHistoryV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountPositionsHistoryV5RespDataWithDefaults() *GetAccountPositionsHistoryV5RespData {
	this := GetAccountPositionsHistoryV5RespData{}
	var cTime string = ""
	this.CTime = &cTime
	var ccy string = ""
	this.Ccy = &ccy
	var closeAvgPx string = ""
	this.CloseAvgPx = &closeAvgPx
	var closeTotalPos string = ""
	this.CloseTotalPos = &closeTotalPos
	var direction string = ""
	this.Direction = &direction
	var fee string = ""
	this.Fee = &fee
	var fundingFee string = ""
	this.FundingFee = &fundingFee
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var liqPenalty string = ""
	this.LiqPenalty = &liqPenalty
	var mgnMode string = ""
	this.MgnMode = &mgnMode
	var nonSettleAvgPx string = ""
	this.NonSettleAvgPx = &nonSettleAvgPx
	var openAvgPx string = ""
	this.OpenAvgPx = &openAvgPx
	var openMaxPos string = ""
	this.OpenMaxPos = &openMaxPos
	var pnl string = ""
	this.Pnl = &pnl
	var pnlRatio string = ""
	this.PnlRatio = &pnlRatio
	var posId string = ""
	this.PosId = &posId
	var posSide string = ""
	this.PosSide = &posSide
	var realizedPnl string = ""
	this.RealizedPnl = &realizedPnl
	var settledPnl string = ""
	this.SettledPnl = &settledPnl
	var triggerPx string = ""
	this.TriggerPx = &triggerPx
	var type_ string = ""
	this.Type = &type_
	var uTime string = ""
	this.UTime = &uTime
	var uly string = ""
	this.Uly = &uly
	return &this
}

// GetCTime returns the CTime field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetCTime() string {
	if o == nil || IsNil(o.CTime) {
		var ret string
		return ret
	}
	return *o.CTime
}

// GetCTimeOk returns a tuple with the CTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetCTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CTime) {
		return nil, false
	}
	return o.CTime, true
}

// HasCTime returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasCTime() bool {
	if o != nil && !IsNil(o.CTime) {
		return true
	}

	return false
}

// SetCTime gets a reference to the given string and assigns it to the CTime field.
func (o *GetAccountPositionsHistoryV5RespData) SetCTime(v string) {
	o.CTime = &v
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *GetAccountPositionsHistoryV5RespData) SetCcy(v string) {
	o.Ccy = &v
}

// GetCloseAvgPx returns the CloseAvgPx field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetCloseAvgPx() string {
	if o == nil || IsNil(o.CloseAvgPx) {
		var ret string
		return ret
	}
	return *o.CloseAvgPx
}

// GetCloseAvgPxOk returns a tuple with the CloseAvgPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetCloseAvgPxOk() (*string, bool) {
	if o == nil || IsNil(o.CloseAvgPx) {
		return nil, false
	}
	return o.CloseAvgPx, true
}

// HasCloseAvgPx returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasCloseAvgPx() bool {
	if o != nil && !IsNil(o.CloseAvgPx) {
		return true
	}

	return false
}

// SetCloseAvgPx gets a reference to the given string and assigns it to the CloseAvgPx field.
func (o *GetAccountPositionsHistoryV5RespData) SetCloseAvgPx(v string) {
	o.CloseAvgPx = &v
}

// GetCloseTotalPos returns the CloseTotalPos field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetCloseTotalPos() string {
	if o == nil || IsNil(o.CloseTotalPos) {
		var ret string
		return ret
	}
	return *o.CloseTotalPos
}

// GetCloseTotalPosOk returns a tuple with the CloseTotalPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetCloseTotalPosOk() (*string, bool) {
	if o == nil || IsNil(o.CloseTotalPos) {
		return nil, false
	}
	return o.CloseTotalPos, true
}

// HasCloseTotalPos returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasCloseTotalPos() bool {
	if o != nil && !IsNil(o.CloseTotalPos) {
		return true
	}

	return false
}

// SetCloseTotalPos gets a reference to the given string and assigns it to the CloseTotalPos field.
func (o *GetAccountPositionsHistoryV5RespData) SetCloseTotalPos(v string) {
	o.CloseTotalPos = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *GetAccountPositionsHistoryV5RespData) SetDirection(v string) {
	o.Direction = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *GetAccountPositionsHistoryV5RespData) SetFee(v string) {
	o.Fee = &v
}

// GetFundingFee returns the FundingFee field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetFundingFee() string {
	if o == nil || IsNil(o.FundingFee) {
		var ret string
		return ret
	}
	return *o.FundingFee
}

// GetFundingFeeOk returns a tuple with the FundingFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetFundingFeeOk() (*string, bool) {
	if o == nil || IsNil(o.FundingFee) {
		return nil, false
	}
	return o.FundingFee, true
}

// HasFundingFee returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasFundingFee() bool {
	if o != nil && !IsNil(o.FundingFee) {
		return true
	}

	return false
}

// SetFundingFee gets a reference to the given string and assigns it to the FundingFee field.
func (o *GetAccountPositionsHistoryV5RespData) SetFundingFee(v string) {
	o.FundingFee = &v
}

// GetInstId returns the InstId field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
func (o *GetAccountPositionsHistoryV5RespData) SetInstId(v string) {
	o.InstId = &v
}

// GetInstType returns the InstType field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetInstType() string {
	if o == nil || IsNil(o.InstType) {
		var ret string
		return ret
	}
	return *o.InstType
}

// GetInstTypeOk returns a tuple with the InstType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetInstTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstType) {
		return nil, false
	}
	return o.InstType, true
}

// HasInstType returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasInstType() bool {
	if o != nil && !IsNil(o.InstType) {
		return true
	}

	return false
}

// SetInstType gets a reference to the given string and assigns it to the InstType field.
func (o *GetAccountPositionsHistoryV5RespData) SetInstType(v string) {
	o.InstType = &v
}

// GetLever returns the Lever field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetLever() string {
	if o == nil || IsNil(o.Lever) {
		var ret string
		return ret
	}
	return *o.Lever
}

// GetLeverOk returns a tuple with the Lever field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetLeverOk() (*string, bool) {
	if o == nil || IsNil(o.Lever) {
		return nil, false
	}
	return o.Lever, true
}

// HasLever returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasLever() bool {
	if o != nil && !IsNil(o.Lever) {
		return true
	}

	return false
}

// SetLever gets a reference to the given string and assigns it to the Lever field.
func (o *GetAccountPositionsHistoryV5RespData) SetLever(v string) {
	o.Lever = &v
}

// GetLiqPenalty returns the LiqPenalty field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetLiqPenalty() string {
	if o == nil || IsNil(o.LiqPenalty) {
		var ret string
		return ret
	}
	return *o.LiqPenalty
}

// GetLiqPenaltyOk returns a tuple with the LiqPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetLiqPenaltyOk() (*string, bool) {
	if o == nil || IsNil(o.LiqPenalty) {
		return nil, false
	}
	return o.LiqPenalty, true
}

// HasLiqPenalty returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasLiqPenalty() bool {
	if o != nil && !IsNil(o.LiqPenalty) {
		return true
	}

	return false
}

// SetLiqPenalty gets a reference to the given string and assigns it to the LiqPenalty field.
func (o *GetAccountPositionsHistoryV5RespData) SetLiqPenalty(v string) {
	o.LiqPenalty = &v
}

// GetMgnMode returns the MgnMode field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetMgnMode() string {
	if o == nil || IsNil(o.MgnMode) {
		var ret string
		return ret
	}
	return *o.MgnMode
}

// GetMgnModeOk returns a tuple with the MgnMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetMgnModeOk() (*string, bool) {
	if o == nil || IsNil(o.MgnMode) {
		return nil, false
	}
	return o.MgnMode, true
}

// HasMgnMode returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasMgnMode() bool {
	if o != nil && !IsNil(o.MgnMode) {
		return true
	}

	return false
}

// SetMgnMode gets a reference to the given string and assigns it to the MgnMode field.
func (o *GetAccountPositionsHistoryV5RespData) SetMgnMode(v string) {
	o.MgnMode = &v
}

// GetNonSettleAvgPx returns the NonSettleAvgPx field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetNonSettleAvgPx() string {
	if o == nil || IsNil(o.NonSettleAvgPx) {
		var ret string
		return ret
	}
	return *o.NonSettleAvgPx
}

// GetNonSettleAvgPxOk returns a tuple with the NonSettleAvgPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetNonSettleAvgPxOk() (*string, bool) {
	if o == nil || IsNil(o.NonSettleAvgPx) {
		return nil, false
	}
	return o.NonSettleAvgPx, true
}

// HasNonSettleAvgPx returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasNonSettleAvgPx() bool {
	if o != nil && !IsNil(o.NonSettleAvgPx) {
		return true
	}

	return false
}

// SetNonSettleAvgPx gets a reference to the given string and assigns it to the NonSettleAvgPx field.
func (o *GetAccountPositionsHistoryV5RespData) SetNonSettleAvgPx(v string) {
	o.NonSettleAvgPx = &v
}

// GetOpenAvgPx returns the OpenAvgPx field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetOpenAvgPx() string {
	if o == nil || IsNil(o.OpenAvgPx) {
		var ret string
		return ret
	}
	return *o.OpenAvgPx
}

// GetOpenAvgPxOk returns a tuple with the OpenAvgPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetOpenAvgPxOk() (*string, bool) {
	if o == nil || IsNil(o.OpenAvgPx) {
		return nil, false
	}
	return o.OpenAvgPx, true
}

// HasOpenAvgPx returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasOpenAvgPx() bool {
	if o != nil && !IsNil(o.OpenAvgPx) {
		return true
	}

	return false
}

// SetOpenAvgPx gets a reference to the given string and assigns it to the OpenAvgPx field.
func (o *GetAccountPositionsHistoryV5RespData) SetOpenAvgPx(v string) {
	o.OpenAvgPx = &v
}

// GetOpenMaxPos returns the OpenMaxPos field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetOpenMaxPos() string {
	if o == nil || IsNil(o.OpenMaxPos) {
		var ret string
		return ret
	}
	return *o.OpenMaxPos
}

// GetOpenMaxPosOk returns a tuple with the OpenMaxPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetOpenMaxPosOk() (*string, bool) {
	if o == nil || IsNil(o.OpenMaxPos) {
		return nil, false
	}
	return o.OpenMaxPos, true
}

// HasOpenMaxPos returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasOpenMaxPos() bool {
	if o != nil && !IsNil(o.OpenMaxPos) {
		return true
	}

	return false
}

// SetOpenMaxPos gets a reference to the given string and assigns it to the OpenMaxPos field.
func (o *GetAccountPositionsHistoryV5RespData) SetOpenMaxPos(v string) {
	o.OpenMaxPos = &v
}

// GetPnl returns the Pnl field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetPnl() string {
	if o == nil || IsNil(o.Pnl) {
		var ret string
		return ret
	}
	return *o.Pnl
}

// GetPnlOk returns a tuple with the Pnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetPnlOk() (*string, bool) {
	if o == nil || IsNil(o.Pnl) {
		return nil, false
	}
	return o.Pnl, true
}

// HasPnl returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasPnl() bool {
	if o != nil && !IsNil(o.Pnl) {
		return true
	}

	return false
}

// SetPnl gets a reference to the given string and assigns it to the Pnl field.
func (o *GetAccountPositionsHistoryV5RespData) SetPnl(v string) {
	o.Pnl = &v
}

// GetPnlRatio returns the PnlRatio field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetPnlRatio() string {
	if o == nil || IsNil(o.PnlRatio) {
		var ret string
		return ret
	}
	return *o.PnlRatio
}

// GetPnlRatioOk returns a tuple with the PnlRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetPnlRatioOk() (*string, bool) {
	if o == nil || IsNil(o.PnlRatio) {
		return nil, false
	}
	return o.PnlRatio, true
}

// HasPnlRatio returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasPnlRatio() bool {
	if o != nil && !IsNil(o.PnlRatio) {
		return true
	}

	return false
}

// SetPnlRatio gets a reference to the given string and assigns it to the PnlRatio field.
func (o *GetAccountPositionsHistoryV5RespData) SetPnlRatio(v string) {
	o.PnlRatio = &v
}

// GetPosId returns the PosId field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetPosId() string {
	if o == nil || IsNil(o.PosId) {
		var ret string
		return ret
	}
	return *o.PosId
}

// GetPosIdOk returns a tuple with the PosId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetPosIdOk() (*string, bool) {
	if o == nil || IsNil(o.PosId) {
		return nil, false
	}
	return o.PosId, true
}

// HasPosId returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasPosId() bool {
	if o != nil && !IsNil(o.PosId) {
		return true
	}

	return false
}

// SetPosId gets a reference to the given string and assigns it to the PosId field.
func (o *GetAccountPositionsHistoryV5RespData) SetPosId(v string) {
	o.PosId = &v
}

// GetPosSide returns the PosSide field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetPosSide() string {
	if o == nil || IsNil(o.PosSide) {
		var ret string
		return ret
	}
	return *o.PosSide
}

// GetPosSideOk returns a tuple with the PosSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetPosSideOk() (*string, bool) {
	if o == nil || IsNil(o.PosSide) {
		return nil, false
	}
	return o.PosSide, true
}

// HasPosSide returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasPosSide() bool {
	if o != nil && !IsNil(o.PosSide) {
		return true
	}

	return false
}

// SetPosSide gets a reference to the given string and assigns it to the PosSide field.
func (o *GetAccountPositionsHistoryV5RespData) SetPosSide(v string) {
	o.PosSide = &v
}

// GetRealizedPnl returns the RealizedPnl field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetRealizedPnl() string {
	if o == nil || IsNil(o.RealizedPnl) {
		var ret string
		return ret
	}
	return *o.RealizedPnl
}

// GetRealizedPnlOk returns a tuple with the RealizedPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetRealizedPnlOk() (*string, bool) {
	if o == nil || IsNil(o.RealizedPnl) {
		return nil, false
	}
	return o.RealizedPnl, true
}

// HasRealizedPnl returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasRealizedPnl() bool {
	if o != nil && !IsNil(o.RealizedPnl) {
		return true
	}

	return false
}

// SetRealizedPnl gets a reference to the given string and assigns it to the RealizedPnl field.
func (o *GetAccountPositionsHistoryV5RespData) SetRealizedPnl(v string) {
	o.RealizedPnl = &v
}

// GetSettledPnl returns the SettledPnl field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetSettledPnl() string {
	if o == nil || IsNil(o.SettledPnl) {
		var ret string
		return ret
	}
	return *o.SettledPnl
}

// GetSettledPnlOk returns a tuple with the SettledPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetSettledPnlOk() (*string, bool) {
	if o == nil || IsNil(o.SettledPnl) {
		return nil, false
	}
	return o.SettledPnl, true
}

// HasSettledPnl returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasSettledPnl() bool {
	if o != nil && !IsNil(o.SettledPnl) {
		return true
	}

	return false
}

// SetSettledPnl gets a reference to the given string and assigns it to the SettledPnl field.
func (o *GetAccountPositionsHistoryV5RespData) SetSettledPnl(v string) {
	o.SettledPnl = &v
}

// GetTriggerPx returns the TriggerPx field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetTriggerPx() string {
	if o == nil || IsNil(o.TriggerPx) {
		var ret string
		return ret
	}
	return *o.TriggerPx
}

// GetTriggerPxOk returns a tuple with the TriggerPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetTriggerPxOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerPx) {
		return nil, false
	}
	return o.TriggerPx, true
}

// HasTriggerPx returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasTriggerPx() bool {
	if o != nil && !IsNil(o.TriggerPx) {
		return true
	}

	return false
}

// SetTriggerPx gets a reference to the given string and assigns it to the TriggerPx field.
func (o *GetAccountPositionsHistoryV5RespData) SetTriggerPx(v string) {
	o.TriggerPx = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetAccountPositionsHistoryV5RespData) SetType(v string) {
	o.Type = &v
}

// GetUTime returns the UTime field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetUTime() string {
	if o == nil || IsNil(o.UTime) {
		var ret string
		return ret
	}
	return *o.UTime
}

// GetUTimeOk returns a tuple with the UTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetUTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UTime) {
		return nil, false
	}
	return o.UTime, true
}

// HasUTime returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasUTime() bool {
	if o != nil && !IsNil(o.UTime) {
		return true
	}

	return false
}

// SetUTime gets a reference to the given string and assigns it to the UTime field.
func (o *GetAccountPositionsHistoryV5RespData) SetUTime(v string) {
	o.UTime = &v
}

// GetUly returns the Uly field value if set, zero value otherwise.
func (o *GetAccountPositionsHistoryV5RespData) GetUly() string {
	if o == nil || IsNil(o.Uly) {
		var ret string
		return ret
	}
	return *o.Uly
}

// GetUlyOk returns a tuple with the Uly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountPositionsHistoryV5RespData) GetUlyOk() (*string, bool) {
	if o == nil || IsNil(o.Uly) {
		return nil, false
	}
	return o.Uly, true
}

// HasUly returns a boolean if a field has been set.
func (o *GetAccountPositionsHistoryV5RespData) HasUly() bool {
	if o != nil && !IsNil(o.Uly) {
		return true
	}

	return false
}

// SetUly gets a reference to the given string and assigns it to the Uly field.
func (o *GetAccountPositionsHistoryV5RespData) SetUly(v string) {
	o.Uly = &v
}

func (o GetAccountPositionsHistoryV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountPositionsHistoryV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CTime) {
		toSerialize["cTime"] = o.CTime
	}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	if !IsNil(o.CloseAvgPx) {
		toSerialize["closeAvgPx"] = o.CloseAvgPx
	}
	if !IsNil(o.CloseTotalPos) {
		toSerialize["closeTotalPos"] = o.CloseTotalPos
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.FundingFee) {
		toSerialize["fundingFee"] = o.FundingFee
	}
	if !IsNil(o.InstId) {
		toSerialize["instId"] = o.InstId
	}
	if !IsNil(o.InstType) {
		toSerialize["instType"] = o.InstType
	}
	if !IsNil(o.Lever) {
		toSerialize["lever"] = o.Lever
	}
	if !IsNil(o.LiqPenalty) {
		toSerialize["liqPenalty"] = o.LiqPenalty
	}
	if !IsNil(o.MgnMode) {
		toSerialize["mgnMode"] = o.MgnMode
	}
	if !IsNil(o.NonSettleAvgPx) {
		toSerialize["nonSettleAvgPx"] = o.NonSettleAvgPx
	}
	if !IsNil(o.OpenAvgPx) {
		toSerialize["openAvgPx"] = o.OpenAvgPx
	}
	if !IsNil(o.OpenMaxPos) {
		toSerialize["openMaxPos"] = o.OpenMaxPos
	}
	if !IsNil(o.Pnl) {
		toSerialize["pnl"] = o.Pnl
	}
	if !IsNil(o.PnlRatio) {
		toSerialize["pnlRatio"] = o.PnlRatio
	}
	if !IsNil(o.PosId) {
		toSerialize["posId"] = o.PosId
	}
	if !IsNil(o.PosSide) {
		toSerialize["posSide"] = o.PosSide
	}
	if !IsNil(o.RealizedPnl) {
		toSerialize["realizedPnl"] = o.RealizedPnl
	}
	if !IsNil(o.SettledPnl) {
		toSerialize["settledPnl"] = o.SettledPnl
	}
	if !IsNil(o.TriggerPx) {
		toSerialize["triggerPx"] = o.TriggerPx
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UTime) {
		toSerialize["uTime"] = o.UTime
	}
	if !IsNil(o.Uly) {
		toSerialize["uly"] = o.Uly
	}
	return toSerialize, nil
}

type NullableGetAccountPositionsHistoryV5RespData struct {
	value *GetAccountPositionsHistoryV5RespData
	isSet bool
}

func (v NullableGetAccountPositionsHistoryV5RespData) Get() *GetAccountPositionsHistoryV5RespData {
	return v.value
}

func (v *NullableGetAccountPositionsHistoryV5RespData) Set(val *GetAccountPositionsHistoryV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountPositionsHistoryV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountPositionsHistoryV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountPositionsHistoryV5RespData(val *GetAccountPositionsHistoryV5RespData) *NullableGetAccountPositionsHistoryV5RespData {
	return &NullableGetAccountPositionsHistoryV5RespData{value: val, isSet: true}
}

func (v NullableGetAccountPositionsHistoryV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountPositionsHistoryV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


