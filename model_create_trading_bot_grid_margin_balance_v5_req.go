/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotGridMarginBalanceV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotGridMarginBalanceV5Req{}

// CreateTradingBotGridMarginBalanceV5Req struct for CreateTradingBotGridMarginBalanceV5Req
type CreateTradingBotGridMarginBalanceV5Req struct {
	// Algo ID
	AlgoId string `json:"algoId"`
	// Adjust margin balance amount  Either `amt` or `percent` is required.
	Amt *string `json:"amt,omitempty"`
	// Adjust margin balance percentage
	Percent *string `json:"percent,omitempty"`
	// Adjust margin balance type  `add` `reduce`
	Type string `json:"type"`
}

type _CreateTradingBotGridMarginBalanceV5Req CreateTradingBotGridMarginBalanceV5Req

// NewCreateTradingBotGridMarginBalanceV5Req instantiates a new CreateTradingBotGridMarginBalanceV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotGridMarginBalanceV5Req(algoId string, type_ string) *CreateTradingBotGridMarginBalanceV5Req {
	this := CreateTradingBotGridMarginBalanceV5Req{}
	this.AlgoId = algoId
	var amt string = ""
	this.Amt = &amt
	var percent string = ""
	this.Percent = &percent
	this.Type = type_
	return &this
}

// NewCreateTradingBotGridMarginBalanceV5ReqWithDefaults instantiates a new CreateTradingBotGridMarginBalanceV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotGridMarginBalanceV5ReqWithDefaults() *CreateTradingBotGridMarginBalanceV5Req {
	this := CreateTradingBotGridMarginBalanceV5Req{}
	var algoId string = ""
	this.AlgoId = algoId
	var amt string = ""
	this.Amt = &amt
	var percent string = ""
	this.Percent = &percent
	var type_ string = ""
	this.Type = type_
	return &this
}

// GetAlgoId returns the AlgoId field value
func (o *CreateTradingBotGridMarginBalanceV5Req) GetAlgoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlgoId
}

// GetAlgoIdOk returns a tuple with the AlgoId field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMarginBalanceV5Req) GetAlgoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlgoId, true
}

// SetAlgoId sets field value
func (o *CreateTradingBotGridMarginBalanceV5Req) SetAlgoId(v string) {
	o.AlgoId = v
}

// GetAmt returns the Amt field value if set, zero value otherwise.
func (o *CreateTradingBotGridMarginBalanceV5Req) GetAmt() string {
	if o == nil || IsNil(o.Amt) {
		var ret string
		return ret
	}
	return *o.Amt
}

// GetAmtOk returns a tuple with the Amt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMarginBalanceV5Req) GetAmtOk() (*string, bool) {
	if o == nil || IsNil(o.Amt) {
		return nil, false
	}
	return o.Amt, true
}

// HasAmt returns a boolean if a field has been set.
func (o *CreateTradingBotGridMarginBalanceV5Req) HasAmt() bool {
	if o != nil && !IsNil(o.Amt) {
		return true
	}

	return false
}

// SetAmt gets a reference to the given string and assigns it to the Amt field.
func (o *CreateTradingBotGridMarginBalanceV5Req) SetAmt(v string) {
	o.Amt = &v
}

// GetPercent returns the Percent field value if set, zero value otherwise.
func (o *CreateTradingBotGridMarginBalanceV5Req) GetPercent() string {
	if o == nil || IsNil(o.Percent) {
		var ret string
		return ret
	}
	return *o.Percent
}

// GetPercentOk returns a tuple with the Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMarginBalanceV5Req) GetPercentOk() (*string, bool) {
	if o == nil || IsNil(o.Percent) {
		return nil, false
	}
	return o.Percent, true
}

// HasPercent returns a boolean if a field has been set.
func (o *CreateTradingBotGridMarginBalanceV5Req) HasPercent() bool {
	if o != nil && !IsNil(o.Percent) {
		return true
	}

	return false
}

// SetPercent gets a reference to the given string and assigns it to the Percent field.
func (o *CreateTradingBotGridMarginBalanceV5Req) SetPercent(v string) {
	o.Percent = &v
}

// GetType returns the Type field value
func (o *CreateTradingBotGridMarginBalanceV5Req) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMarginBalanceV5Req) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateTradingBotGridMarginBalanceV5Req) SetType(v string) {
	o.Type = v
}

func (o CreateTradingBotGridMarginBalanceV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotGridMarginBalanceV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algoId"] = o.AlgoId
	if !IsNil(o.Amt) {
		toSerialize["amt"] = o.Amt
	}
	if !IsNil(o.Percent) {
		toSerialize["percent"] = o.Percent
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *CreateTradingBotGridMarginBalanceV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algoId",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotGridMarginBalanceV5Req := _CreateTradingBotGridMarginBalanceV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotGridMarginBalanceV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotGridMarginBalanceV5Req(varCreateTradingBotGridMarginBalanceV5Req)

	return err
}

type NullableCreateTradingBotGridMarginBalanceV5Req struct {
	value *CreateTradingBotGridMarginBalanceV5Req
	isSet bool
}

func (v NullableCreateTradingBotGridMarginBalanceV5Req) Get() *CreateTradingBotGridMarginBalanceV5Req {
	return v.value
}

func (v *NullableCreateTradingBotGridMarginBalanceV5Req) Set(val *CreateTradingBotGridMarginBalanceV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotGridMarginBalanceV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotGridMarginBalanceV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotGridMarginBalanceV5Req(val *CreateTradingBotGridMarginBalanceV5Req) *NullableCreateTradingBotGridMarginBalanceV5Req {
	return &NullableCreateTradingBotGridMarginBalanceV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotGridMarginBalanceV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotGridMarginBalanceV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


