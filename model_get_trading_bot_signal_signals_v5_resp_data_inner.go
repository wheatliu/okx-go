/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetTradingBotSignalSignalsV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradingBotSignalSignalsV5RespDataInner{}

// GetTradingBotSignalSignalsV5RespDataInner struct for GetTradingBotSignalSignalsV5RespDataInner
type GetTradingBotSignalSignalsV5RespDataInner struct {
	// Signal channel description
	SignalChanDesc *string `json:"signalChanDesc,omitempty"`
	// Signal channel id
	SignalChanId *string `json:"signalChanId,omitempty"`
	// Signal channel name
	SignalChanName *string `json:"signalChanName,omitempty"`
	// User identify when placing orders via signal
	SignalChanToken *string `json:"signalChanToken,omitempty"`
	// Signal source type  `1`: Created by yourself  `2`: Subscribe  `3`: Free signal
	SignalSourceType *string `json:"signalSourceType,omitempty"`
}

// NewGetTradingBotSignalSignalsV5RespDataInner instantiates a new GetTradingBotSignalSignalsV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradingBotSignalSignalsV5RespDataInner() *GetTradingBotSignalSignalsV5RespDataInner {
	this := GetTradingBotSignalSignalsV5RespDataInner{}
	var signalChanDesc string = ""
	this.SignalChanDesc = &signalChanDesc
	var signalChanId string = ""
	this.SignalChanId = &signalChanId
	var signalChanName string = ""
	this.SignalChanName = &signalChanName
	var signalChanToken string = ""
	this.SignalChanToken = &signalChanToken
	var signalSourceType string = ""
	this.SignalSourceType = &signalSourceType
	return &this
}

// NewGetTradingBotSignalSignalsV5RespDataInnerWithDefaults instantiates a new GetTradingBotSignalSignalsV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradingBotSignalSignalsV5RespDataInnerWithDefaults() *GetTradingBotSignalSignalsV5RespDataInner {
	this := GetTradingBotSignalSignalsV5RespDataInner{}
	var signalChanDesc string = ""
	this.SignalChanDesc = &signalChanDesc
	var signalChanId string = ""
	this.SignalChanId = &signalChanId
	var signalChanName string = ""
	this.SignalChanName = &signalChanName
	var signalChanToken string = ""
	this.SignalChanToken = &signalChanToken
	var signalSourceType string = ""
	this.SignalSourceType = &signalSourceType
	return &this
}

// GetSignalChanDesc returns the SignalChanDesc field value if set, zero value otherwise.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanDesc() string {
	if o == nil || IsNil(o.SignalChanDesc) {
		var ret string
		return ret
	}
	return *o.SignalChanDesc
}

// GetSignalChanDescOk returns a tuple with the SignalChanDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanDescOk() (*string, bool) {
	if o == nil || IsNil(o.SignalChanDesc) {
		return nil, false
	}
	return o.SignalChanDesc, true
}

// HasSignalChanDesc returns a boolean if a field has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) HasSignalChanDesc() bool {
	if o != nil && !IsNil(o.SignalChanDesc) {
		return true
	}

	return false
}

// SetSignalChanDesc gets a reference to the given string and assigns it to the SignalChanDesc field.
func (o *GetTradingBotSignalSignalsV5RespDataInner) SetSignalChanDesc(v string) {
	o.SignalChanDesc = &v
}

// GetSignalChanId returns the SignalChanId field value if set, zero value otherwise.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanId() string {
	if o == nil || IsNil(o.SignalChanId) {
		var ret string
		return ret
	}
	return *o.SignalChanId
}

// GetSignalChanIdOk returns a tuple with the SignalChanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanIdOk() (*string, bool) {
	if o == nil || IsNil(o.SignalChanId) {
		return nil, false
	}
	return o.SignalChanId, true
}

// HasSignalChanId returns a boolean if a field has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) HasSignalChanId() bool {
	if o != nil && !IsNil(o.SignalChanId) {
		return true
	}

	return false
}

// SetSignalChanId gets a reference to the given string and assigns it to the SignalChanId field.
func (o *GetTradingBotSignalSignalsV5RespDataInner) SetSignalChanId(v string) {
	o.SignalChanId = &v
}

// GetSignalChanName returns the SignalChanName field value if set, zero value otherwise.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanName() string {
	if o == nil || IsNil(o.SignalChanName) {
		var ret string
		return ret
	}
	return *o.SignalChanName
}

// GetSignalChanNameOk returns a tuple with the SignalChanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanNameOk() (*string, bool) {
	if o == nil || IsNil(o.SignalChanName) {
		return nil, false
	}
	return o.SignalChanName, true
}

// HasSignalChanName returns a boolean if a field has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) HasSignalChanName() bool {
	if o != nil && !IsNil(o.SignalChanName) {
		return true
	}

	return false
}

// SetSignalChanName gets a reference to the given string and assigns it to the SignalChanName field.
func (o *GetTradingBotSignalSignalsV5RespDataInner) SetSignalChanName(v string) {
	o.SignalChanName = &v
}

// GetSignalChanToken returns the SignalChanToken field value if set, zero value otherwise.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanToken() string {
	if o == nil || IsNil(o.SignalChanToken) {
		var ret string
		return ret
	}
	return *o.SignalChanToken
}

// GetSignalChanTokenOk returns a tuple with the SignalChanToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalChanTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SignalChanToken) {
		return nil, false
	}
	return o.SignalChanToken, true
}

// HasSignalChanToken returns a boolean if a field has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) HasSignalChanToken() bool {
	if o != nil && !IsNil(o.SignalChanToken) {
		return true
	}

	return false
}

// SetSignalChanToken gets a reference to the given string and assigns it to the SignalChanToken field.
func (o *GetTradingBotSignalSignalsV5RespDataInner) SetSignalChanToken(v string) {
	o.SignalChanToken = &v
}

// GetSignalSourceType returns the SignalSourceType field value if set, zero value otherwise.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalSourceType() string {
	if o == nil || IsNil(o.SignalSourceType) {
		var ret string
		return ret
	}
	return *o.SignalSourceType
}

// GetSignalSourceTypeOk returns a tuple with the SignalSourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) GetSignalSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SignalSourceType) {
		return nil, false
	}
	return o.SignalSourceType, true
}

// HasSignalSourceType returns a boolean if a field has been set.
func (o *GetTradingBotSignalSignalsV5RespDataInner) HasSignalSourceType() bool {
	if o != nil && !IsNil(o.SignalSourceType) {
		return true
	}

	return false
}

// SetSignalSourceType gets a reference to the given string and assigns it to the SignalSourceType field.
func (o *GetTradingBotSignalSignalsV5RespDataInner) SetSignalSourceType(v string) {
	o.SignalSourceType = &v
}

func (o GetTradingBotSignalSignalsV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradingBotSignalSignalsV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignalChanDesc) {
		toSerialize["signalChanDesc"] = o.SignalChanDesc
	}
	if !IsNil(o.SignalChanId) {
		toSerialize["signalChanId"] = o.SignalChanId
	}
	if !IsNil(o.SignalChanName) {
		toSerialize["signalChanName"] = o.SignalChanName
	}
	if !IsNil(o.SignalChanToken) {
		toSerialize["signalChanToken"] = o.SignalChanToken
	}
	if !IsNil(o.SignalSourceType) {
		toSerialize["signalSourceType"] = o.SignalSourceType
	}
	return toSerialize, nil
}

type NullableGetTradingBotSignalSignalsV5RespDataInner struct {
	value *GetTradingBotSignalSignalsV5RespDataInner
	isSet bool
}

func (v NullableGetTradingBotSignalSignalsV5RespDataInner) Get() *GetTradingBotSignalSignalsV5RespDataInner {
	return v.value
}

func (v *NullableGetTradingBotSignalSignalsV5RespDataInner) Set(val *GetTradingBotSignalSignalsV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradingBotSignalSignalsV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradingBotSignalSignalsV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradingBotSignalSignalsV5RespDataInner(val *GetTradingBotSignalSignalsV5RespDataInner) *NullableGetTradingBotSignalSignalsV5RespDataInner {
	return &NullableGetTradingBotSignalSignalsV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetTradingBotSignalSignalsV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradingBotSignalSignalsV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


