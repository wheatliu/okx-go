/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetTradeAccountRateLimitV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradeAccountRateLimitV5RespDataInner{}

// GetTradeAccountRateLimitV5RespDataInner struct for GetTradeAccountRateLimitV5RespDataInner
type GetTradeAccountRateLimitV5RespDataInner struct {
	// Current sub-account rate limit per two seconds
	AccRateLimit *string `json:"accRateLimit,omitempty"`
	// Sub account fill ratio during the monitoring period   Applicable for users with trading fee level >= VIP 5 and return \"\" for others   For accounts with no trading volume during the monitoring period, return \"0\". For accounts with trading volume but no order count due to our counting logic, return \"9999\".
	FillRatio *string `json:"fillRatio,omitempty"`
	// Master account aggregated fill ratio during the monitoring period   Applicable for users with trading fee level >= VIP 5 and return \"\" for others   For accounts with no trading volume during the monitoring period, return \"0\"
	MainFillRatio *string `json:"mainFillRatio,omitempty"`
	// Expected sub-account rate limit (per two seconds) in the next period   Applicable for users with trading fee level >= VIP 5 and return \"\" for others
	NextAccRateLimit *string `json:"nextAccRateLimit,omitempty"`
	// Data update time   For users with trading fee level >= VIP 5, the data will be generated at 08:00 am (UTC)   For users with trading fee level < VIP 5, return the current timestamp
	Ts *string `json:"ts,omitempty"`
}

// NewGetTradeAccountRateLimitV5RespDataInner instantiates a new GetTradeAccountRateLimitV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradeAccountRateLimitV5RespDataInner() *GetTradeAccountRateLimitV5RespDataInner {
	this := GetTradeAccountRateLimitV5RespDataInner{}
	var accRateLimit string = ""
	this.AccRateLimit = &accRateLimit
	var fillRatio string = ""
	this.FillRatio = &fillRatio
	var mainFillRatio string = ""
	this.MainFillRatio = &mainFillRatio
	var nextAccRateLimit string = ""
	this.NextAccRateLimit = &nextAccRateLimit
	var ts string = ""
	this.Ts = &ts
	return &this
}

// NewGetTradeAccountRateLimitV5RespDataInnerWithDefaults instantiates a new GetTradeAccountRateLimitV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradeAccountRateLimitV5RespDataInnerWithDefaults() *GetTradeAccountRateLimitV5RespDataInner {
	this := GetTradeAccountRateLimitV5RespDataInner{}
	var accRateLimit string = ""
	this.AccRateLimit = &accRateLimit
	var fillRatio string = ""
	this.FillRatio = &fillRatio
	var mainFillRatio string = ""
	this.MainFillRatio = &mainFillRatio
	var nextAccRateLimit string = ""
	this.NextAccRateLimit = &nextAccRateLimit
	var ts string = ""
	this.Ts = &ts
	return &this
}

// GetAccRateLimit returns the AccRateLimit field value if set, zero value otherwise.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetAccRateLimit() string {
	if o == nil || IsNil(o.AccRateLimit) {
		var ret string
		return ret
	}
	return *o.AccRateLimit
}

// GetAccRateLimitOk returns a tuple with the AccRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetAccRateLimitOk() (*string, bool) {
	if o == nil || IsNil(o.AccRateLimit) {
		return nil, false
	}
	return o.AccRateLimit, true
}

// HasAccRateLimit returns a boolean if a field has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) HasAccRateLimit() bool {
	if o != nil && !IsNil(o.AccRateLimit) {
		return true
	}

	return false
}

// SetAccRateLimit gets a reference to the given string and assigns it to the AccRateLimit field.
func (o *GetTradeAccountRateLimitV5RespDataInner) SetAccRateLimit(v string) {
	o.AccRateLimit = &v
}

// GetFillRatio returns the FillRatio field value if set, zero value otherwise.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetFillRatio() string {
	if o == nil || IsNil(o.FillRatio) {
		var ret string
		return ret
	}
	return *o.FillRatio
}

// GetFillRatioOk returns a tuple with the FillRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetFillRatioOk() (*string, bool) {
	if o == nil || IsNil(o.FillRatio) {
		return nil, false
	}
	return o.FillRatio, true
}

// HasFillRatio returns a boolean if a field has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) HasFillRatio() bool {
	if o != nil && !IsNil(o.FillRatio) {
		return true
	}

	return false
}

// SetFillRatio gets a reference to the given string and assigns it to the FillRatio field.
func (o *GetTradeAccountRateLimitV5RespDataInner) SetFillRatio(v string) {
	o.FillRatio = &v
}

// GetMainFillRatio returns the MainFillRatio field value if set, zero value otherwise.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetMainFillRatio() string {
	if o == nil || IsNil(o.MainFillRatio) {
		var ret string
		return ret
	}
	return *o.MainFillRatio
}

// GetMainFillRatioOk returns a tuple with the MainFillRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetMainFillRatioOk() (*string, bool) {
	if o == nil || IsNil(o.MainFillRatio) {
		return nil, false
	}
	return o.MainFillRatio, true
}

// HasMainFillRatio returns a boolean if a field has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) HasMainFillRatio() bool {
	if o != nil && !IsNil(o.MainFillRatio) {
		return true
	}

	return false
}

// SetMainFillRatio gets a reference to the given string and assigns it to the MainFillRatio field.
func (o *GetTradeAccountRateLimitV5RespDataInner) SetMainFillRatio(v string) {
	o.MainFillRatio = &v
}

// GetNextAccRateLimit returns the NextAccRateLimit field value if set, zero value otherwise.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetNextAccRateLimit() string {
	if o == nil || IsNil(o.NextAccRateLimit) {
		var ret string
		return ret
	}
	return *o.NextAccRateLimit
}

// GetNextAccRateLimitOk returns a tuple with the NextAccRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetNextAccRateLimitOk() (*string, bool) {
	if o == nil || IsNil(o.NextAccRateLimit) {
		return nil, false
	}
	return o.NextAccRateLimit, true
}

// HasNextAccRateLimit returns a boolean if a field has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) HasNextAccRateLimit() bool {
	if o != nil && !IsNil(o.NextAccRateLimit) {
		return true
	}

	return false
}

// SetNextAccRateLimit gets a reference to the given string and assigns it to the NextAccRateLimit field.
func (o *GetTradeAccountRateLimitV5RespDataInner) SetNextAccRateLimit(v string) {
	o.NextAccRateLimit = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetTs() string {
	if o == nil || IsNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) GetTsOk() (*string, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *GetTradeAccountRateLimitV5RespDataInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *GetTradeAccountRateLimitV5RespDataInner) SetTs(v string) {
	o.Ts = &v
}

func (o GetTradeAccountRateLimitV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradeAccountRateLimitV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccRateLimit) {
		toSerialize["accRateLimit"] = o.AccRateLimit
	}
	if !IsNil(o.FillRatio) {
		toSerialize["fillRatio"] = o.FillRatio
	}
	if !IsNil(o.MainFillRatio) {
		toSerialize["mainFillRatio"] = o.MainFillRatio
	}
	if !IsNil(o.NextAccRateLimit) {
		toSerialize["nextAccRateLimit"] = o.NextAccRateLimit
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return toSerialize, nil
}

type NullableGetTradeAccountRateLimitV5RespDataInner struct {
	value *GetTradeAccountRateLimitV5RespDataInner
	isSet bool
}

func (v NullableGetTradeAccountRateLimitV5RespDataInner) Get() *GetTradeAccountRateLimitV5RespDataInner {
	return v.value
}

func (v *NullableGetTradeAccountRateLimitV5RespDataInner) Set(val *GetTradeAccountRateLimitV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradeAccountRateLimitV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradeAccountRateLimitV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradeAccountRateLimitV5RespDataInner(val *GetTradeAccountRateLimitV5RespDataInner) *NullableGetTradeAccountRateLimitV5RespDataInner {
	return &NullableGetTradeAccountRateLimitV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetTradeAccountRateLimitV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradeAccountRateLimitV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


