/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateRfqCreateQuoteV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqCreateQuoteV5RespDataInner{}

// CreateRfqCreateQuoteV5RespDataInner struct for CreateRfqCreateQuoteV5RespDataInner
type CreateRfqCreateQuoteV5RespDataInner struct {
	// The result code, `0` means success.
	Code *string `json:"code,omitempty"`
	// Array of objects containing the results
	Data []CreateRfqCreateQuoteV5RespDataInnerDataInner `json:"data,omitempty"`
	// The error message, not empty if the code is not 0.
	Msg *string `json:"msg,omitempty"`
}

// NewCreateRfqCreateQuoteV5RespDataInner instantiates a new CreateRfqCreateQuoteV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqCreateQuoteV5RespDataInner() *CreateRfqCreateQuoteV5RespDataInner {
	this := CreateRfqCreateQuoteV5RespDataInner{}
	var code string = ""
	this.Code = &code
	var msg string = ""
	this.Msg = &msg
	return &this
}

// NewCreateRfqCreateQuoteV5RespDataInnerWithDefaults instantiates a new CreateRfqCreateQuoteV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqCreateQuoteV5RespDataInnerWithDefaults() *CreateRfqCreateQuoteV5RespDataInner {
	this := CreateRfqCreateQuoteV5RespDataInner{}
	var code string = ""
	this.Code = &code
	var msg string = ""
	this.Msg = &msg
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CreateRfqCreateQuoteV5RespDataInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateQuoteV5RespDataInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CreateRfqCreateQuoteV5RespDataInner) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CreateRfqCreateQuoteV5RespDataInner) SetCode(v string) {
	o.Code = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CreateRfqCreateQuoteV5RespDataInner) GetData() []CreateRfqCreateQuoteV5RespDataInnerDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []CreateRfqCreateQuoteV5RespDataInnerDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateQuoteV5RespDataInner) GetDataOk() ([]CreateRfqCreateQuoteV5RespDataInnerDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CreateRfqCreateQuoteV5RespDataInner) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []CreateRfqCreateQuoteV5RespDataInnerDataInner and assigns it to the Data field.
func (o *CreateRfqCreateQuoteV5RespDataInner) SetData(v []CreateRfqCreateQuoteV5RespDataInnerDataInner) {
	o.Data = v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *CreateRfqCreateQuoteV5RespDataInner) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCreateQuoteV5RespDataInner) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *CreateRfqCreateQuoteV5RespDataInner) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *CreateRfqCreateQuoteV5RespDataInner) SetMsg(v string) {
	o.Msg = &v
}

func (o CreateRfqCreateQuoteV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqCreateQuoteV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	return toSerialize, nil
}

type NullableCreateRfqCreateQuoteV5RespDataInner struct {
	value *CreateRfqCreateQuoteV5RespDataInner
	isSet bool
}

func (v NullableCreateRfqCreateQuoteV5RespDataInner) Get() *CreateRfqCreateQuoteV5RespDataInner {
	return v.value
}

func (v *NullableCreateRfqCreateQuoteV5RespDataInner) Set(val *CreateRfqCreateQuoteV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqCreateQuoteV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqCreateQuoteV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqCreateQuoteV5RespDataInner(val *CreateRfqCreateQuoteV5RespDataInner) *NullableCreateRfqCreateQuoteV5RespDataInner {
	return &NullableCreateRfqCreateQuoteV5RespDataInner{value: val, isSet: true}
}

func (v NullableCreateRfqCreateQuoteV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqCreateQuoteV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


