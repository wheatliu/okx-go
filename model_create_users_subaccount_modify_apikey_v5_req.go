/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateUsersSubaccountModifyApikeyV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUsersSubaccountModifyApikeyV5Req{}

// CreateUsersSubaccountModifyApikeyV5Req struct for CreateUsersSubaccountModifyApikeyV5Req
type CreateUsersSubaccountModifyApikeyV5Req struct {
	// Sub-account APIKey
	ApiKey string `json:"apiKey"`
	// Sub-account API Key linked IP addresses, separate with commas if more than one. Support up to 20 IP addresses.  The IP will be reset if this is passed through.  If `ip` is set to \"\", then no IP addresses is linked to the APIKey.
	Ip *string `json:"ip,omitempty"`
	// Sub-account API Key label. The label will be reset if this is passed through.
	Label *string `json:"label,omitempty"`
	// Sub-account API Key permissions  `read_only`: Read  `trade`: Trade  Separate with commas if more than one.   The permission will be reset if this is passed through.
	Perm *string `json:"perm,omitempty"`
	// Sub-account name
	SubAcct string `json:"subAcct"`
}

type _CreateUsersSubaccountModifyApikeyV5Req CreateUsersSubaccountModifyApikeyV5Req

// NewCreateUsersSubaccountModifyApikeyV5Req instantiates a new CreateUsersSubaccountModifyApikeyV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUsersSubaccountModifyApikeyV5Req(apiKey string, subAcct string) *CreateUsersSubaccountModifyApikeyV5Req {
	this := CreateUsersSubaccountModifyApikeyV5Req{}
	this.ApiKey = apiKey
	var ip string = ""
	this.Ip = &ip
	var label string = ""
	this.Label = &label
	var perm string = ""
	this.Perm = &perm
	this.SubAcct = subAcct
	return &this
}

// NewCreateUsersSubaccountModifyApikeyV5ReqWithDefaults instantiates a new CreateUsersSubaccountModifyApikeyV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUsersSubaccountModifyApikeyV5ReqWithDefaults() *CreateUsersSubaccountModifyApikeyV5Req {
	this := CreateUsersSubaccountModifyApikeyV5Req{}
	var apiKey string = ""
	this.ApiKey = apiKey
	var ip string = ""
	this.Ip = &ip
	var label string = ""
	this.Label = &label
	var perm string = ""
	this.Perm = &perm
	var subAcct string = ""
	this.SubAcct = subAcct
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *CreateUsersSubaccountModifyApikeyV5Req) SetApiKey(v string) {
	o.ApiKey = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *CreateUsersSubaccountModifyApikeyV5Req) SetIp(v string) {
	o.Ip = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CreateUsersSubaccountModifyApikeyV5Req) SetLabel(v string) {
	o.Label = &v
}

// GetPerm returns the Perm field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetPerm() string {
	if o == nil || IsNil(o.Perm) {
		var ret string
		return ret
	}
	return *o.Perm
}

// GetPermOk returns a tuple with the Perm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetPermOk() (*string, bool) {
	if o == nil || IsNil(o.Perm) {
		return nil, false
	}
	return o.Perm, true
}

// HasPerm returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) HasPerm() bool {
	if o != nil && !IsNil(o.Perm) {
		return true
	}

	return false
}

// SetPerm gets a reference to the given string and assigns it to the Perm field.
func (o *CreateUsersSubaccountModifyApikeyV5Req) SetPerm(v string) {
	o.Perm = &v
}

// GetSubAcct returns the SubAcct field value
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetSubAcct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubAcct
}

// GetSubAcctOk returns a tuple with the SubAcct field value
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5Req) GetSubAcctOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubAcct, true
}

// SetSubAcct sets field value
func (o *CreateUsersSubaccountModifyApikeyV5Req) SetSubAcct(v string) {
	o.SubAcct = v
}

func (o CreateUsersSubaccountModifyApikeyV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUsersSubaccountModifyApikeyV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiKey"] = o.ApiKey
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Perm) {
		toSerialize["perm"] = o.Perm
	}
	toSerialize["subAcct"] = o.SubAcct
	return toSerialize, nil
}

func (o *CreateUsersSubaccountModifyApikeyV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiKey",
		"subAcct",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUsersSubaccountModifyApikeyV5Req := _CreateUsersSubaccountModifyApikeyV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUsersSubaccountModifyApikeyV5Req)

	if err != nil {
		return err
	}

	*o = CreateUsersSubaccountModifyApikeyV5Req(varCreateUsersSubaccountModifyApikeyV5Req)

	return err
}

type NullableCreateUsersSubaccountModifyApikeyV5Req struct {
	value *CreateUsersSubaccountModifyApikeyV5Req
	isSet bool
}

func (v NullableCreateUsersSubaccountModifyApikeyV5Req) Get() *CreateUsersSubaccountModifyApikeyV5Req {
	return v.value
}

func (v *NullableCreateUsersSubaccountModifyApikeyV5Req) Set(val *CreateUsersSubaccountModifyApikeyV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUsersSubaccountModifyApikeyV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUsersSubaccountModifyApikeyV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUsersSubaccountModifyApikeyV5Req(val *CreateUsersSubaccountModifyApikeyV5Req) *NullableCreateUsersSubaccountModifyApikeyV5Req {
	return &NullableCreateUsersSubaccountModifyApikeyV5Req{value: val, isSet: true}
}

func (v NullableCreateUsersSubaccountModifyApikeyV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUsersSubaccountModifyApikeyV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


