/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner{}

// GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner struct for GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner
type GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner struct {
	// Debt currency amount   Including principal and interest
	DebtAmt *string `json:"debtAmt,omitempty"`
	// Debt currency
	DebtCcy *string `json:"debtCcy,omitempty"`
}

// NewGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner instantiates a new GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner() *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner {
	this := GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner{}
	var debtAmt string = ""
	this.DebtAmt = &debtAmt
	var debtCcy string = ""
	this.DebtCcy = &debtCcy
	return &this
}

// NewGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInnerWithDefaults instantiates a new GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInnerWithDefaults() *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner {
	this := GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner{}
	var debtAmt string = ""
	this.DebtAmt = &debtAmt
	var debtCcy string = ""
	this.DebtCcy = &debtCcy
	return &this
}

// GetDebtAmt returns the DebtAmt field value if set, zero value otherwise.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) GetDebtAmt() string {
	if o == nil || IsNil(o.DebtAmt) {
		var ret string
		return ret
	}
	return *o.DebtAmt
}

// GetDebtAmtOk returns a tuple with the DebtAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) GetDebtAmtOk() (*string, bool) {
	if o == nil || IsNil(o.DebtAmt) {
		return nil, false
	}
	return o.DebtAmt, true
}

// HasDebtAmt returns a boolean if a field has been set.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) HasDebtAmt() bool {
	if o != nil && !IsNil(o.DebtAmt) {
		return true
	}

	return false
}

// SetDebtAmt gets a reference to the given string and assigns it to the DebtAmt field.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) SetDebtAmt(v string) {
	o.DebtAmt = &v
}

// GetDebtCcy returns the DebtCcy field value if set, zero value otherwise.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) GetDebtCcy() string {
	if o == nil || IsNil(o.DebtCcy) {
		var ret string
		return ret
	}
	return *o.DebtCcy
}

// GetDebtCcyOk returns a tuple with the DebtCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) GetDebtCcyOk() (*string, bool) {
	if o == nil || IsNil(o.DebtCcy) {
		return nil, false
	}
	return o.DebtCcy, true
}

// HasDebtCcy returns a boolean if a field has been set.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) HasDebtCcy() bool {
	if o != nil && !IsNil(o.DebtCcy) {
		return true
	}

	return false
}

// SetDebtCcy gets a reference to the given string and assigns it to the DebtCcy field.
func (o *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) SetDebtCcy(v string) {
	o.DebtCcy = &v
}

func (o GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DebtAmt) {
		toSerialize["debtAmt"] = o.DebtAmt
	}
	if !IsNil(o.DebtCcy) {
		toSerialize["debtCcy"] = o.DebtCcy
	}
	return toSerialize, nil
}

type NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner struct {
	value *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner
	isSet bool
}

func (v NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) Get() *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner {
	return v.value
}

func (v *NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) Set(val *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner(val *GetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) *NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner {
	return &NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner{value: val, isSet: true}
}

func (v NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradeOneClickRepayCurrencyListV5RespDataInnerDebtDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


