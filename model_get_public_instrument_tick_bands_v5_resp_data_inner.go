/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetPublicInstrumentTickBandsV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPublicInstrumentTickBandsV5RespDataInner{}

// GetPublicInstrumentTickBandsV5RespDataInner struct for GetPublicInstrumentTickBandsV5RespDataInner
type GetPublicInstrumentTickBandsV5RespDataInner struct {
	// Instrument family
	InstFamily *string `json:"instFamily,omitempty"`
	// Instrument type
	InstType *string `json:"instType,omitempty"`
	// Tick size band
	TickBand []GetPublicInstrumentTickBandsV5RespDataInnerTickBandInner `json:"tickBand,omitempty"`
}

// NewGetPublicInstrumentTickBandsV5RespDataInner instantiates a new GetPublicInstrumentTickBandsV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPublicInstrumentTickBandsV5RespDataInner() *GetPublicInstrumentTickBandsV5RespDataInner {
	this := GetPublicInstrumentTickBandsV5RespDataInner{}
	var instFamily string = ""
	this.InstFamily = &instFamily
	var instType string = ""
	this.InstType = &instType
	return &this
}

// NewGetPublicInstrumentTickBandsV5RespDataInnerWithDefaults instantiates a new GetPublicInstrumentTickBandsV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPublicInstrumentTickBandsV5RespDataInnerWithDefaults() *GetPublicInstrumentTickBandsV5RespDataInner {
	this := GetPublicInstrumentTickBandsV5RespDataInner{}
	var instFamily string = ""
	this.InstFamily = &instFamily
	var instType string = ""
	this.InstType = &instType
	return &this
}

// GetInstFamily returns the InstFamily field value if set, zero value otherwise.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) GetInstFamily() string {
	if o == nil || IsNil(o.InstFamily) {
		var ret string
		return ret
	}
	return *o.InstFamily
}

// GetInstFamilyOk returns a tuple with the InstFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) GetInstFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.InstFamily) {
		return nil, false
	}
	return o.InstFamily, true
}

// HasInstFamily returns a boolean if a field has been set.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) HasInstFamily() bool {
	if o != nil && !IsNil(o.InstFamily) {
		return true
	}

	return false
}

// SetInstFamily gets a reference to the given string and assigns it to the InstFamily field.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) SetInstFamily(v string) {
	o.InstFamily = &v
}

// GetInstType returns the InstType field value if set, zero value otherwise.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) GetInstType() string {
	if o == nil || IsNil(o.InstType) {
		var ret string
		return ret
	}
	return *o.InstType
}

// GetInstTypeOk returns a tuple with the InstType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) GetInstTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstType) {
		return nil, false
	}
	return o.InstType, true
}

// HasInstType returns a boolean if a field has been set.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) HasInstType() bool {
	if o != nil && !IsNil(o.InstType) {
		return true
	}

	return false
}

// SetInstType gets a reference to the given string and assigns it to the InstType field.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) SetInstType(v string) {
	o.InstType = &v
}

// GetTickBand returns the TickBand field value if set, zero value otherwise.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) GetTickBand() []GetPublicInstrumentTickBandsV5RespDataInnerTickBandInner {
	if o == nil || IsNil(o.TickBand) {
		var ret []GetPublicInstrumentTickBandsV5RespDataInnerTickBandInner
		return ret
	}
	return o.TickBand
}

// GetTickBandOk returns a tuple with the TickBand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) GetTickBandOk() ([]GetPublicInstrumentTickBandsV5RespDataInnerTickBandInner, bool) {
	if o == nil || IsNil(o.TickBand) {
		return nil, false
	}
	return o.TickBand, true
}

// HasTickBand returns a boolean if a field has been set.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) HasTickBand() bool {
	if o != nil && !IsNil(o.TickBand) {
		return true
	}

	return false
}

// SetTickBand gets a reference to the given []GetPublicInstrumentTickBandsV5RespDataInnerTickBandInner and assigns it to the TickBand field.
func (o *GetPublicInstrumentTickBandsV5RespDataInner) SetTickBand(v []GetPublicInstrumentTickBandsV5RespDataInnerTickBandInner) {
	o.TickBand = v
}

func (o GetPublicInstrumentTickBandsV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPublicInstrumentTickBandsV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstFamily) {
		toSerialize["instFamily"] = o.InstFamily
	}
	if !IsNil(o.InstType) {
		toSerialize["instType"] = o.InstType
	}
	if !IsNil(o.TickBand) {
		toSerialize["tickBand"] = o.TickBand
	}
	return toSerialize, nil
}

type NullableGetPublicInstrumentTickBandsV5RespDataInner struct {
	value *GetPublicInstrumentTickBandsV5RespDataInner
	isSet bool
}

func (v NullableGetPublicInstrumentTickBandsV5RespDataInner) Get() *GetPublicInstrumentTickBandsV5RespDataInner {
	return v.value
}

func (v *NullableGetPublicInstrumentTickBandsV5RespDataInner) Set(val *GetPublicInstrumentTickBandsV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPublicInstrumentTickBandsV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPublicInstrumentTickBandsV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPublicInstrumentTickBandsV5RespDataInner(val *GetPublicInstrumentTickBandsV5RespDataInner) *NullableGetPublicInstrumentTickBandsV5RespDataInner {
	return &NullableGetPublicInstrumentTickBandsV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetPublicInstrumentTickBandsV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPublicInstrumentTickBandsV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


