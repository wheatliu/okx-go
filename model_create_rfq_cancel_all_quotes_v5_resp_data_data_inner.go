/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateRfqCancelAllQuotesV5RespDataDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqCancelAllQuotesV5RespDataDataInner{}

// CreateRfqCancelAllQuotesV5RespDataDataInner struct for CreateRfqCancelAllQuotesV5RespDataDataInner
type CreateRfqCancelAllQuotesV5RespDataDataInner struct {
	// The timestamp of cancellation successfully. Unix timestamp format in milliseconds, e.g. 1597026383085.
	Ts *string `json:"ts,omitempty"`
}

// NewCreateRfqCancelAllQuotesV5RespDataDataInner instantiates a new CreateRfqCancelAllQuotesV5RespDataDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqCancelAllQuotesV5RespDataDataInner() *CreateRfqCancelAllQuotesV5RespDataDataInner {
	this := CreateRfqCancelAllQuotesV5RespDataDataInner{}
	var ts string = ""
	this.Ts = &ts
	return &this
}

// NewCreateRfqCancelAllQuotesV5RespDataDataInnerWithDefaults instantiates a new CreateRfqCancelAllQuotesV5RespDataDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqCancelAllQuotesV5RespDataDataInnerWithDefaults() *CreateRfqCancelAllQuotesV5RespDataDataInner {
	this := CreateRfqCancelAllQuotesV5RespDataDataInner{}
	var ts string = ""
	this.Ts = &ts
	return &this
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *CreateRfqCancelAllQuotesV5RespDataDataInner) GetTs() string {
	if o == nil || IsNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelAllQuotesV5RespDataDataInner) GetTsOk() (*string, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *CreateRfqCancelAllQuotesV5RespDataDataInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *CreateRfqCancelAllQuotesV5RespDataDataInner) SetTs(v string) {
	o.Ts = &v
}

func (o CreateRfqCancelAllQuotesV5RespDataDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqCancelAllQuotesV5RespDataDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return toSerialize, nil
}

type NullableCreateRfqCancelAllQuotesV5RespDataDataInner struct {
	value *CreateRfqCancelAllQuotesV5RespDataDataInner
	isSet bool
}

func (v NullableCreateRfqCancelAllQuotesV5RespDataDataInner) Get() *CreateRfqCancelAllQuotesV5RespDataDataInner {
	return v.value
}

func (v *NullableCreateRfqCancelAllQuotesV5RespDataDataInner) Set(val *CreateRfqCancelAllQuotesV5RespDataDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqCancelAllQuotesV5RespDataDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqCancelAllQuotesV5RespDataDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqCancelAllQuotesV5RespDataDataInner(val *CreateRfqCancelAllQuotesV5RespDataDataInner) *NullableCreateRfqCancelAllQuotesV5RespDataDataInner {
	return &NullableCreateRfqCancelAllQuotesV5RespDataDataInner{value: val, isSet: true}
}

func (v NullableCreateRfqCancelAllQuotesV5RespDataDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqCancelAllQuotesV5RespDataDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


