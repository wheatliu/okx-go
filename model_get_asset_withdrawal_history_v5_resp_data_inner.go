/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetAssetWithdrawalHistoryV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAssetWithdrawalHistoryV5RespDataInner{}

// GetAssetWithdrawalHistoryV5RespDataInner struct for GetAssetWithdrawalHistoryV5RespDataInner
type GetAssetWithdrawalHistoryV5RespDataInner struct {
	// Withdrawal address attachment (This will not be returned if the currency does not require this) e.g. TONCOIN attached tag name is comment, the return will be {'comment':'123456'}
	AddrEx map[string]interface{} `json:"addrEx,omitempty"`
	// Withdrawal amount
	Amt *string `json:"amt,omitempty"`
	// Area code for the phone number  If `from` is a phone number, this parameter returns the area code for the phone number
	AreaCodeFrom *string `json:"areaCodeFrom,omitempty"`
	// Area code for the phone number  If `to` is a phone number, this parameter returns the area code for the phone number
	AreaCodeTo *string `json:"areaCodeTo,omitempty"`
	// Currency
	Ccy *string `json:"ccy,omitempty"`
	// Chain name, e.g. `USDT-ERC20`, `USDT-TRC20`
	Chain *string `json:"chain,omitempty"`
	// Client-supplied ID
	ClientId *string `json:"clientId,omitempty"`
	// Withdrawal fee amount
	Fee *string `json:"fee,omitempty"`
	// Withdrawal fee currency, e.g. `USDT`
	FeeCcy *string `json:"feeCcy,omitempty"`
	// Withdrawal account   It can be `email`/`phone`/`sub-account name`
	From *string `json:"from,omitempty"`
	// Some currencies require this parameter for withdrawals. This is not returned if not required.
	Memo *string `json:"memo,omitempty"`
	// Whether it is a non-tradable asset or not  `true`: non-tradable asset, `false`: tradable asset
	NonTradableAsset *bool `json:"nonTradableAsset,omitempty"`
	// Withdrawal note
	Note *string `json:"note,omitempty"`
	// Some currencies require a payment ID for withdrawals. This is not returned if not required.
	PmtId *string `json:"pmtId,omitempty"`
	// Status of withdrawal
	State *string `json:"state,omitempty"`
	// Some currencies require a tag for withdrawals. This is not returned if not required.
	Tag *string `json:"tag,omitempty"`
	// Receiving address
	To *string `json:"to,omitempty"`
	// Time the withdrawal request was submitted, Unix timestamp format in milliseconds, e.g. `1655251200000`.
	Ts *string `json:"ts,omitempty"`
	// Hash record of the withdrawal  This parameter will return \"\" for internal transfers.
	TxId *string `json:"txId,omitempty"`
	// Withdrawal ID
	WdId *string `json:"wdId,omitempty"`
}

// NewGetAssetWithdrawalHistoryV5RespDataInner instantiates a new GetAssetWithdrawalHistoryV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAssetWithdrawalHistoryV5RespDataInner() *GetAssetWithdrawalHistoryV5RespDataInner {
	this := GetAssetWithdrawalHistoryV5RespDataInner{}
	var amt string = ""
	this.Amt = &amt
	var areaCodeFrom string = ""
	this.AreaCodeFrom = &areaCodeFrom
	var areaCodeTo string = ""
	this.AreaCodeTo = &areaCodeTo
	var ccy string = ""
	this.Ccy = &ccy
	var chain string = ""
	this.Chain = &chain
	var clientId string = ""
	this.ClientId = &clientId
	var fee string = ""
	this.Fee = &fee
	var feeCcy string = ""
	this.FeeCcy = &feeCcy
	var from string = ""
	this.From = &from
	var memo string = ""
	this.Memo = &memo
	var note string = ""
	this.Note = &note
	var pmtId string = ""
	this.PmtId = &pmtId
	var state string = ""
	this.State = &state
	var tag string = ""
	this.Tag = &tag
	var to string = ""
	this.To = &to
	var ts string = ""
	this.Ts = &ts
	var txId string = ""
	this.TxId = &txId
	var wdId string = ""
	this.WdId = &wdId
	return &this
}

// NewGetAssetWithdrawalHistoryV5RespDataInnerWithDefaults instantiates a new GetAssetWithdrawalHistoryV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAssetWithdrawalHistoryV5RespDataInnerWithDefaults() *GetAssetWithdrawalHistoryV5RespDataInner {
	this := GetAssetWithdrawalHistoryV5RespDataInner{}
	var amt string = ""
	this.Amt = &amt
	var areaCodeFrom string = ""
	this.AreaCodeFrom = &areaCodeFrom
	var areaCodeTo string = ""
	this.AreaCodeTo = &areaCodeTo
	var ccy string = ""
	this.Ccy = &ccy
	var chain string = ""
	this.Chain = &chain
	var clientId string = ""
	this.ClientId = &clientId
	var fee string = ""
	this.Fee = &fee
	var feeCcy string = ""
	this.FeeCcy = &feeCcy
	var from string = ""
	this.From = &from
	var memo string = ""
	this.Memo = &memo
	var note string = ""
	this.Note = &note
	var pmtId string = ""
	this.PmtId = &pmtId
	var state string = ""
	this.State = &state
	var tag string = ""
	this.Tag = &tag
	var to string = ""
	this.To = &to
	var ts string = ""
	this.Ts = &ts
	var txId string = ""
	this.TxId = &txId
	var wdId string = ""
	this.WdId = &wdId
	return &this
}

// GetAddrEx returns the AddrEx field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAddrEx() map[string]interface{} {
	if o == nil || IsNil(o.AddrEx) {
		var ret map[string]interface{}
		return ret
	}
	return o.AddrEx
}

// GetAddrExOk returns a tuple with the AddrEx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAddrExOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AddrEx) {
		return map[string]interface{}{}, false
	}
	return o.AddrEx, true
}

// HasAddrEx returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasAddrEx() bool {
	if o != nil && !IsNil(o.AddrEx) {
		return true
	}

	return false
}

// SetAddrEx gets a reference to the given map[string]interface{} and assigns it to the AddrEx field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetAddrEx(v map[string]interface{}) {
	o.AddrEx = v
}

// GetAmt returns the Amt field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAmt() string {
	if o == nil || IsNil(o.Amt) {
		var ret string
		return ret
	}
	return *o.Amt
}

// GetAmtOk returns a tuple with the Amt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAmtOk() (*string, bool) {
	if o == nil || IsNil(o.Amt) {
		return nil, false
	}
	return o.Amt, true
}

// HasAmt returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasAmt() bool {
	if o != nil && !IsNil(o.Amt) {
		return true
	}

	return false
}

// SetAmt gets a reference to the given string and assigns it to the Amt field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetAmt(v string) {
	o.Amt = &v
}

// GetAreaCodeFrom returns the AreaCodeFrom field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAreaCodeFrom() string {
	if o == nil || IsNil(o.AreaCodeFrom) {
		var ret string
		return ret
	}
	return *o.AreaCodeFrom
}

// GetAreaCodeFromOk returns a tuple with the AreaCodeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAreaCodeFromOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCodeFrom) {
		return nil, false
	}
	return o.AreaCodeFrom, true
}

// HasAreaCodeFrom returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasAreaCodeFrom() bool {
	if o != nil && !IsNil(o.AreaCodeFrom) {
		return true
	}

	return false
}

// SetAreaCodeFrom gets a reference to the given string and assigns it to the AreaCodeFrom field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetAreaCodeFrom(v string) {
	o.AreaCodeFrom = &v
}

// GetAreaCodeTo returns the AreaCodeTo field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAreaCodeTo() string {
	if o == nil || IsNil(o.AreaCodeTo) {
		var ret string
		return ret
	}
	return *o.AreaCodeTo
}

// GetAreaCodeToOk returns a tuple with the AreaCodeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetAreaCodeToOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCodeTo) {
		return nil, false
	}
	return o.AreaCodeTo, true
}

// HasAreaCodeTo returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasAreaCodeTo() bool {
	if o != nil && !IsNil(o.AreaCodeTo) {
		return true
	}

	return false
}

// SetAreaCodeTo gets a reference to the given string and assigns it to the AreaCodeTo field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetAreaCodeTo(v string) {
	o.AreaCodeTo = &v
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetCcy(v string) {
	o.Ccy = &v
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetChain() string {
	if o == nil || IsNil(o.Chain) {
		var ret string
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetChainOk() (*string, bool) {
	if o == nil || IsNil(o.Chain) {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasChain() bool {
	if o != nil && !IsNil(o.Chain) {
		return true
	}

	return false
}

// SetChain gets a reference to the given string and assigns it to the Chain field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetChain(v string) {
	o.Chain = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetClientId(v string) {
	o.ClientId = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetFee(v string) {
	o.Fee = &v
}

// GetFeeCcy returns the FeeCcy field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetFeeCcy() string {
	if o == nil || IsNil(o.FeeCcy) {
		var ret string
		return ret
	}
	return *o.FeeCcy
}

// GetFeeCcyOk returns a tuple with the FeeCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetFeeCcyOk() (*string, bool) {
	if o == nil || IsNil(o.FeeCcy) {
		return nil, false
	}
	return o.FeeCcy, true
}

// HasFeeCcy returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasFeeCcy() bool {
	if o != nil && !IsNil(o.FeeCcy) {
		return true
	}

	return false
}

// SetFeeCcy gets a reference to the given string and assigns it to the FeeCcy field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetFeeCcy(v string) {
	o.FeeCcy = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetFrom(v string) {
	o.From = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetMemo(v string) {
	o.Memo = &v
}

// GetNonTradableAsset returns the NonTradableAsset field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetNonTradableAsset() bool {
	if o == nil || IsNil(o.NonTradableAsset) {
		var ret bool
		return ret
	}
	return *o.NonTradableAsset
}

// GetNonTradableAssetOk returns a tuple with the NonTradableAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetNonTradableAssetOk() (*bool, bool) {
	if o == nil || IsNil(o.NonTradableAsset) {
		return nil, false
	}
	return o.NonTradableAsset, true
}

// HasNonTradableAsset returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasNonTradableAsset() bool {
	if o != nil && !IsNil(o.NonTradableAsset) {
		return true
	}

	return false
}

// SetNonTradableAsset gets a reference to the given bool and assigns it to the NonTradableAsset field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetNonTradableAsset(v bool) {
	o.NonTradableAsset = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetNote(v string) {
	o.Note = &v
}

// GetPmtId returns the PmtId field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetPmtId() string {
	if o == nil || IsNil(o.PmtId) {
		var ret string
		return ret
	}
	return *o.PmtId
}

// GetPmtIdOk returns a tuple with the PmtId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetPmtIdOk() (*string, bool) {
	if o == nil || IsNil(o.PmtId) {
		return nil, false
	}
	return o.PmtId, true
}

// HasPmtId returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasPmtId() bool {
	if o != nil && !IsNil(o.PmtId) {
		return true
	}

	return false
}

// SetPmtId gets a reference to the given string and assigns it to the PmtId field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetPmtId(v string) {
	o.PmtId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetState(v string) {
	o.State = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetTag(v string) {
	o.Tag = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetTo(v string) {
	o.To = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetTs() string {
	if o == nil || IsNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetTsOk() (*string, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetTs(v string) {
	o.Ts = &v
}

// GetTxId returns the TxId field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetTxId() string {
	if o == nil || IsNil(o.TxId) {
		var ret string
		return ret
	}
	return *o.TxId
}

// GetTxIdOk returns a tuple with the TxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetTxIdOk() (*string, bool) {
	if o == nil || IsNil(o.TxId) {
		return nil, false
	}
	return o.TxId, true
}

// HasTxId returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasTxId() bool {
	if o != nil && !IsNil(o.TxId) {
		return true
	}

	return false
}

// SetTxId gets a reference to the given string and assigns it to the TxId field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetTxId(v string) {
	o.TxId = &v
}

// GetWdId returns the WdId field value if set, zero value otherwise.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetWdId() string {
	if o == nil || IsNil(o.WdId) {
		var ret string
		return ret
	}
	return *o.WdId
}

// GetWdIdOk returns a tuple with the WdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) GetWdIdOk() (*string, bool) {
	if o == nil || IsNil(o.WdId) {
		return nil, false
	}
	return o.WdId, true
}

// HasWdId returns a boolean if a field has been set.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) HasWdId() bool {
	if o != nil && !IsNil(o.WdId) {
		return true
	}

	return false
}

// SetWdId gets a reference to the given string and assigns it to the WdId field.
func (o *GetAssetWithdrawalHistoryV5RespDataInner) SetWdId(v string) {
	o.WdId = &v
}

func (o GetAssetWithdrawalHistoryV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAssetWithdrawalHistoryV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddrEx) {
		toSerialize["addrEx"] = o.AddrEx
	}
	if !IsNil(o.Amt) {
		toSerialize["amt"] = o.Amt
	}
	if !IsNil(o.AreaCodeFrom) {
		toSerialize["areaCodeFrom"] = o.AreaCodeFrom
	}
	if !IsNil(o.AreaCodeTo) {
		toSerialize["areaCodeTo"] = o.AreaCodeTo
	}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	if !IsNil(o.Chain) {
		toSerialize["chain"] = o.Chain
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.FeeCcy) {
		toSerialize["feeCcy"] = o.FeeCcy
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.NonTradableAsset) {
		toSerialize["nonTradableAsset"] = o.NonTradableAsset
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.PmtId) {
		toSerialize["pmtId"] = o.PmtId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !IsNil(o.TxId) {
		toSerialize["txId"] = o.TxId
	}
	if !IsNil(o.WdId) {
		toSerialize["wdId"] = o.WdId
	}
	return toSerialize, nil
}

type NullableGetAssetWithdrawalHistoryV5RespDataInner struct {
	value *GetAssetWithdrawalHistoryV5RespDataInner
	isSet bool
}

func (v NullableGetAssetWithdrawalHistoryV5RespDataInner) Get() *GetAssetWithdrawalHistoryV5RespDataInner {
	return v.value
}

func (v *NullableGetAssetWithdrawalHistoryV5RespDataInner) Set(val *GetAssetWithdrawalHistoryV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAssetWithdrawalHistoryV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAssetWithdrawalHistoryV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAssetWithdrawalHistoryV5RespDataInner(val *GetAssetWithdrawalHistoryV5RespDataInner) *NullableGetAssetWithdrawalHistoryV5RespDataInner {
	return &NullableGetAssetWithdrawalHistoryV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetAssetWithdrawalHistoryV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAssetWithdrawalHistoryV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


