/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateFinanceStakingDefiCancelV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFinanceStakingDefiCancelV5Req{}

// CreateFinanceStakingDefiCancelV5Req struct for CreateFinanceStakingDefiCancelV5Req
type CreateFinanceStakingDefiCancelV5Req struct {
	// Order ID
	OrdId string `json:"ordId"`
	// Protocol type  `defi`: on-chain earn
	ProtocolType string `json:"protocolType"`
}

type _CreateFinanceStakingDefiCancelV5Req CreateFinanceStakingDefiCancelV5Req

// NewCreateFinanceStakingDefiCancelV5Req instantiates a new CreateFinanceStakingDefiCancelV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFinanceStakingDefiCancelV5Req(ordId string, protocolType string) *CreateFinanceStakingDefiCancelV5Req {
	this := CreateFinanceStakingDefiCancelV5Req{}
	this.OrdId = ordId
	this.ProtocolType = protocolType
	return &this
}

// NewCreateFinanceStakingDefiCancelV5ReqWithDefaults instantiates a new CreateFinanceStakingDefiCancelV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFinanceStakingDefiCancelV5ReqWithDefaults() *CreateFinanceStakingDefiCancelV5Req {
	this := CreateFinanceStakingDefiCancelV5Req{}
	var ordId string = ""
	this.OrdId = ordId
	var protocolType string = ""
	this.ProtocolType = protocolType
	return &this
}

// GetOrdId returns the OrdId field value
func (o *CreateFinanceStakingDefiCancelV5Req) GetOrdId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrdId
}

// GetOrdIdOk returns a tuple with the OrdId field value
// and a boolean to check if the value has been set.
func (o *CreateFinanceStakingDefiCancelV5Req) GetOrdIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrdId, true
}

// SetOrdId sets field value
func (o *CreateFinanceStakingDefiCancelV5Req) SetOrdId(v string) {
	o.OrdId = v
}

// GetProtocolType returns the ProtocolType field value
func (o *CreateFinanceStakingDefiCancelV5Req) GetProtocolType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProtocolType
}

// GetProtocolTypeOk returns a tuple with the ProtocolType field value
// and a boolean to check if the value has been set.
func (o *CreateFinanceStakingDefiCancelV5Req) GetProtocolTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolType, true
}

// SetProtocolType sets field value
func (o *CreateFinanceStakingDefiCancelV5Req) SetProtocolType(v string) {
	o.ProtocolType = v
}

func (o CreateFinanceStakingDefiCancelV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFinanceStakingDefiCancelV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ordId"] = o.OrdId
	toSerialize["protocolType"] = o.ProtocolType
	return toSerialize, nil
}

func (o *CreateFinanceStakingDefiCancelV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ordId",
		"protocolType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateFinanceStakingDefiCancelV5Req := _CreateFinanceStakingDefiCancelV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateFinanceStakingDefiCancelV5Req)

	if err != nil {
		return err
	}

	*o = CreateFinanceStakingDefiCancelV5Req(varCreateFinanceStakingDefiCancelV5Req)

	return err
}

type NullableCreateFinanceStakingDefiCancelV5Req struct {
	value *CreateFinanceStakingDefiCancelV5Req
	isSet bool
}

func (v NullableCreateFinanceStakingDefiCancelV5Req) Get() *CreateFinanceStakingDefiCancelV5Req {
	return v.value
}

func (v *NullableCreateFinanceStakingDefiCancelV5Req) Set(val *CreateFinanceStakingDefiCancelV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFinanceStakingDefiCancelV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFinanceStakingDefiCancelV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFinanceStakingDefiCancelV5Req(val *CreateFinanceStakingDefiCancelV5Req) *NullableCreateFinanceStakingDefiCancelV5Req {
	return &NullableCreateFinanceStakingDefiCancelV5Req{value: val, isSet: true}
}

func (v NullableCreateFinanceStakingDefiCancelV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFinanceStakingDefiCancelV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


