/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateRfqCancelBatchRfqsV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRfqCancelBatchRfqsV5Req{}

// CreateRfqCancelBatchRfqsV5Req struct for CreateRfqCancelBatchRfqsV5Req
type CreateRfqCancelBatchRfqsV5Req struct {
	// Client-supplied RFQ IDs.   Either `rfqIds` or `clRfqIds` is required.   If both attributes are sent, `rfqIds` will be used as primary identifier.
	ClRfqIds []string `json:"clRfqIds,omitempty"`
	// RFQ IDs .
	RfqIds []string `json:"rfqIds,omitempty"`
}

// NewCreateRfqCancelBatchRfqsV5Req instantiates a new CreateRfqCancelBatchRfqsV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRfqCancelBatchRfqsV5Req() *CreateRfqCancelBatchRfqsV5Req {
	this := CreateRfqCancelBatchRfqsV5Req{}
	return &this
}

// NewCreateRfqCancelBatchRfqsV5ReqWithDefaults instantiates a new CreateRfqCancelBatchRfqsV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRfqCancelBatchRfqsV5ReqWithDefaults() *CreateRfqCancelBatchRfqsV5Req {
	this := CreateRfqCancelBatchRfqsV5Req{}
	return &this
}

// GetClRfqIds returns the ClRfqIds field value if set, zero value otherwise.
func (o *CreateRfqCancelBatchRfqsV5Req) GetClRfqIds() []string {
	if o == nil || IsNil(o.ClRfqIds) {
		var ret []string
		return ret
	}
	return o.ClRfqIds
}

// GetClRfqIdsOk returns a tuple with the ClRfqIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelBatchRfqsV5Req) GetClRfqIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ClRfqIds) {
		return nil, false
	}
	return o.ClRfqIds, true
}

// HasClRfqIds returns a boolean if a field has been set.
func (o *CreateRfqCancelBatchRfqsV5Req) HasClRfqIds() bool {
	if o != nil && !IsNil(o.ClRfqIds) {
		return true
	}

	return false
}

// SetClRfqIds gets a reference to the given []string and assigns it to the ClRfqIds field.
func (o *CreateRfqCancelBatchRfqsV5Req) SetClRfqIds(v []string) {
	o.ClRfqIds = v
}

// GetRfqIds returns the RfqIds field value if set, zero value otherwise.
func (o *CreateRfqCancelBatchRfqsV5Req) GetRfqIds() []string {
	if o == nil || IsNil(o.RfqIds) {
		var ret []string
		return ret
	}
	return o.RfqIds
}

// GetRfqIdsOk returns a tuple with the RfqIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRfqCancelBatchRfqsV5Req) GetRfqIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RfqIds) {
		return nil, false
	}
	return o.RfqIds, true
}

// HasRfqIds returns a boolean if a field has been set.
func (o *CreateRfqCancelBatchRfqsV5Req) HasRfqIds() bool {
	if o != nil && !IsNil(o.RfqIds) {
		return true
	}

	return false
}

// SetRfqIds gets a reference to the given []string and assigns it to the RfqIds field.
func (o *CreateRfqCancelBatchRfqsV5Req) SetRfqIds(v []string) {
	o.RfqIds = v
}

func (o CreateRfqCancelBatchRfqsV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRfqCancelBatchRfqsV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClRfqIds) {
		toSerialize["clRfqIds"] = o.ClRfqIds
	}
	if !IsNil(o.RfqIds) {
		toSerialize["rfqIds"] = o.RfqIds
	}
	return toSerialize, nil
}

type NullableCreateRfqCancelBatchRfqsV5Req struct {
	value *CreateRfqCancelBatchRfqsV5Req
	isSet bool
}

func (v NullableCreateRfqCancelBatchRfqsV5Req) Get() *CreateRfqCancelBatchRfqsV5Req {
	return v.value
}

func (v *NullableCreateRfqCancelBatchRfqsV5Req) Set(val *CreateRfqCancelBatchRfqsV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRfqCancelBatchRfqsV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRfqCancelBatchRfqsV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRfqCancelBatchRfqsV5Req(val *CreateRfqCancelBatchRfqsV5Req) *NullableCreateRfqCancelBatchRfqsV5Req {
	return &NullableCreateRfqCancelBatchRfqsV5Req{value: val, isSet: true}
}

func (v NullableCreateRfqCancelBatchRfqsV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRfqCancelBatchRfqsV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


