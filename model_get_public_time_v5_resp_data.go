/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetPublicTimeV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPublicTimeV5RespData{}

// GetPublicTimeV5RespData struct for GetPublicTimeV5RespData
type GetPublicTimeV5RespData struct {
	// System time, Unix timestamp format in milliseconds, e.g. `1597026383085`
	Ts *string `json:"ts,omitempty"`
}

// NewGetPublicTimeV5RespData instantiates a new GetPublicTimeV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPublicTimeV5RespData() *GetPublicTimeV5RespData {
	this := GetPublicTimeV5RespData{}
	var ts string = ""
	this.Ts = &ts
	return &this
}

// NewGetPublicTimeV5RespDataWithDefaults instantiates a new GetPublicTimeV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPublicTimeV5RespDataWithDefaults() *GetPublicTimeV5RespData {
	this := GetPublicTimeV5RespData{}
	var ts string = ""
	this.Ts = &ts
	return &this
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *GetPublicTimeV5RespData) GetTs() string {
	if o == nil || IsNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicTimeV5RespData) GetTsOk() (*string, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *GetPublicTimeV5RespData) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *GetPublicTimeV5RespData) SetTs(v string) {
	o.Ts = &v
}

func (o GetPublicTimeV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPublicTimeV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return toSerialize, nil
}

type NullableGetPublicTimeV5RespData struct {
	value *GetPublicTimeV5RespData
	isSet bool
}

func (v NullableGetPublicTimeV5RespData) Get() *GetPublicTimeV5RespData {
	return v.value
}

func (v *NullableGetPublicTimeV5RespData) Set(val *GetPublicTimeV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPublicTimeV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPublicTimeV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPublicTimeV5RespData(val *GetPublicTimeV5RespData) *NullableGetPublicTimeV5RespData {
	return &NullableGetPublicTimeV5RespData{value: val, isSet: true}
}

func (v NullableGetPublicTimeV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPublicTimeV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


