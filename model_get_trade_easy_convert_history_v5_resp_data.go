/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetTradeEasyConvertHistoryV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradeEasyConvertHistoryV5RespData{}

// GetTradeEasyConvertHistoryV5RespData struct for GetTradeEasyConvertHistoryV5RespData
type GetTradeEasyConvertHistoryV5RespData struct {
	// The account where the mainstream currency is located  `6`: Funding account   `18`: Trading account
	Acct *string `json:"acct,omitempty"`
	// Amount of small payment currency convert from
	FillFromSz *string `json:"fillFromSz,omitempty"`
	// Amount of mainstream currency convert to
	FillToSz *string `json:"fillToSz,omitempty"`
	// Type of small payment currency convert from
	FromCcy *string `json:"fromCcy,omitempty"`
	// Current status of easy convert   `running`: Running   `filled`: Filled   `failed`: Failed
	Status *string `json:"status,omitempty"`
	// Type of mainstream currency convert to
	ToCcy *string `json:"toCcy,omitempty"`
	// Trade time, Unix timestamp format in milliseconds, e.g. `1597026383085`
	UTime *string `json:"uTime,omitempty"`
}

// NewGetTradeEasyConvertHistoryV5RespData instantiates a new GetTradeEasyConvertHistoryV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradeEasyConvertHistoryV5RespData() *GetTradeEasyConvertHistoryV5RespData {
	this := GetTradeEasyConvertHistoryV5RespData{}
	var acct string = ""
	this.Acct = &acct
	var fillFromSz string = ""
	this.FillFromSz = &fillFromSz
	var fillToSz string = ""
	this.FillToSz = &fillToSz
	var fromCcy string = ""
	this.FromCcy = &fromCcy
	var status string = ""
	this.Status = &status
	var toCcy string = ""
	this.ToCcy = &toCcy
	var uTime string = ""
	this.UTime = &uTime
	return &this
}

// NewGetTradeEasyConvertHistoryV5RespDataWithDefaults instantiates a new GetTradeEasyConvertHistoryV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradeEasyConvertHistoryV5RespDataWithDefaults() *GetTradeEasyConvertHistoryV5RespData {
	this := GetTradeEasyConvertHistoryV5RespData{}
	var acct string = ""
	this.Acct = &acct
	var fillFromSz string = ""
	this.FillFromSz = &fillFromSz
	var fillToSz string = ""
	this.FillToSz = &fillToSz
	var fromCcy string = ""
	this.FromCcy = &fromCcy
	var status string = ""
	this.Status = &status
	var toCcy string = ""
	this.ToCcy = &toCcy
	var uTime string = ""
	this.UTime = &uTime
	return &this
}

// GetAcct returns the Acct field value if set, zero value otherwise.
func (o *GetTradeEasyConvertHistoryV5RespData) GetAcct() string {
	if o == nil || IsNil(o.Acct) {
		var ret string
		return ret
	}
	return *o.Acct
}

// GetAcctOk returns a tuple with the Acct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) GetAcctOk() (*string, bool) {
	if o == nil || IsNil(o.Acct) {
		return nil, false
	}
	return o.Acct, true
}

// HasAcct returns a boolean if a field has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) HasAcct() bool {
	if o != nil && !IsNil(o.Acct) {
		return true
	}

	return false
}

// SetAcct gets a reference to the given string and assigns it to the Acct field.
func (o *GetTradeEasyConvertHistoryV5RespData) SetAcct(v string) {
	o.Acct = &v
}

// GetFillFromSz returns the FillFromSz field value if set, zero value otherwise.
func (o *GetTradeEasyConvertHistoryV5RespData) GetFillFromSz() string {
	if o == nil || IsNil(o.FillFromSz) {
		var ret string
		return ret
	}
	return *o.FillFromSz
}

// GetFillFromSzOk returns a tuple with the FillFromSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) GetFillFromSzOk() (*string, bool) {
	if o == nil || IsNil(o.FillFromSz) {
		return nil, false
	}
	return o.FillFromSz, true
}

// HasFillFromSz returns a boolean if a field has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) HasFillFromSz() bool {
	if o != nil && !IsNil(o.FillFromSz) {
		return true
	}

	return false
}

// SetFillFromSz gets a reference to the given string and assigns it to the FillFromSz field.
func (o *GetTradeEasyConvertHistoryV5RespData) SetFillFromSz(v string) {
	o.FillFromSz = &v
}

// GetFillToSz returns the FillToSz field value if set, zero value otherwise.
func (o *GetTradeEasyConvertHistoryV5RespData) GetFillToSz() string {
	if o == nil || IsNil(o.FillToSz) {
		var ret string
		return ret
	}
	return *o.FillToSz
}

// GetFillToSzOk returns a tuple with the FillToSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) GetFillToSzOk() (*string, bool) {
	if o == nil || IsNil(o.FillToSz) {
		return nil, false
	}
	return o.FillToSz, true
}

// HasFillToSz returns a boolean if a field has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) HasFillToSz() bool {
	if o != nil && !IsNil(o.FillToSz) {
		return true
	}

	return false
}

// SetFillToSz gets a reference to the given string and assigns it to the FillToSz field.
func (o *GetTradeEasyConvertHistoryV5RespData) SetFillToSz(v string) {
	o.FillToSz = &v
}

// GetFromCcy returns the FromCcy field value if set, zero value otherwise.
func (o *GetTradeEasyConvertHistoryV5RespData) GetFromCcy() string {
	if o == nil || IsNil(o.FromCcy) {
		var ret string
		return ret
	}
	return *o.FromCcy
}

// GetFromCcyOk returns a tuple with the FromCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) GetFromCcyOk() (*string, bool) {
	if o == nil || IsNil(o.FromCcy) {
		return nil, false
	}
	return o.FromCcy, true
}

// HasFromCcy returns a boolean if a field has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) HasFromCcy() bool {
	if o != nil && !IsNil(o.FromCcy) {
		return true
	}

	return false
}

// SetFromCcy gets a reference to the given string and assigns it to the FromCcy field.
func (o *GetTradeEasyConvertHistoryV5RespData) SetFromCcy(v string) {
	o.FromCcy = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetTradeEasyConvertHistoryV5RespData) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetTradeEasyConvertHistoryV5RespData) SetStatus(v string) {
	o.Status = &v
}

// GetToCcy returns the ToCcy field value if set, zero value otherwise.
func (o *GetTradeEasyConvertHistoryV5RespData) GetToCcy() string {
	if o == nil || IsNil(o.ToCcy) {
		var ret string
		return ret
	}
	return *o.ToCcy
}

// GetToCcyOk returns a tuple with the ToCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) GetToCcyOk() (*string, bool) {
	if o == nil || IsNil(o.ToCcy) {
		return nil, false
	}
	return o.ToCcy, true
}

// HasToCcy returns a boolean if a field has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) HasToCcy() bool {
	if o != nil && !IsNil(o.ToCcy) {
		return true
	}

	return false
}

// SetToCcy gets a reference to the given string and assigns it to the ToCcy field.
func (o *GetTradeEasyConvertHistoryV5RespData) SetToCcy(v string) {
	o.ToCcy = &v
}

// GetUTime returns the UTime field value if set, zero value otherwise.
func (o *GetTradeEasyConvertHistoryV5RespData) GetUTime() string {
	if o == nil || IsNil(o.UTime) {
		var ret string
		return ret
	}
	return *o.UTime
}

// GetUTimeOk returns a tuple with the UTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) GetUTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UTime) {
		return nil, false
	}
	return o.UTime, true
}

// HasUTime returns a boolean if a field has been set.
func (o *GetTradeEasyConvertHistoryV5RespData) HasUTime() bool {
	if o != nil && !IsNil(o.UTime) {
		return true
	}

	return false
}

// SetUTime gets a reference to the given string and assigns it to the UTime field.
func (o *GetTradeEasyConvertHistoryV5RespData) SetUTime(v string) {
	o.UTime = &v
}

func (o GetTradeEasyConvertHistoryV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradeEasyConvertHistoryV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Acct) {
		toSerialize["acct"] = o.Acct
	}
	if !IsNil(o.FillFromSz) {
		toSerialize["fillFromSz"] = o.FillFromSz
	}
	if !IsNil(o.FillToSz) {
		toSerialize["fillToSz"] = o.FillToSz
	}
	if !IsNil(o.FromCcy) {
		toSerialize["fromCcy"] = o.FromCcy
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ToCcy) {
		toSerialize["toCcy"] = o.ToCcy
	}
	if !IsNil(o.UTime) {
		toSerialize["uTime"] = o.UTime
	}
	return toSerialize, nil
}

type NullableGetTradeEasyConvertHistoryV5RespData struct {
	value *GetTradeEasyConvertHistoryV5RespData
	isSet bool
}

func (v NullableGetTradeEasyConvertHistoryV5RespData) Get() *GetTradeEasyConvertHistoryV5RespData {
	return v.value
}

func (v *NullableGetTradeEasyConvertHistoryV5RespData) Set(val *GetTradeEasyConvertHistoryV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradeEasyConvertHistoryV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradeEasyConvertHistoryV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradeEasyConvertHistoryV5RespData(val *GetTradeEasyConvertHistoryV5RespData) *NullableGetTradeEasyConvertHistoryV5RespData {
	return &NullableGetTradeEasyConvertHistoryV5RespData{value: val, isSet: true}
}

func (v NullableGetTradeEasyConvertHistoryV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradeEasyConvertHistoryV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


