/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetPublicEconomicCalendarV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPublicEconomicCalendarV5RespData{}

// GetPublicEconomicCalendarV5RespData struct for GetPublicEconomicCalendarV5RespData
type GetPublicEconomicCalendarV5RespData struct {
	// The actual value of this event
	Actual *string `json:"actual,omitempty"`
	// Calendar ID
	CalendarId *string `json:"calendarId,omitempty"`
	// Category name
	Category *string `json:"category,omitempty"`
	// Currency of the data
	Ccy *string `json:"ccy,omitempty"`
	// Estimated release time of the value of actual field, millisecond format of Unix timestamp, e.g. `1597026383085`
	Date *string `json:"date,omitempty"`
	// `0`: The time of the event is known  `1`: we only know the date of the event, the exact time of the event is unknown.
	DateSpan *string `json:"dateSpan,omitempty"`
	// Event name
	Event *string `json:"event,omitempty"`
	// Average forecast among a representative group of economists
	Forecast *string `json:"forecast,omitempty"`
	// Level of importance   `1`: low   `2`: medium   `3`: high
	Importance *string `json:"importance,omitempty"`
	// The initial value of the previous period   Only applicable when revision happens
	PrevInitial *string `json:"prevInitial,omitempty"`
	// Latest actual value of the previous period   The value will be revised if revision is applicable
	Previous *string `json:"previous,omitempty"`
	// Date for which the datapoint refers to
	RefDate *string `json:"refDate,omitempty"`
	// Country, region or entity
	Region *string `json:"region,omitempty"`
	// Update time of this record, millisecond format of Unix timestamp, e.g. `1597026383085`
	UTime *string `json:"uTime,omitempty"`
	// Unit of the data
	Unit *string `json:"unit,omitempty"`
}

// NewGetPublicEconomicCalendarV5RespData instantiates a new GetPublicEconomicCalendarV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPublicEconomicCalendarV5RespData() *GetPublicEconomicCalendarV5RespData {
	this := GetPublicEconomicCalendarV5RespData{}
	var actual string = ""
	this.Actual = &actual
	var calendarId string = ""
	this.CalendarId = &calendarId
	var category string = ""
	this.Category = &category
	var ccy string = ""
	this.Ccy = &ccy
	var date string = ""
	this.Date = &date
	var dateSpan string = ""
	this.DateSpan = &dateSpan
	var event string = ""
	this.Event = &event
	var forecast string = ""
	this.Forecast = &forecast
	var importance string = ""
	this.Importance = &importance
	var prevInitial string = ""
	this.PrevInitial = &prevInitial
	var previous string = ""
	this.Previous = &previous
	var refDate string = ""
	this.RefDate = &refDate
	var region string = ""
	this.Region = &region
	var uTime string = ""
	this.UTime = &uTime
	var unit string = ""
	this.Unit = &unit
	return &this
}

// NewGetPublicEconomicCalendarV5RespDataWithDefaults instantiates a new GetPublicEconomicCalendarV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPublicEconomicCalendarV5RespDataWithDefaults() *GetPublicEconomicCalendarV5RespData {
	this := GetPublicEconomicCalendarV5RespData{}
	var actual string = ""
	this.Actual = &actual
	var calendarId string = ""
	this.CalendarId = &calendarId
	var category string = ""
	this.Category = &category
	var ccy string = ""
	this.Ccy = &ccy
	var date string = ""
	this.Date = &date
	var dateSpan string = ""
	this.DateSpan = &dateSpan
	var event string = ""
	this.Event = &event
	var forecast string = ""
	this.Forecast = &forecast
	var importance string = ""
	this.Importance = &importance
	var prevInitial string = ""
	this.PrevInitial = &prevInitial
	var previous string = ""
	this.Previous = &previous
	var refDate string = ""
	this.RefDate = &refDate
	var region string = ""
	this.Region = &region
	var uTime string = ""
	this.UTime = &uTime
	var unit string = ""
	this.Unit = &unit
	return &this
}

// GetActual returns the Actual field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetActual() string {
	if o == nil || IsNil(o.Actual) {
		var ret string
		return ret
	}
	return *o.Actual
}

// GetActualOk returns a tuple with the Actual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetActualOk() (*string, bool) {
	if o == nil || IsNil(o.Actual) {
		return nil, false
	}
	return o.Actual, true
}

// HasActual returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasActual() bool {
	if o != nil && !IsNil(o.Actual) {
		return true
	}

	return false
}

// SetActual gets a reference to the given string and assigns it to the Actual field.
func (o *GetPublicEconomicCalendarV5RespData) SetActual(v string) {
	o.Actual = &v
}

// GetCalendarId returns the CalendarId field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetCalendarId() string {
	if o == nil || IsNil(o.CalendarId) {
		var ret string
		return ret
	}
	return *o.CalendarId
}

// GetCalendarIdOk returns a tuple with the CalendarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetCalendarIdOk() (*string, bool) {
	if o == nil || IsNil(o.CalendarId) {
		return nil, false
	}
	return o.CalendarId, true
}

// HasCalendarId returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasCalendarId() bool {
	if o != nil && !IsNil(o.CalendarId) {
		return true
	}

	return false
}

// SetCalendarId gets a reference to the given string and assigns it to the CalendarId field.
func (o *GetPublicEconomicCalendarV5RespData) SetCalendarId(v string) {
	o.CalendarId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *GetPublicEconomicCalendarV5RespData) SetCategory(v string) {
	o.Category = &v
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *GetPublicEconomicCalendarV5RespData) SetCcy(v string) {
	o.Ccy = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *GetPublicEconomicCalendarV5RespData) SetDate(v string) {
	o.Date = &v
}

// GetDateSpan returns the DateSpan field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetDateSpan() string {
	if o == nil || IsNil(o.DateSpan) {
		var ret string
		return ret
	}
	return *o.DateSpan
}

// GetDateSpanOk returns a tuple with the DateSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetDateSpanOk() (*string, bool) {
	if o == nil || IsNil(o.DateSpan) {
		return nil, false
	}
	return o.DateSpan, true
}

// HasDateSpan returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasDateSpan() bool {
	if o != nil && !IsNil(o.DateSpan) {
		return true
	}

	return false
}

// SetDateSpan gets a reference to the given string and assigns it to the DateSpan field.
func (o *GetPublicEconomicCalendarV5RespData) SetDateSpan(v string) {
	o.DateSpan = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetEvent() string {
	if o == nil || IsNil(o.Event) {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetEventOk() (*string, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *GetPublicEconomicCalendarV5RespData) SetEvent(v string) {
	o.Event = &v
}

// GetForecast returns the Forecast field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetForecast() string {
	if o == nil || IsNil(o.Forecast) {
		var ret string
		return ret
	}
	return *o.Forecast
}

// GetForecastOk returns a tuple with the Forecast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetForecastOk() (*string, bool) {
	if o == nil || IsNil(o.Forecast) {
		return nil, false
	}
	return o.Forecast, true
}

// HasForecast returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasForecast() bool {
	if o != nil && !IsNil(o.Forecast) {
		return true
	}

	return false
}

// SetForecast gets a reference to the given string and assigns it to the Forecast field.
func (o *GetPublicEconomicCalendarV5RespData) SetForecast(v string) {
	o.Forecast = &v
}

// GetImportance returns the Importance field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetImportance() string {
	if o == nil || IsNil(o.Importance) {
		var ret string
		return ret
	}
	return *o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetImportanceOk() (*string, bool) {
	if o == nil || IsNil(o.Importance) {
		return nil, false
	}
	return o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasImportance() bool {
	if o != nil && !IsNil(o.Importance) {
		return true
	}

	return false
}

// SetImportance gets a reference to the given string and assigns it to the Importance field.
func (o *GetPublicEconomicCalendarV5RespData) SetImportance(v string) {
	o.Importance = &v
}

// GetPrevInitial returns the PrevInitial field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetPrevInitial() string {
	if o == nil || IsNil(o.PrevInitial) {
		var ret string
		return ret
	}
	return *o.PrevInitial
}

// GetPrevInitialOk returns a tuple with the PrevInitial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetPrevInitialOk() (*string, bool) {
	if o == nil || IsNil(o.PrevInitial) {
		return nil, false
	}
	return o.PrevInitial, true
}

// HasPrevInitial returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasPrevInitial() bool {
	if o != nil && !IsNil(o.PrevInitial) {
		return true
	}

	return false
}

// SetPrevInitial gets a reference to the given string and assigns it to the PrevInitial field.
func (o *GetPublicEconomicCalendarV5RespData) SetPrevInitial(v string) {
	o.PrevInitial = &v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetPrevious() string {
	if o == nil || IsNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetPreviousOk() (*string, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *GetPublicEconomicCalendarV5RespData) SetPrevious(v string) {
	o.Previous = &v
}

// GetRefDate returns the RefDate field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetRefDate() string {
	if o == nil || IsNil(o.RefDate) {
		var ret string
		return ret
	}
	return *o.RefDate
}

// GetRefDateOk returns a tuple with the RefDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetRefDateOk() (*string, bool) {
	if o == nil || IsNil(o.RefDate) {
		return nil, false
	}
	return o.RefDate, true
}

// HasRefDate returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasRefDate() bool {
	if o != nil && !IsNil(o.RefDate) {
		return true
	}

	return false
}

// SetRefDate gets a reference to the given string and assigns it to the RefDate field.
func (o *GetPublicEconomicCalendarV5RespData) SetRefDate(v string) {
	o.RefDate = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *GetPublicEconomicCalendarV5RespData) SetRegion(v string) {
	o.Region = &v
}

// GetUTime returns the UTime field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetUTime() string {
	if o == nil || IsNil(o.UTime) {
		var ret string
		return ret
	}
	return *o.UTime
}

// GetUTimeOk returns a tuple with the UTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetUTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UTime) {
		return nil, false
	}
	return o.UTime, true
}

// HasUTime returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasUTime() bool {
	if o != nil && !IsNil(o.UTime) {
		return true
	}

	return false
}

// SetUTime gets a reference to the given string and assigns it to the UTime field.
func (o *GetPublicEconomicCalendarV5RespData) SetUTime(v string) {
	o.UTime = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *GetPublicEconomicCalendarV5RespData) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicEconomicCalendarV5RespData) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *GetPublicEconomicCalendarV5RespData) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *GetPublicEconomicCalendarV5RespData) SetUnit(v string) {
	o.Unit = &v
}

func (o GetPublicEconomicCalendarV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPublicEconomicCalendarV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actual) {
		toSerialize["actual"] = o.Actual
	}
	if !IsNil(o.CalendarId) {
		toSerialize["calendarId"] = o.CalendarId
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.DateSpan) {
		toSerialize["dateSpan"] = o.DateSpan
	}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	if !IsNil(o.Forecast) {
		toSerialize["forecast"] = o.Forecast
	}
	if !IsNil(o.Importance) {
		toSerialize["importance"] = o.Importance
	}
	if !IsNil(o.PrevInitial) {
		toSerialize["prevInitial"] = o.PrevInitial
	}
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !IsNil(o.RefDate) {
		toSerialize["refDate"] = o.RefDate
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.UTime) {
		toSerialize["uTime"] = o.UTime
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableGetPublicEconomicCalendarV5RespData struct {
	value *GetPublicEconomicCalendarV5RespData
	isSet bool
}

func (v NullableGetPublicEconomicCalendarV5RespData) Get() *GetPublicEconomicCalendarV5RespData {
	return v.value
}

func (v *NullableGetPublicEconomicCalendarV5RespData) Set(val *GetPublicEconomicCalendarV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPublicEconomicCalendarV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPublicEconomicCalendarV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPublicEconomicCalendarV5RespData(val *GetPublicEconomicCalendarV5RespData) *NullableGetPublicEconomicCalendarV5RespData {
	return &NullableGetPublicEconomicCalendarV5RespData{value: val, isSet: true}
}

func (v NullableGetPublicEconomicCalendarV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPublicEconomicCalendarV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


