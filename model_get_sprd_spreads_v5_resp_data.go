/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetSprdSpreadsV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSprdSpreadsV5RespData{}

// GetSprdSpreadsV5RespData struct for GetSprdSpreadsV5RespData
type GetSprdSpreadsV5RespData struct {
	// Currency instrument is based in. Valid values include BTC, ETH
	BaseCcy *string `json:"baseCcy,omitempty"`
	// Expiry time, Unix timestamp format in milliseconds, e.g. `1597026383085`
	ExpTime *string `json:"expTime,omitempty"`
	Legs []GetSprdSpreadsV5RespDataLegsInner `json:"legs,omitempty"`
	// The timestamp the spread was created. Unix timestamp format in milliseconds, , e.g. `1597026383085`
	ListTime *string `json:"listTime,omitempty"`
	// The minimum order size increment the spread can be traded in the szCcy of the spread.
	LotSz *string `json:"lotSz,omitempty"`
	// Minimum order size in the szCcy of the spread.
	MinSz *string `json:"minSz,omitempty"`
	// The currency the spread is priced in, e.g. USDT, USD
	QuoteCcy *string `json:"quoteCcy,omitempty"`
	// spread ID
	SprdId *string `json:"sprdId,omitempty"`
	// spread Type. Valid values are `linear`, `inverse`, `hybrid`
	SprdType *string `json:"sprdType,omitempty"`
	// Current state of the spread. Valid values include `live`, `expired`, `suspend`.
	State *string `json:"state,omitempty"`
	// The currency the spread order size is submitted to the underlying venue in, e.g. USD, BTC, ETH.
	SzCcy *string `json:"szCcy,omitempty"`
	// Tick size, e.g. 0.0001 in the quoteCcy of the spread.
	TickSz *string `json:"tickSz,omitempty"`
	// The timestamp the spread was last updated. Unix timestamp format in milliseconds, e.g. `1597026383085`
	UTime *string `json:"uTime,omitempty"`
}

// NewGetSprdSpreadsV5RespData instantiates a new GetSprdSpreadsV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSprdSpreadsV5RespData() *GetSprdSpreadsV5RespData {
	this := GetSprdSpreadsV5RespData{}
	var baseCcy string = ""
	this.BaseCcy = &baseCcy
	var expTime string = ""
	this.ExpTime = &expTime
	var listTime string = ""
	this.ListTime = &listTime
	var lotSz string = ""
	this.LotSz = &lotSz
	var minSz string = ""
	this.MinSz = &minSz
	var quoteCcy string = ""
	this.QuoteCcy = &quoteCcy
	var sprdId string = ""
	this.SprdId = &sprdId
	var sprdType string = ""
	this.SprdType = &sprdType
	var state string = ""
	this.State = &state
	var szCcy string = ""
	this.SzCcy = &szCcy
	var tickSz string = ""
	this.TickSz = &tickSz
	var uTime string = ""
	this.UTime = &uTime
	return &this
}

// NewGetSprdSpreadsV5RespDataWithDefaults instantiates a new GetSprdSpreadsV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSprdSpreadsV5RespDataWithDefaults() *GetSprdSpreadsV5RespData {
	this := GetSprdSpreadsV5RespData{}
	var baseCcy string = ""
	this.BaseCcy = &baseCcy
	var expTime string = ""
	this.ExpTime = &expTime
	var listTime string = ""
	this.ListTime = &listTime
	var lotSz string = ""
	this.LotSz = &lotSz
	var minSz string = ""
	this.MinSz = &minSz
	var quoteCcy string = ""
	this.QuoteCcy = &quoteCcy
	var sprdId string = ""
	this.SprdId = &sprdId
	var sprdType string = ""
	this.SprdType = &sprdType
	var state string = ""
	this.State = &state
	var szCcy string = ""
	this.SzCcy = &szCcy
	var tickSz string = ""
	this.TickSz = &tickSz
	var uTime string = ""
	this.UTime = &uTime
	return &this
}

// GetBaseCcy returns the BaseCcy field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetBaseCcy() string {
	if o == nil || IsNil(o.BaseCcy) {
		var ret string
		return ret
	}
	return *o.BaseCcy
}

// GetBaseCcyOk returns a tuple with the BaseCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetBaseCcyOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCcy) {
		return nil, false
	}
	return o.BaseCcy, true
}

// HasBaseCcy returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasBaseCcy() bool {
	if o != nil && !IsNil(o.BaseCcy) {
		return true
	}

	return false
}

// SetBaseCcy gets a reference to the given string and assigns it to the BaseCcy field.
func (o *GetSprdSpreadsV5RespData) SetBaseCcy(v string) {
	o.BaseCcy = &v
}

// GetExpTime returns the ExpTime field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetExpTime() string {
	if o == nil || IsNil(o.ExpTime) {
		var ret string
		return ret
	}
	return *o.ExpTime
}

// GetExpTimeOk returns a tuple with the ExpTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetExpTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpTime) {
		return nil, false
	}
	return o.ExpTime, true
}

// HasExpTime returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasExpTime() bool {
	if o != nil && !IsNil(o.ExpTime) {
		return true
	}

	return false
}

// SetExpTime gets a reference to the given string and assigns it to the ExpTime field.
func (o *GetSprdSpreadsV5RespData) SetExpTime(v string) {
	o.ExpTime = &v
}

// GetLegs returns the Legs field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetLegs() []GetSprdSpreadsV5RespDataLegsInner {
	if o == nil || IsNil(o.Legs) {
		var ret []GetSprdSpreadsV5RespDataLegsInner
		return ret
	}
	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetLegsOk() ([]GetSprdSpreadsV5RespDataLegsInner, bool) {
	if o == nil || IsNil(o.Legs) {
		return nil, false
	}
	return o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasLegs() bool {
	if o != nil && !IsNil(o.Legs) {
		return true
	}

	return false
}

// SetLegs gets a reference to the given []GetSprdSpreadsV5RespDataLegsInner and assigns it to the Legs field.
func (o *GetSprdSpreadsV5RespData) SetLegs(v []GetSprdSpreadsV5RespDataLegsInner) {
	o.Legs = v
}

// GetListTime returns the ListTime field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetListTime() string {
	if o == nil || IsNil(o.ListTime) {
		var ret string
		return ret
	}
	return *o.ListTime
}

// GetListTimeOk returns a tuple with the ListTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetListTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ListTime) {
		return nil, false
	}
	return o.ListTime, true
}

// HasListTime returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasListTime() bool {
	if o != nil && !IsNil(o.ListTime) {
		return true
	}

	return false
}

// SetListTime gets a reference to the given string and assigns it to the ListTime field.
func (o *GetSprdSpreadsV5RespData) SetListTime(v string) {
	o.ListTime = &v
}

// GetLotSz returns the LotSz field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetLotSz() string {
	if o == nil || IsNil(o.LotSz) {
		var ret string
		return ret
	}
	return *o.LotSz
}

// GetLotSzOk returns a tuple with the LotSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetLotSzOk() (*string, bool) {
	if o == nil || IsNil(o.LotSz) {
		return nil, false
	}
	return o.LotSz, true
}

// HasLotSz returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasLotSz() bool {
	if o != nil && !IsNil(o.LotSz) {
		return true
	}

	return false
}

// SetLotSz gets a reference to the given string and assigns it to the LotSz field.
func (o *GetSprdSpreadsV5RespData) SetLotSz(v string) {
	o.LotSz = &v
}

// GetMinSz returns the MinSz field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetMinSz() string {
	if o == nil || IsNil(o.MinSz) {
		var ret string
		return ret
	}
	return *o.MinSz
}

// GetMinSzOk returns a tuple with the MinSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetMinSzOk() (*string, bool) {
	if o == nil || IsNil(o.MinSz) {
		return nil, false
	}
	return o.MinSz, true
}

// HasMinSz returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasMinSz() bool {
	if o != nil && !IsNil(o.MinSz) {
		return true
	}

	return false
}

// SetMinSz gets a reference to the given string and assigns it to the MinSz field.
func (o *GetSprdSpreadsV5RespData) SetMinSz(v string) {
	o.MinSz = &v
}

// GetQuoteCcy returns the QuoteCcy field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetQuoteCcy() string {
	if o == nil || IsNil(o.QuoteCcy) {
		var ret string
		return ret
	}
	return *o.QuoteCcy
}

// GetQuoteCcyOk returns a tuple with the QuoteCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetQuoteCcyOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteCcy) {
		return nil, false
	}
	return o.QuoteCcy, true
}

// HasQuoteCcy returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasQuoteCcy() bool {
	if o != nil && !IsNil(o.QuoteCcy) {
		return true
	}

	return false
}

// SetQuoteCcy gets a reference to the given string and assigns it to the QuoteCcy field.
func (o *GetSprdSpreadsV5RespData) SetQuoteCcy(v string) {
	o.QuoteCcy = &v
}

// GetSprdId returns the SprdId field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetSprdId() string {
	if o == nil || IsNil(o.SprdId) {
		var ret string
		return ret
	}
	return *o.SprdId
}

// GetSprdIdOk returns a tuple with the SprdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetSprdIdOk() (*string, bool) {
	if o == nil || IsNil(o.SprdId) {
		return nil, false
	}
	return o.SprdId, true
}

// HasSprdId returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasSprdId() bool {
	if o != nil && !IsNil(o.SprdId) {
		return true
	}

	return false
}

// SetSprdId gets a reference to the given string and assigns it to the SprdId field.
func (o *GetSprdSpreadsV5RespData) SetSprdId(v string) {
	o.SprdId = &v
}

// GetSprdType returns the SprdType field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetSprdType() string {
	if o == nil || IsNil(o.SprdType) {
		var ret string
		return ret
	}
	return *o.SprdType
}

// GetSprdTypeOk returns a tuple with the SprdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetSprdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SprdType) {
		return nil, false
	}
	return o.SprdType, true
}

// HasSprdType returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasSprdType() bool {
	if o != nil && !IsNil(o.SprdType) {
		return true
	}

	return false
}

// SetSprdType gets a reference to the given string and assigns it to the SprdType field.
func (o *GetSprdSpreadsV5RespData) SetSprdType(v string) {
	o.SprdType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetSprdSpreadsV5RespData) SetState(v string) {
	o.State = &v
}

// GetSzCcy returns the SzCcy field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetSzCcy() string {
	if o == nil || IsNil(o.SzCcy) {
		var ret string
		return ret
	}
	return *o.SzCcy
}

// GetSzCcyOk returns a tuple with the SzCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetSzCcyOk() (*string, bool) {
	if o == nil || IsNil(o.SzCcy) {
		return nil, false
	}
	return o.SzCcy, true
}

// HasSzCcy returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasSzCcy() bool {
	if o != nil && !IsNil(o.SzCcy) {
		return true
	}

	return false
}

// SetSzCcy gets a reference to the given string and assigns it to the SzCcy field.
func (o *GetSprdSpreadsV5RespData) SetSzCcy(v string) {
	o.SzCcy = &v
}

// GetTickSz returns the TickSz field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetTickSz() string {
	if o == nil || IsNil(o.TickSz) {
		var ret string
		return ret
	}
	return *o.TickSz
}

// GetTickSzOk returns a tuple with the TickSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetTickSzOk() (*string, bool) {
	if o == nil || IsNil(o.TickSz) {
		return nil, false
	}
	return o.TickSz, true
}

// HasTickSz returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasTickSz() bool {
	if o != nil && !IsNil(o.TickSz) {
		return true
	}

	return false
}

// SetTickSz gets a reference to the given string and assigns it to the TickSz field.
func (o *GetSprdSpreadsV5RespData) SetTickSz(v string) {
	o.TickSz = &v
}

// GetUTime returns the UTime field value if set, zero value otherwise.
func (o *GetSprdSpreadsV5RespData) GetUTime() string {
	if o == nil || IsNil(o.UTime) {
		var ret string
		return ret
	}
	return *o.UTime
}

// GetUTimeOk returns a tuple with the UTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSprdSpreadsV5RespData) GetUTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UTime) {
		return nil, false
	}
	return o.UTime, true
}

// HasUTime returns a boolean if a field has been set.
func (o *GetSprdSpreadsV5RespData) HasUTime() bool {
	if o != nil && !IsNil(o.UTime) {
		return true
	}

	return false
}

// SetUTime gets a reference to the given string and assigns it to the UTime field.
func (o *GetSprdSpreadsV5RespData) SetUTime(v string) {
	o.UTime = &v
}

func (o GetSprdSpreadsV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSprdSpreadsV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseCcy) {
		toSerialize["baseCcy"] = o.BaseCcy
	}
	if !IsNil(o.ExpTime) {
		toSerialize["expTime"] = o.ExpTime
	}
	if !IsNil(o.Legs) {
		toSerialize["legs"] = o.Legs
	}
	if !IsNil(o.ListTime) {
		toSerialize["listTime"] = o.ListTime
	}
	if !IsNil(o.LotSz) {
		toSerialize["lotSz"] = o.LotSz
	}
	if !IsNil(o.MinSz) {
		toSerialize["minSz"] = o.MinSz
	}
	if !IsNil(o.QuoteCcy) {
		toSerialize["quoteCcy"] = o.QuoteCcy
	}
	if !IsNil(o.SprdId) {
		toSerialize["sprdId"] = o.SprdId
	}
	if !IsNil(o.SprdType) {
		toSerialize["sprdType"] = o.SprdType
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SzCcy) {
		toSerialize["szCcy"] = o.SzCcy
	}
	if !IsNil(o.TickSz) {
		toSerialize["tickSz"] = o.TickSz
	}
	if !IsNil(o.UTime) {
		toSerialize["uTime"] = o.UTime
	}
	return toSerialize, nil
}

type NullableGetSprdSpreadsV5RespData struct {
	value *GetSprdSpreadsV5RespData
	isSet bool
}

func (v NullableGetSprdSpreadsV5RespData) Get() *GetSprdSpreadsV5RespData {
	return v.value
}

func (v *NullableGetSprdSpreadsV5RespData) Set(val *GetSprdSpreadsV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSprdSpreadsV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSprdSpreadsV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSprdSpreadsV5RespData(val *GetSprdSpreadsV5RespData) *NullableGetSprdSpreadsV5RespData {
	return &NullableGetSprdSpreadsV5RespData{value: val, isSet: true}
}

func (v NullableGetSprdSpreadsV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSprdSpreadsV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


