/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateUsersSubaccountModifyApikeyV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUsersSubaccountModifyApikeyV5RespData{}

// CreateUsersSubaccountModifyApikeyV5RespData struct for CreateUsersSubaccountModifyApikeyV5RespData
type CreateUsersSubaccountModifyApikeyV5RespData struct {
	// Sub-accountAPI public key
	ApiKey *string `json:"apiKey,omitempty"`
	// Sub-account API Key IP addresses that linked with API Key
	Ip *string `json:"ip,omitempty"`
	// Sub-account API Key label
	Label *string `json:"label,omitempty"`
	// Sub-account API Key permissions  `read_only`: Read  `trade`: Trade
	Perm *string `json:"perm,omitempty"`
	// Sub-account name
	SubAcct *string `json:"subAcct,omitempty"`
	// Creation time
	Ts *string `json:"ts,omitempty"`
}

// NewCreateUsersSubaccountModifyApikeyV5RespData instantiates a new CreateUsersSubaccountModifyApikeyV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUsersSubaccountModifyApikeyV5RespData() *CreateUsersSubaccountModifyApikeyV5RespData {
	this := CreateUsersSubaccountModifyApikeyV5RespData{}
	var apiKey string = ""
	this.ApiKey = &apiKey
	var ip string = ""
	this.Ip = &ip
	var label string = ""
	this.Label = &label
	var perm string = ""
	this.Perm = &perm
	var subAcct string = ""
	this.SubAcct = &subAcct
	var ts string = ""
	this.Ts = &ts
	return &this
}

// NewCreateUsersSubaccountModifyApikeyV5RespDataWithDefaults instantiates a new CreateUsersSubaccountModifyApikeyV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUsersSubaccountModifyApikeyV5RespDataWithDefaults() *CreateUsersSubaccountModifyApikeyV5RespData {
	this := CreateUsersSubaccountModifyApikeyV5RespData{}
	var apiKey string = ""
	this.ApiKey = &apiKey
	var ip string = ""
	this.Ip = &ip
	var label string = ""
	this.Label = &label
	var perm string = ""
	this.Perm = &perm
	var subAcct string = ""
	this.SubAcct = &subAcct
	var ts string = ""
	this.Ts = &ts
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) SetIp(v string) {
	o.Ip = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) SetLabel(v string) {
	o.Label = &v
}

// GetPerm returns the Perm field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetPerm() string {
	if o == nil || IsNil(o.Perm) {
		var ret string
		return ret
	}
	return *o.Perm
}

// GetPermOk returns a tuple with the Perm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetPermOk() (*string, bool) {
	if o == nil || IsNil(o.Perm) {
		return nil, false
	}
	return o.Perm, true
}

// HasPerm returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) HasPerm() bool {
	if o != nil && !IsNil(o.Perm) {
		return true
	}

	return false
}

// SetPerm gets a reference to the given string and assigns it to the Perm field.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) SetPerm(v string) {
	o.Perm = &v
}

// GetSubAcct returns the SubAcct field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetSubAcct() string {
	if o == nil || IsNil(o.SubAcct) {
		var ret string
		return ret
	}
	return *o.SubAcct
}

// GetSubAcctOk returns a tuple with the SubAcct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetSubAcctOk() (*string, bool) {
	if o == nil || IsNil(o.SubAcct) {
		return nil, false
	}
	return o.SubAcct, true
}

// HasSubAcct returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) HasSubAcct() bool {
	if o != nil && !IsNil(o.SubAcct) {
		return true
	}

	return false
}

// SetSubAcct gets a reference to the given string and assigns it to the SubAcct field.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) SetSubAcct(v string) {
	o.SubAcct = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetTs() string {
	if o == nil || IsNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) GetTsOk() (*string, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *CreateUsersSubaccountModifyApikeyV5RespData) SetTs(v string) {
	o.Ts = &v
}

func (o CreateUsersSubaccountModifyApikeyV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUsersSubaccountModifyApikeyV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["apiKey"] = o.ApiKey
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Perm) {
		toSerialize["perm"] = o.Perm
	}
	if !IsNil(o.SubAcct) {
		toSerialize["subAcct"] = o.SubAcct
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return toSerialize, nil
}

type NullableCreateUsersSubaccountModifyApikeyV5RespData struct {
	value *CreateUsersSubaccountModifyApikeyV5RespData
	isSet bool
}

func (v NullableCreateUsersSubaccountModifyApikeyV5RespData) Get() *CreateUsersSubaccountModifyApikeyV5RespData {
	return v.value
}

func (v *NullableCreateUsersSubaccountModifyApikeyV5RespData) Set(val *CreateUsersSubaccountModifyApikeyV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUsersSubaccountModifyApikeyV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUsersSubaccountModifyApikeyV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUsersSubaccountModifyApikeyV5RespData(val *CreateUsersSubaccountModifyApikeyV5RespData) *NullableCreateUsersSubaccountModifyApikeyV5RespData {
	return &NullableCreateUsersSubaccountModifyApikeyV5RespData{value: val, isSet: true}
}

func (v NullableCreateUsersSubaccountModifyApikeyV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUsersSubaccountModifyApikeyV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


