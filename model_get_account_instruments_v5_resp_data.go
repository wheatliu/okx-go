/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetAccountInstrumentsV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountInstrumentsV5RespData{}

// GetAccountInstrumentsV5RespData struct for GetAccountInstrumentsV5RespData
type GetAccountInstrumentsV5RespData struct {
	// The end time of call auction, Unix timestamp format in milliseconds, e.g. `1597026383085`   Only applicable to `SPOT` that are listed through call auctions, return \"\" in other cases
	AuctionEndTime *string `json:"auctionEndTime,omitempty"`
	// Base currency, e.g. `BTC`  in`BTC-USDT`   Only applicable to `SPOT`/`MARGIN`
	BaseCcy *string `json:"baseCcy,omitempty"`
	// Contract multiplier     Only applicable to `FUTURES`/`SWAP`/`OPTION`
	CtMult *string `json:"ctMult,omitempty"`
	// Contract type  `linear`: linear contract  `inverse`: inverse contract   Only applicable to `FUTURES`/`SWAP`
	CtType *string `json:"ctType,omitempty"`
	// Contract value     Only applicable to `FUTURES`/`SWAP`/`OPTION`
	CtVal *string `json:"ctVal,omitempty"`
	// Contract value currency    Only applicable to `FUTURES`/`SWAP`/`OPTION`
	CtValCcy *string `json:"ctValCcy,omitempty"`
	// Expiry time   Applicable to `SPOT`/`MARGIN`/`FUTURES`/`SWAP`/`OPTION`. For `FUTURES`/`OPTION`, it is natural delivery/exercise time. It is the instrument offline time when there is `SPOT/MARGIN/FUTURES/SWAP/` manual offline. Update once change.
	ExpTime *string `json:"expTime,omitempty"`
	// Whether daily settlement for expiry feature is enabled  Applicable to `FUTURES` `cross`
	FutureSettlement *bool `json:"futureSettlement,omitempty"`
	// Instrument family, e.g. `BTC-USD`   Only applicable to `MARGIN/FUTURES`/`SWAP`/`OPTION`
	InstFamily *string `json:"instFamily,omitempty"`
	// Instrument ID,  e.g. `BTC-USD-SWAP`
	InstId *string `json:"instId,omitempty"`
	// Instrument type
	InstType *string `json:"instType,omitempty"`
	// Max Leverage,     Not applicable to `SPOT`, `OPTION`
	Lever *string `json:"lever,omitempty"`
	// Listing time, Unix timestamp format in milliseconds, e.g. `1597026383085`
	ListTime *string `json:"listTime,omitempty"`
	// Lot size  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `base currency`.
	LotSz *string `json:"lotSz,omitempty"`
	// The maximum order quantity of a single iceBerg order.  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `base currency`.
	MaxIcebergSz *string `json:"maxIcebergSz,omitempty"`
	// Max USD amount for a single limit order
	MaxLmtAmt *string `json:"maxLmtAmt,omitempty"`
	// The maximum order quantity of a single limit order.  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `base currency`.
	MaxLmtSz *string `json:"maxLmtSz,omitempty"`
	// Max USD amount for a single market order   Only applicable to `SPOT`/`MARGIN`
	MaxMktAmt *string `json:"maxMktAmt,omitempty"`
	// The maximum order quantity of a single market order.  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `USDT`.
	MaxMktSz *string `json:"maxMktSz,omitempty"`
	// The maximum order quantity of a single stop market order.  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `USDT`.
	MaxStopSz *string `json:"maxStopSz,omitempty"`
	// The maximum order quantity of a single trigger order.  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `base currency`.
	MaxTriggerSz *string `json:"maxTriggerSz,omitempty"`
	// The maximum order quantity of a single TWAP order.  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `base currency`.    The minimum order quantity of a single TWAP order is minSz*2
	MaxTwapSz *string `json:"maxTwapSz,omitempty"`
	// Minimum order size  If it is a derivatives contract, the value is the number of contracts.  If it is `SPOT`/`MARGIN`, the value is the quantity in `base currency`.
	MinSz *string `json:"minSz,omitempty"`
	// Option type, `C`: Call  `P`: put   Only applicable to `OPTION`
	OptType *string `json:"optType,omitempty"`
	// Quote currency, e.g. `USDT` in `BTC-USDT`     Only applicable to `SPOT`/`MARGIN`
	QuoteCcy *string `json:"quoteCcy,omitempty"`
	// Trading rule types   `normal`: normal trading   `pre_market`: pre-market trading
	RuleType *string `json:"ruleType,omitempty"`
	// Settlement and margin currency, e.g. `BTC`    Only applicable to `FUTURES`/`SWAP`/`OPTION`
	SettleCcy *string `json:"settleCcy,omitempty"`
	// Instrument status  `live`   `suspend`  `preopen` e.g. Futures and options contracts rollover from generation to trading start; certain symbols before they go live  `test`: Test pairs, can't be traded
	State *string `json:"state,omitempty"`
	// Strike price    Only applicable to `OPTION`
	Stk *string `json:"stk,omitempty"`
	// Tick size,  e.g. `0.0001`  For Option, it is minimum tickSz among tick band, please use \"Get option tick bands\" if you want get option tickBands.
	TickSz *string `json:"tickSz,omitempty"`
	// Underlying, e.g. `BTC-USD`   Only applicable to `MARGIN/FUTURES`/`SWAP`/`OPTION`
	Uly *string `json:"uly,omitempty"`
}

// NewGetAccountInstrumentsV5RespData instantiates a new GetAccountInstrumentsV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountInstrumentsV5RespData() *GetAccountInstrumentsV5RespData {
	this := GetAccountInstrumentsV5RespData{}
	var auctionEndTime string = ""
	this.AuctionEndTime = &auctionEndTime
	var baseCcy string = ""
	this.BaseCcy = &baseCcy
	var ctMult string = ""
	this.CtMult = &ctMult
	var ctType string = ""
	this.CtType = &ctType
	var ctVal string = ""
	this.CtVal = &ctVal
	var ctValCcy string = ""
	this.CtValCcy = &ctValCcy
	var expTime string = ""
	this.ExpTime = &expTime
	var instFamily string = ""
	this.InstFamily = &instFamily
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var listTime string = ""
	this.ListTime = &listTime
	var lotSz string = ""
	this.LotSz = &lotSz
	var maxIcebergSz string = ""
	this.MaxIcebergSz = &maxIcebergSz
	var maxLmtAmt string = ""
	this.MaxLmtAmt = &maxLmtAmt
	var maxLmtSz string = ""
	this.MaxLmtSz = &maxLmtSz
	var maxMktAmt string = ""
	this.MaxMktAmt = &maxMktAmt
	var maxMktSz string = ""
	this.MaxMktSz = &maxMktSz
	var maxStopSz string = ""
	this.MaxStopSz = &maxStopSz
	var maxTriggerSz string = ""
	this.MaxTriggerSz = &maxTriggerSz
	var maxTwapSz string = ""
	this.MaxTwapSz = &maxTwapSz
	var minSz string = ""
	this.MinSz = &minSz
	var optType string = ""
	this.OptType = &optType
	var quoteCcy string = ""
	this.QuoteCcy = &quoteCcy
	var ruleType string = ""
	this.RuleType = &ruleType
	var settleCcy string = ""
	this.SettleCcy = &settleCcy
	var state string = ""
	this.State = &state
	var stk string = ""
	this.Stk = &stk
	var tickSz string = ""
	this.TickSz = &tickSz
	var uly string = ""
	this.Uly = &uly
	return &this
}

// NewGetAccountInstrumentsV5RespDataWithDefaults instantiates a new GetAccountInstrumentsV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountInstrumentsV5RespDataWithDefaults() *GetAccountInstrumentsV5RespData {
	this := GetAccountInstrumentsV5RespData{}
	var auctionEndTime string = ""
	this.AuctionEndTime = &auctionEndTime
	var baseCcy string = ""
	this.BaseCcy = &baseCcy
	var ctMult string = ""
	this.CtMult = &ctMult
	var ctType string = ""
	this.CtType = &ctType
	var ctVal string = ""
	this.CtVal = &ctVal
	var ctValCcy string = ""
	this.CtValCcy = &ctValCcy
	var expTime string = ""
	this.ExpTime = &expTime
	var instFamily string = ""
	this.InstFamily = &instFamily
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var listTime string = ""
	this.ListTime = &listTime
	var lotSz string = ""
	this.LotSz = &lotSz
	var maxIcebergSz string = ""
	this.MaxIcebergSz = &maxIcebergSz
	var maxLmtAmt string = ""
	this.MaxLmtAmt = &maxLmtAmt
	var maxLmtSz string = ""
	this.MaxLmtSz = &maxLmtSz
	var maxMktAmt string = ""
	this.MaxMktAmt = &maxMktAmt
	var maxMktSz string = ""
	this.MaxMktSz = &maxMktSz
	var maxStopSz string = ""
	this.MaxStopSz = &maxStopSz
	var maxTriggerSz string = ""
	this.MaxTriggerSz = &maxTriggerSz
	var maxTwapSz string = ""
	this.MaxTwapSz = &maxTwapSz
	var minSz string = ""
	this.MinSz = &minSz
	var optType string = ""
	this.OptType = &optType
	var quoteCcy string = ""
	this.QuoteCcy = &quoteCcy
	var ruleType string = ""
	this.RuleType = &ruleType
	var settleCcy string = ""
	this.SettleCcy = &settleCcy
	var state string = ""
	this.State = &state
	var stk string = ""
	this.Stk = &stk
	var tickSz string = ""
	this.TickSz = &tickSz
	var uly string = ""
	this.Uly = &uly
	return &this
}

// GetAuctionEndTime returns the AuctionEndTime field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetAuctionEndTime() string {
	if o == nil || IsNil(o.AuctionEndTime) {
		var ret string
		return ret
	}
	return *o.AuctionEndTime
}

// GetAuctionEndTimeOk returns a tuple with the AuctionEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetAuctionEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AuctionEndTime) {
		return nil, false
	}
	return o.AuctionEndTime, true
}

// HasAuctionEndTime returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasAuctionEndTime() bool {
	if o != nil && !IsNil(o.AuctionEndTime) {
		return true
	}

	return false
}

// SetAuctionEndTime gets a reference to the given string and assigns it to the AuctionEndTime field.
func (o *GetAccountInstrumentsV5RespData) SetAuctionEndTime(v string) {
	o.AuctionEndTime = &v
}

// GetBaseCcy returns the BaseCcy field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetBaseCcy() string {
	if o == nil || IsNil(o.BaseCcy) {
		var ret string
		return ret
	}
	return *o.BaseCcy
}

// GetBaseCcyOk returns a tuple with the BaseCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetBaseCcyOk() (*string, bool) {
	if o == nil || IsNil(o.BaseCcy) {
		return nil, false
	}
	return o.BaseCcy, true
}

// HasBaseCcy returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasBaseCcy() bool {
	if o != nil && !IsNil(o.BaseCcy) {
		return true
	}

	return false
}

// SetBaseCcy gets a reference to the given string and assigns it to the BaseCcy field.
func (o *GetAccountInstrumentsV5RespData) SetBaseCcy(v string) {
	o.BaseCcy = &v
}

// GetCtMult returns the CtMult field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetCtMult() string {
	if o == nil || IsNil(o.CtMult) {
		var ret string
		return ret
	}
	return *o.CtMult
}

// GetCtMultOk returns a tuple with the CtMult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetCtMultOk() (*string, bool) {
	if o == nil || IsNil(o.CtMult) {
		return nil, false
	}
	return o.CtMult, true
}

// HasCtMult returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasCtMult() bool {
	if o != nil && !IsNil(o.CtMult) {
		return true
	}

	return false
}

// SetCtMult gets a reference to the given string and assigns it to the CtMult field.
func (o *GetAccountInstrumentsV5RespData) SetCtMult(v string) {
	o.CtMult = &v
}

// GetCtType returns the CtType field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetCtType() string {
	if o == nil || IsNil(o.CtType) {
		var ret string
		return ret
	}
	return *o.CtType
}

// GetCtTypeOk returns a tuple with the CtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetCtTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CtType) {
		return nil, false
	}
	return o.CtType, true
}

// HasCtType returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasCtType() bool {
	if o != nil && !IsNil(o.CtType) {
		return true
	}

	return false
}

// SetCtType gets a reference to the given string and assigns it to the CtType field.
func (o *GetAccountInstrumentsV5RespData) SetCtType(v string) {
	o.CtType = &v
}

// GetCtVal returns the CtVal field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetCtVal() string {
	if o == nil || IsNil(o.CtVal) {
		var ret string
		return ret
	}
	return *o.CtVal
}

// GetCtValOk returns a tuple with the CtVal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetCtValOk() (*string, bool) {
	if o == nil || IsNil(o.CtVal) {
		return nil, false
	}
	return o.CtVal, true
}

// HasCtVal returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasCtVal() bool {
	if o != nil && !IsNil(o.CtVal) {
		return true
	}

	return false
}

// SetCtVal gets a reference to the given string and assigns it to the CtVal field.
func (o *GetAccountInstrumentsV5RespData) SetCtVal(v string) {
	o.CtVal = &v
}

// GetCtValCcy returns the CtValCcy field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetCtValCcy() string {
	if o == nil || IsNil(o.CtValCcy) {
		var ret string
		return ret
	}
	return *o.CtValCcy
}

// GetCtValCcyOk returns a tuple with the CtValCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetCtValCcyOk() (*string, bool) {
	if o == nil || IsNil(o.CtValCcy) {
		return nil, false
	}
	return o.CtValCcy, true
}

// HasCtValCcy returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasCtValCcy() bool {
	if o != nil && !IsNil(o.CtValCcy) {
		return true
	}

	return false
}

// SetCtValCcy gets a reference to the given string and assigns it to the CtValCcy field.
func (o *GetAccountInstrumentsV5RespData) SetCtValCcy(v string) {
	o.CtValCcy = &v
}

// GetExpTime returns the ExpTime field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetExpTime() string {
	if o == nil || IsNil(o.ExpTime) {
		var ret string
		return ret
	}
	return *o.ExpTime
}

// GetExpTimeOk returns a tuple with the ExpTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetExpTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpTime) {
		return nil, false
	}
	return o.ExpTime, true
}

// HasExpTime returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasExpTime() bool {
	if o != nil && !IsNil(o.ExpTime) {
		return true
	}

	return false
}

// SetExpTime gets a reference to the given string and assigns it to the ExpTime field.
func (o *GetAccountInstrumentsV5RespData) SetExpTime(v string) {
	o.ExpTime = &v
}

// GetFutureSettlement returns the FutureSettlement field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetFutureSettlement() bool {
	if o == nil || IsNil(o.FutureSettlement) {
		var ret bool
		return ret
	}
	return *o.FutureSettlement
}

// GetFutureSettlementOk returns a tuple with the FutureSettlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetFutureSettlementOk() (*bool, bool) {
	if o == nil || IsNil(o.FutureSettlement) {
		return nil, false
	}
	return o.FutureSettlement, true
}

// HasFutureSettlement returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasFutureSettlement() bool {
	if o != nil && !IsNil(o.FutureSettlement) {
		return true
	}

	return false
}

// SetFutureSettlement gets a reference to the given bool and assigns it to the FutureSettlement field.
func (o *GetAccountInstrumentsV5RespData) SetFutureSettlement(v bool) {
	o.FutureSettlement = &v
}

// GetInstFamily returns the InstFamily field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetInstFamily() string {
	if o == nil || IsNil(o.InstFamily) {
		var ret string
		return ret
	}
	return *o.InstFamily
}

// GetInstFamilyOk returns a tuple with the InstFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetInstFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.InstFamily) {
		return nil, false
	}
	return o.InstFamily, true
}

// HasInstFamily returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasInstFamily() bool {
	if o != nil && !IsNil(o.InstFamily) {
		return true
	}

	return false
}

// SetInstFamily gets a reference to the given string and assigns it to the InstFamily field.
func (o *GetAccountInstrumentsV5RespData) SetInstFamily(v string) {
	o.InstFamily = &v
}

// GetInstId returns the InstId field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
func (o *GetAccountInstrumentsV5RespData) SetInstId(v string) {
	o.InstId = &v
}

// GetInstType returns the InstType field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetInstType() string {
	if o == nil || IsNil(o.InstType) {
		var ret string
		return ret
	}
	return *o.InstType
}

// GetInstTypeOk returns a tuple with the InstType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetInstTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstType) {
		return nil, false
	}
	return o.InstType, true
}

// HasInstType returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasInstType() bool {
	if o != nil && !IsNil(o.InstType) {
		return true
	}

	return false
}

// SetInstType gets a reference to the given string and assigns it to the InstType field.
func (o *GetAccountInstrumentsV5RespData) SetInstType(v string) {
	o.InstType = &v
}

// GetLever returns the Lever field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetLever() string {
	if o == nil || IsNil(o.Lever) {
		var ret string
		return ret
	}
	return *o.Lever
}

// GetLeverOk returns a tuple with the Lever field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetLeverOk() (*string, bool) {
	if o == nil || IsNil(o.Lever) {
		return nil, false
	}
	return o.Lever, true
}

// HasLever returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasLever() bool {
	if o != nil && !IsNil(o.Lever) {
		return true
	}

	return false
}

// SetLever gets a reference to the given string and assigns it to the Lever field.
func (o *GetAccountInstrumentsV5RespData) SetLever(v string) {
	o.Lever = &v
}

// GetListTime returns the ListTime field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetListTime() string {
	if o == nil || IsNil(o.ListTime) {
		var ret string
		return ret
	}
	return *o.ListTime
}

// GetListTimeOk returns a tuple with the ListTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetListTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ListTime) {
		return nil, false
	}
	return o.ListTime, true
}

// HasListTime returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasListTime() bool {
	if o != nil && !IsNil(o.ListTime) {
		return true
	}

	return false
}

// SetListTime gets a reference to the given string and assigns it to the ListTime field.
func (o *GetAccountInstrumentsV5RespData) SetListTime(v string) {
	o.ListTime = &v
}

// GetLotSz returns the LotSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetLotSz() string {
	if o == nil || IsNil(o.LotSz) {
		var ret string
		return ret
	}
	return *o.LotSz
}

// GetLotSzOk returns a tuple with the LotSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetLotSzOk() (*string, bool) {
	if o == nil || IsNil(o.LotSz) {
		return nil, false
	}
	return o.LotSz, true
}

// HasLotSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasLotSz() bool {
	if o != nil && !IsNil(o.LotSz) {
		return true
	}

	return false
}

// SetLotSz gets a reference to the given string and assigns it to the LotSz field.
func (o *GetAccountInstrumentsV5RespData) SetLotSz(v string) {
	o.LotSz = &v
}

// GetMaxIcebergSz returns the MaxIcebergSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxIcebergSz() string {
	if o == nil || IsNil(o.MaxIcebergSz) {
		var ret string
		return ret
	}
	return *o.MaxIcebergSz
}

// GetMaxIcebergSzOk returns a tuple with the MaxIcebergSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxIcebergSzOk() (*string, bool) {
	if o == nil || IsNil(o.MaxIcebergSz) {
		return nil, false
	}
	return o.MaxIcebergSz, true
}

// HasMaxIcebergSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxIcebergSz() bool {
	if o != nil && !IsNil(o.MaxIcebergSz) {
		return true
	}

	return false
}

// SetMaxIcebergSz gets a reference to the given string and assigns it to the MaxIcebergSz field.
func (o *GetAccountInstrumentsV5RespData) SetMaxIcebergSz(v string) {
	o.MaxIcebergSz = &v
}

// GetMaxLmtAmt returns the MaxLmtAmt field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxLmtAmt() string {
	if o == nil || IsNil(o.MaxLmtAmt) {
		var ret string
		return ret
	}
	return *o.MaxLmtAmt
}

// GetMaxLmtAmtOk returns a tuple with the MaxLmtAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxLmtAmtOk() (*string, bool) {
	if o == nil || IsNil(o.MaxLmtAmt) {
		return nil, false
	}
	return o.MaxLmtAmt, true
}

// HasMaxLmtAmt returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxLmtAmt() bool {
	if o != nil && !IsNil(o.MaxLmtAmt) {
		return true
	}

	return false
}

// SetMaxLmtAmt gets a reference to the given string and assigns it to the MaxLmtAmt field.
func (o *GetAccountInstrumentsV5RespData) SetMaxLmtAmt(v string) {
	o.MaxLmtAmt = &v
}

// GetMaxLmtSz returns the MaxLmtSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxLmtSz() string {
	if o == nil || IsNil(o.MaxLmtSz) {
		var ret string
		return ret
	}
	return *o.MaxLmtSz
}

// GetMaxLmtSzOk returns a tuple with the MaxLmtSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxLmtSzOk() (*string, bool) {
	if o == nil || IsNil(o.MaxLmtSz) {
		return nil, false
	}
	return o.MaxLmtSz, true
}

// HasMaxLmtSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxLmtSz() bool {
	if o != nil && !IsNil(o.MaxLmtSz) {
		return true
	}

	return false
}

// SetMaxLmtSz gets a reference to the given string and assigns it to the MaxLmtSz field.
func (o *GetAccountInstrumentsV5RespData) SetMaxLmtSz(v string) {
	o.MaxLmtSz = &v
}

// GetMaxMktAmt returns the MaxMktAmt field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxMktAmt() string {
	if o == nil || IsNil(o.MaxMktAmt) {
		var ret string
		return ret
	}
	return *o.MaxMktAmt
}

// GetMaxMktAmtOk returns a tuple with the MaxMktAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxMktAmtOk() (*string, bool) {
	if o == nil || IsNil(o.MaxMktAmt) {
		return nil, false
	}
	return o.MaxMktAmt, true
}

// HasMaxMktAmt returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxMktAmt() bool {
	if o != nil && !IsNil(o.MaxMktAmt) {
		return true
	}

	return false
}

// SetMaxMktAmt gets a reference to the given string and assigns it to the MaxMktAmt field.
func (o *GetAccountInstrumentsV5RespData) SetMaxMktAmt(v string) {
	o.MaxMktAmt = &v
}

// GetMaxMktSz returns the MaxMktSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxMktSz() string {
	if o == nil || IsNil(o.MaxMktSz) {
		var ret string
		return ret
	}
	return *o.MaxMktSz
}

// GetMaxMktSzOk returns a tuple with the MaxMktSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxMktSzOk() (*string, bool) {
	if o == nil || IsNil(o.MaxMktSz) {
		return nil, false
	}
	return o.MaxMktSz, true
}

// HasMaxMktSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxMktSz() bool {
	if o != nil && !IsNil(o.MaxMktSz) {
		return true
	}

	return false
}

// SetMaxMktSz gets a reference to the given string and assigns it to the MaxMktSz field.
func (o *GetAccountInstrumentsV5RespData) SetMaxMktSz(v string) {
	o.MaxMktSz = &v
}

// GetMaxStopSz returns the MaxStopSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxStopSz() string {
	if o == nil || IsNil(o.MaxStopSz) {
		var ret string
		return ret
	}
	return *o.MaxStopSz
}

// GetMaxStopSzOk returns a tuple with the MaxStopSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxStopSzOk() (*string, bool) {
	if o == nil || IsNil(o.MaxStopSz) {
		return nil, false
	}
	return o.MaxStopSz, true
}

// HasMaxStopSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxStopSz() bool {
	if o != nil && !IsNil(o.MaxStopSz) {
		return true
	}

	return false
}

// SetMaxStopSz gets a reference to the given string and assigns it to the MaxStopSz field.
func (o *GetAccountInstrumentsV5RespData) SetMaxStopSz(v string) {
	o.MaxStopSz = &v
}

// GetMaxTriggerSz returns the MaxTriggerSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxTriggerSz() string {
	if o == nil || IsNil(o.MaxTriggerSz) {
		var ret string
		return ret
	}
	return *o.MaxTriggerSz
}

// GetMaxTriggerSzOk returns a tuple with the MaxTriggerSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxTriggerSzOk() (*string, bool) {
	if o == nil || IsNil(o.MaxTriggerSz) {
		return nil, false
	}
	return o.MaxTriggerSz, true
}

// HasMaxTriggerSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxTriggerSz() bool {
	if o != nil && !IsNil(o.MaxTriggerSz) {
		return true
	}

	return false
}

// SetMaxTriggerSz gets a reference to the given string and assigns it to the MaxTriggerSz field.
func (o *GetAccountInstrumentsV5RespData) SetMaxTriggerSz(v string) {
	o.MaxTriggerSz = &v
}

// GetMaxTwapSz returns the MaxTwapSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMaxTwapSz() string {
	if o == nil || IsNil(o.MaxTwapSz) {
		var ret string
		return ret
	}
	return *o.MaxTwapSz
}

// GetMaxTwapSzOk returns a tuple with the MaxTwapSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMaxTwapSzOk() (*string, bool) {
	if o == nil || IsNil(o.MaxTwapSz) {
		return nil, false
	}
	return o.MaxTwapSz, true
}

// HasMaxTwapSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMaxTwapSz() bool {
	if o != nil && !IsNil(o.MaxTwapSz) {
		return true
	}

	return false
}

// SetMaxTwapSz gets a reference to the given string and assigns it to the MaxTwapSz field.
func (o *GetAccountInstrumentsV5RespData) SetMaxTwapSz(v string) {
	o.MaxTwapSz = &v
}

// GetMinSz returns the MinSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetMinSz() string {
	if o == nil || IsNil(o.MinSz) {
		var ret string
		return ret
	}
	return *o.MinSz
}

// GetMinSzOk returns a tuple with the MinSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetMinSzOk() (*string, bool) {
	if o == nil || IsNil(o.MinSz) {
		return nil, false
	}
	return o.MinSz, true
}

// HasMinSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasMinSz() bool {
	if o != nil && !IsNil(o.MinSz) {
		return true
	}

	return false
}

// SetMinSz gets a reference to the given string and assigns it to the MinSz field.
func (o *GetAccountInstrumentsV5RespData) SetMinSz(v string) {
	o.MinSz = &v
}

// GetOptType returns the OptType field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetOptType() string {
	if o == nil || IsNil(o.OptType) {
		var ret string
		return ret
	}
	return *o.OptType
}

// GetOptTypeOk returns a tuple with the OptType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetOptTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OptType) {
		return nil, false
	}
	return o.OptType, true
}

// HasOptType returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasOptType() bool {
	if o != nil && !IsNil(o.OptType) {
		return true
	}

	return false
}

// SetOptType gets a reference to the given string and assigns it to the OptType field.
func (o *GetAccountInstrumentsV5RespData) SetOptType(v string) {
	o.OptType = &v
}

// GetQuoteCcy returns the QuoteCcy field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetQuoteCcy() string {
	if o == nil || IsNil(o.QuoteCcy) {
		var ret string
		return ret
	}
	return *o.QuoteCcy
}

// GetQuoteCcyOk returns a tuple with the QuoteCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetQuoteCcyOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteCcy) {
		return nil, false
	}
	return o.QuoteCcy, true
}

// HasQuoteCcy returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasQuoteCcy() bool {
	if o != nil && !IsNil(o.QuoteCcy) {
		return true
	}

	return false
}

// SetQuoteCcy gets a reference to the given string and assigns it to the QuoteCcy field.
func (o *GetAccountInstrumentsV5RespData) SetQuoteCcy(v string) {
	o.QuoteCcy = &v
}

// GetRuleType returns the RuleType field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetRuleType() string {
	if o == nil || IsNil(o.RuleType) {
		var ret string
		return ret
	}
	return *o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetRuleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RuleType) {
		return nil, false
	}
	return o.RuleType, true
}

// HasRuleType returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasRuleType() bool {
	if o != nil && !IsNil(o.RuleType) {
		return true
	}

	return false
}

// SetRuleType gets a reference to the given string and assigns it to the RuleType field.
func (o *GetAccountInstrumentsV5RespData) SetRuleType(v string) {
	o.RuleType = &v
}

// GetSettleCcy returns the SettleCcy field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetSettleCcy() string {
	if o == nil || IsNil(o.SettleCcy) {
		var ret string
		return ret
	}
	return *o.SettleCcy
}

// GetSettleCcyOk returns a tuple with the SettleCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetSettleCcyOk() (*string, bool) {
	if o == nil || IsNil(o.SettleCcy) {
		return nil, false
	}
	return o.SettleCcy, true
}

// HasSettleCcy returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasSettleCcy() bool {
	if o != nil && !IsNil(o.SettleCcy) {
		return true
	}

	return false
}

// SetSettleCcy gets a reference to the given string and assigns it to the SettleCcy field.
func (o *GetAccountInstrumentsV5RespData) SetSettleCcy(v string) {
	o.SettleCcy = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetAccountInstrumentsV5RespData) SetState(v string) {
	o.State = &v
}

// GetStk returns the Stk field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetStk() string {
	if o == nil || IsNil(o.Stk) {
		var ret string
		return ret
	}
	return *o.Stk
}

// GetStkOk returns a tuple with the Stk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetStkOk() (*string, bool) {
	if o == nil || IsNil(o.Stk) {
		return nil, false
	}
	return o.Stk, true
}

// HasStk returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasStk() bool {
	if o != nil && !IsNil(o.Stk) {
		return true
	}

	return false
}

// SetStk gets a reference to the given string and assigns it to the Stk field.
func (o *GetAccountInstrumentsV5RespData) SetStk(v string) {
	o.Stk = &v
}

// GetTickSz returns the TickSz field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetTickSz() string {
	if o == nil || IsNil(o.TickSz) {
		var ret string
		return ret
	}
	return *o.TickSz
}

// GetTickSzOk returns a tuple with the TickSz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetTickSzOk() (*string, bool) {
	if o == nil || IsNil(o.TickSz) {
		return nil, false
	}
	return o.TickSz, true
}

// HasTickSz returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasTickSz() bool {
	if o != nil && !IsNil(o.TickSz) {
		return true
	}

	return false
}

// SetTickSz gets a reference to the given string and assigns it to the TickSz field.
func (o *GetAccountInstrumentsV5RespData) SetTickSz(v string) {
	o.TickSz = &v
}

// GetUly returns the Uly field value if set, zero value otherwise.
func (o *GetAccountInstrumentsV5RespData) GetUly() string {
	if o == nil || IsNil(o.Uly) {
		var ret string
		return ret
	}
	return *o.Uly
}

// GetUlyOk returns a tuple with the Uly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountInstrumentsV5RespData) GetUlyOk() (*string, bool) {
	if o == nil || IsNil(o.Uly) {
		return nil, false
	}
	return o.Uly, true
}

// HasUly returns a boolean if a field has been set.
func (o *GetAccountInstrumentsV5RespData) HasUly() bool {
	if o != nil && !IsNil(o.Uly) {
		return true
	}

	return false
}

// SetUly gets a reference to the given string and assigns it to the Uly field.
func (o *GetAccountInstrumentsV5RespData) SetUly(v string) {
	o.Uly = &v
}

func (o GetAccountInstrumentsV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountInstrumentsV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuctionEndTime) {
		toSerialize["auctionEndTime"] = o.AuctionEndTime
	}
	if !IsNil(o.BaseCcy) {
		toSerialize["baseCcy"] = o.BaseCcy
	}
	if !IsNil(o.CtMult) {
		toSerialize["ctMult"] = o.CtMult
	}
	if !IsNil(o.CtType) {
		toSerialize["ctType"] = o.CtType
	}
	if !IsNil(o.CtVal) {
		toSerialize["ctVal"] = o.CtVal
	}
	if !IsNil(o.CtValCcy) {
		toSerialize["ctValCcy"] = o.CtValCcy
	}
	if !IsNil(o.ExpTime) {
		toSerialize["expTime"] = o.ExpTime
	}
	if !IsNil(o.FutureSettlement) {
		toSerialize["futureSettlement"] = o.FutureSettlement
	}
	if !IsNil(o.InstFamily) {
		toSerialize["instFamily"] = o.InstFamily
	}
	if !IsNil(o.InstId) {
		toSerialize["instId"] = o.InstId
	}
	if !IsNil(o.InstType) {
		toSerialize["instType"] = o.InstType
	}
	if !IsNil(o.Lever) {
		toSerialize["lever"] = o.Lever
	}
	if !IsNil(o.ListTime) {
		toSerialize["listTime"] = o.ListTime
	}
	if !IsNil(o.LotSz) {
		toSerialize["lotSz"] = o.LotSz
	}
	if !IsNil(o.MaxIcebergSz) {
		toSerialize["maxIcebergSz"] = o.MaxIcebergSz
	}
	if !IsNil(o.MaxLmtAmt) {
		toSerialize["maxLmtAmt"] = o.MaxLmtAmt
	}
	if !IsNil(o.MaxLmtSz) {
		toSerialize["maxLmtSz"] = o.MaxLmtSz
	}
	if !IsNil(o.MaxMktAmt) {
		toSerialize["maxMktAmt"] = o.MaxMktAmt
	}
	if !IsNil(o.MaxMktSz) {
		toSerialize["maxMktSz"] = o.MaxMktSz
	}
	if !IsNil(o.MaxStopSz) {
		toSerialize["maxStopSz"] = o.MaxStopSz
	}
	if !IsNil(o.MaxTriggerSz) {
		toSerialize["maxTriggerSz"] = o.MaxTriggerSz
	}
	if !IsNil(o.MaxTwapSz) {
		toSerialize["maxTwapSz"] = o.MaxTwapSz
	}
	if !IsNil(o.MinSz) {
		toSerialize["minSz"] = o.MinSz
	}
	if !IsNil(o.OptType) {
		toSerialize["optType"] = o.OptType
	}
	if !IsNil(o.QuoteCcy) {
		toSerialize["quoteCcy"] = o.QuoteCcy
	}
	if !IsNil(o.RuleType) {
		toSerialize["ruleType"] = o.RuleType
	}
	if !IsNil(o.SettleCcy) {
		toSerialize["settleCcy"] = o.SettleCcy
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Stk) {
		toSerialize["stk"] = o.Stk
	}
	if !IsNil(o.TickSz) {
		toSerialize["tickSz"] = o.TickSz
	}
	if !IsNil(o.Uly) {
		toSerialize["uly"] = o.Uly
	}
	return toSerialize, nil
}

type NullableGetAccountInstrumentsV5RespData struct {
	value *GetAccountInstrumentsV5RespData
	isSet bool
}

func (v NullableGetAccountInstrumentsV5RespData) Get() *GetAccountInstrumentsV5RespData {
	return v.value
}

func (v *NullableGetAccountInstrumentsV5RespData) Set(val *GetAccountInstrumentsV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountInstrumentsV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountInstrumentsV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountInstrumentsV5RespData(val *GetAccountInstrumentsV5RespData) *NullableGetAccountInstrumentsV5RespData {
	return &NullableGetAccountInstrumentsV5RespData{value: val, isSet: true}
}

func (v NullableGetAccountInstrumentsV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountInstrumentsV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


