/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradeMassCancelV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradeMassCancelV5Req{}

// CreateTradeMassCancelV5Req struct for CreateTradeMassCancelV5Req
type CreateTradeMassCancelV5Req struct {
	// Instrument family
	InstFamily string `json:"instFamily"`
	// Instrument type  `OPTION`
	InstType string `json:"instType"`
	// Lock interval(ms)   The range should be [0, 10 000]   The default is 0. You can set it as \"0\" if you want to unlock it immediately.   Error 54008 will be returned when placing order during lock interval, it is different from 51034 which is thrown when MMP is triggered
	LockInterval *string `json:"lockInterval,omitempty"`
}

type _CreateTradeMassCancelV5Req CreateTradeMassCancelV5Req

// NewCreateTradeMassCancelV5Req instantiates a new CreateTradeMassCancelV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradeMassCancelV5Req(instFamily string, instType string) *CreateTradeMassCancelV5Req {
	this := CreateTradeMassCancelV5Req{}
	this.InstFamily = instFamily
	this.InstType = instType
	var lockInterval string = ""
	this.LockInterval = &lockInterval
	return &this
}

// NewCreateTradeMassCancelV5ReqWithDefaults instantiates a new CreateTradeMassCancelV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradeMassCancelV5ReqWithDefaults() *CreateTradeMassCancelV5Req {
	this := CreateTradeMassCancelV5Req{}
	var instFamily string = ""
	this.InstFamily = instFamily
	var instType string = ""
	this.InstType = instType
	var lockInterval string = ""
	this.LockInterval = &lockInterval
	return &this
}

// GetInstFamily returns the InstFamily field value
func (o *CreateTradeMassCancelV5Req) GetInstFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstFamily
}

// GetInstFamilyOk returns a tuple with the InstFamily field value
// and a boolean to check if the value has been set.
func (o *CreateTradeMassCancelV5Req) GetInstFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstFamily, true
}

// SetInstFamily sets field value
func (o *CreateTradeMassCancelV5Req) SetInstFamily(v string) {
	o.InstFamily = v
}

// GetInstType returns the InstType field value
func (o *CreateTradeMassCancelV5Req) GetInstType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstType
}

// GetInstTypeOk returns a tuple with the InstType field value
// and a boolean to check if the value has been set.
func (o *CreateTradeMassCancelV5Req) GetInstTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstType, true
}

// SetInstType sets field value
func (o *CreateTradeMassCancelV5Req) SetInstType(v string) {
	o.InstType = v
}

// GetLockInterval returns the LockInterval field value if set, zero value otherwise.
func (o *CreateTradeMassCancelV5Req) GetLockInterval() string {
	if o == nil || IsNil(o.LockInterval) {
		var ret string
		return ret
	}
	return *o.LockInterval
}

// GetLockIntervalOk returns a tuple with the LockInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeMassCancelV5Req) GetLockIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.LockInterval) {
		return nil, false
	}
	return o.LockInterval, true
}

// HasLockInterval returns a boolean if a field has been set.
func (o *CreateTradeMassCancelV5Req) HasLockInterval() bool {
	if o != nil && !IsNil(o.LockInterval) {
		return true
	}

	return false
}

// SetLockInterval gets a reference to the given string and assigns it to the LockInterval field.
func (o *CreateTradeMassCancelV5Req) SetLockInterval(v string) {
	o.LockInterval = &v
}

func (o CreateTradeMassCancelV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradeMassCancelV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instFamily"] = o.InstFamily
	toSerialize["instType"] = o.InstType
	if !IsNil(o.LockInterval) {
		toSerialize["lockInterval"] = o.LockInterval
	}
	return toSerialize, nil
}

func (o *CreateTradeMassCancelV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instFamily",
		"instType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradeMassCancelV5Req := _CreateTradeMassCancelV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradeMassCancelV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradeMassCancelV5Req(varCreateTradeMassCancelV5Req)

	return err
}

type NullableCreateTradeMassCancelV5Req struct {
	value *CreateTradeMassCancelV5Req
	isSet bool
}

func (v NullableCreateTradeMassCancelV5Req) Get() *CreateTradeMassCancelV5Req {
	return v.value
}

func (v *NullableCreateTradeMassCancelV5Req) Set(val *CreateTradeMassCancelV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradeMassCancelV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradeMassCancelV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradeMassCancelV5Req(val *CreateTradeMassCancelV5Req) *NullableCreateTradeMassCancelV5Req {
	return &NullableCreateTradeMassCancelV5Req{value: val, isSet: true}
}

func (v NullableCreateTradeMassCancelV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradeMassCancelV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


