/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradeOrderPrecheckV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradeOrderPrecheckV5Req{}

// CreateTradeOrderPrecheckV5Req struct for CreateTradeOrderPrecheckV5Req
type CreateTradeOrderPrecheckV5Req struct {
	// TP/SL information attached when placing order
	AttachAlgoOrds []CreateTradeOrderPrecheckV5ReqAttachAlgoOrdsInner `json:"attachAlgoOrds,omitempty"`
	// Instrument ID, e.g. `BTC-USDT`
	InstId string `json:"instId"`
	// Order type   `market`: Market order   `limit`: Limit order   `post_only`: Post-only order   `fok`: Fill-or-kill order   `ioc`: Immediate-or-cancel order    `optimal_limit_ioc`: Market order with immediate-or-cancel order (applicable only to Expiry Futures and Perpetual Futures).
	OrdType string `json:"ordType"`
	// Position side    The default is `net` in the `net` mode   It is required in the `long/short` mode, and can only be `long` or `short`.   Only applicable to `FUTURES`/`SWAP`.
	PosSide *string `json:"posSide,omitempty"`
	// Order price. Only applicable to `limit`,`post_only`,`fok`,`ioc`,`mmp`,`mmp_and_post_only` order.
	Px *string `json:"px,omitempty"`
	// Whether orders can only reduce in position size.    Valid options: `true` or `false`. The default value is `false`.  Only applicable to `MARGIN` orders, and `FUTURES`/`SWAP` orders in `net` mode   Only applicable to `Spot and futures mode` and `Multi-currency margin`
	ReduceOnly *bool `json:"reduceOnly,omitempty"`
	// Order side, `buy` `sell`
	Side string `json:"side"`
	// Quantity to buy or sell
	Sz string `json:"sz"`
	// Trade mode  Margin mode `cross` `isolated`  Non-Margin mode `cash`  `spot_isolated` (only applicable to SPOT lead trading, `tdMode` should be `spot_isolated` for `SPOT` lead trading.)
	TdMode string `json:"tdMode"`
	// Whether the target currency uses the quote or base currency.  `base_ccy`: Base currency ,`quote_ccy`: Quote currency    Only applicable to `SPOT` Market Orders  Default is `quote_ccy` for buy, `base_ccy` for sell
	TgtCcy *string `json:"tgtCcy,omitempty"`
}

type _CreateTradeOrderPrecheckV5Req CreateTradeOrderPrecheckV5Req

// NewCreateTradeOrderPrecheckV5Req instantiates a new CreateTradeOrderPrecheckV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradeOrderPrecheckV5Req(instId string, ordType string, side string, sz string, tdMode string) *CreateTradeOrderPrecheckV5Req {
	this := CreateTradeOrderPrecheckV5Req{}
	this.InstId = instId
	this.OrdType = ordType
	var posSide string = ""
	this.PosSide = &posSide
	var px string = ""
	this.Px = &px
	this.Side = side
	this.Sz = sz
	this.TdMode = tdMode
	var tgtCcy string = ""
	this.TgtCcy = &tgtCcy
	return &this
}

// NewCreateTradeOrderPrecheckV5ReqWithDefaults instantiates a new CreateTradeOrderPrecheckV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradeOrderPrecheckV5ReqWithDefaults() *CreateTradeOrderPrecheckV5Req {
	this := CreateTradeOrderPrecheckV5Req{}
	var instId string = ""
	this.InstId = instId
	var ordType string = ""
	this.OrdType = ordType
	var posSide string = ""
	this.PosSide = &posSide
	var px string = ""
	this.Px = &px
	var side string = ""
	this.Side = side
	var sz string = ""
	this.Sz = sz
	var tdMode string = ""
	this.TdMode = tdMode
	var tgtCcy string = ""
	this.TgtCcy = &tgtCcy
	return &this
}

// GetAttachAlgoOrds returns the AttachAlgoOrds field value if set, zero value otherwise.
func (o *CreateTradeOrderPrecheckV5Req) GetAttachAlgoOrds() []CreateTradeOrderPrecheckV5ReqAttachAlgoOrdsInner {
	if o == nil || IsNil(o.AttachAlgoOrds) {
		var ret []CreateTradeOrderPrecheckV5ReqAttachAlgoOrdsInner
		return ret
	}
	return o.AttachAlgoOrds
}

// GetAttachAlgoOrdsOk returns a tuple with the AttachAlgoOrds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetAttachAlgoOrdsOk() ([]CreateTradeOrderPrecheckV5ReqAttachAlgoOrdsInner, bool) {
	if o == nil || IsNil(o.AttachAlgoOrds) {
		return nil, false
	}
	return o.AttachAlgoOrds, true
}

// HasAttachAlgoOrds returns a boolean if a field has been set.
func (o *CreateTradeOrderPrecheckV5Req) HasAttachAlgoOrds() bool {
	if o != nil && !IsNil(o.AttachAlgoOrds) {
		return true
	}

	return false
}

// SetAttachAlgoOrds gets a reference to the given []CreateTradeOrderPrecheckV5ReqAttachAlgoOrdsInner and assigns it to the AttachAlgoOrds field.
func (o *CreateTradeOrderPrecheckV5Req) SetAttachAlgoOrds(v []CreateTradeOrderPrecheckV5ReqAttachAlgoOrdsInner) {
	o.AttachAlgoOrds = v
}

// GetInstId returns the InstId field value
func (o *CreateTradeOrderPrecheckV5Req) GetInstId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetInstIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstId, true
}

// SetInstId sets field value
func (o *CreateTradeOrderPrecheckV5Req) SetInstId(v string) {
	o.InstId = v
}

// GetOrdType returns the OrdType field value
func (o *CreateTradeOrderPrecheckV5Req) GetOrdType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrdType
}

// GetOrdTypeOk returns a tuple with the OrdType field value
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetOrdTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrdType, true
}

// SetOrdType sets field value
func (o *CreateTradeOrderPrecheckV5Req) SetOrdType(v string) {
	o.OrdType = v
}

// GetPosSide returns the PosSide field value if set, zero value otherwise.
func (o *CreateTradeOrderPrecheckV5Req) GetPosSide() string {
	if o == nil || IsNil(o.PosSide) {
		var ret string
		return ret
	}
	return *o.PosSide
}

// GetPosSideOk returns a tuple with the PosSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetPosSideOk() (*string, bool) {
	if o == nil || IsNil(o.PosSide) {
		return nil, false
	}
	return o.PosSide, true
}

// HasPosSide returns a boolean if a field has been set.
func (o *CreateTradeOrderPrecheckV5Req) HasPosSide() bool {
	if o != nil && !IsNil(o.PosSide) {
		return true
	}

	return false
}

// SetPosSide gets a reference to the given string and assigns it to the PosSide field.
func (o *CreateTradeOrderPrecheckV5Req) SetPosSide(v string) {
	o.PosSide = &v
}

// GetPx returns the Px field value if set, zero value otherwise.
func (o *CreateTradeOrderPrecheckV5Req) GetPx() string {
	if o == nil || IsNil(o.Px) {
		var ret string
		return ret
	}
	return *o.Px
}

// GetPxOk returns a tuple with the Px field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetPxOk() (*string, bool) {
	if o == nil || IsNil(o.Px) {
		return nil, false
	}
	return o.Px, true
}

// HasPx returns a boolean if a field has been set.
func (o *CreateTradeOrderPrecheckV5Req) HasPx() bool {
	if o != nil && !IsNil(o.Px) {
		return true
	}

	return false
}

// SetPx gets a reference to the given string and assigns it to the Px field.
func (o *CreateTradeOrderPrecheckV5Req) SetPx(v string) {
	o.Px = &v
}

// GetReduceOnly returns the ReduceOnly field value if set, zero value otherwise.
func (o *CreateTradeOrderPrecheckV5Req) GetReduceOnly() bool {
	if o == nil || IsNil(o.ReduceOnly) {
		var ret bool
		return ret
	}
	return *o.ReduceOnly
}

// GetReduceOnlyOk returns a tuple with the ReduceOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetReduceOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReduceOnly) {
		return nil, false
	}
	return o.ReduceOnly, true
}

// HasReduceOnly returns a boolean if a field has been set.
func (o *CreateTradeOrderPrecheckV5Req) HasReduceOnly() bool {
	if o != nil && !IsNil(o.ReduceOnly) {
		return true
	}

	return false
}

// SetReduceOnly gets a reference to the given bool and assigns it to the ReduceOnly field.
func (o *CreateTradeOrderPrecheckV5Req) SetReduceOnly(v bool) {
	o.ReduceOnly = &v
}

// GetSide returns the Side field value
func (o *CreateTradeOrderPrecheckV5Req) GetSide() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetSideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *CreateTradeOrderPrecheckV5Req) SetSide(v string) {
	o.Side = v
}

// GetSz returns the Sz field value
func (o *CreateTradeOrderPrecheckV5Req) GetSz() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sz
}

// GetSzOk returns a tuple with the Sz field value
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetSzOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sz, true
}

// SetSz sets field value
func (o *CreateTradeOrderPrecheckV5Req) SetSz(v string) {
	o.Sz = v
}

// GetTdMode returns the TdMode field value
func (o *CreateTradeOrderPrecheckV5Req) GetTdMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TdMode
}

// GetTdModeOk returns a tuple with the TdMode field value
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetTdModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TdMode, true
}

// SetTdMode sets field value
func (o *CreateTradeOrderPrecheckV5Req) SetTdMode(v string) {
	o.TdMode = v
}

// GetTgtCcy returns the TgtCcy field value if set, zero value otherwise.
func (o *CreateTradeOrderPrecheckV5Req) GetTgtCcy() string {
	if o == nil || IsNil(o.TgtCcy) {
		var ret string
		return ret
	}
	return *o.TgtCcy
}

// GetTgtCcyOk returns a tuple with the TgtCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeOrderPrecheckV5Req) GetTgtCcyOk() (*string, bool) {
	if o == nil || IsNil(o.TgtCcy) {
		return nil, false
	}
	return o.TgtCcy, true
}

// HasTgtCcy returns a boolean if a field has been set.
func (o *CreateTradeOrderPrecheckV5Req) HasTgtCcy() bool {
	if o != nil && !IsNil(o.TgtCcy) {
		return true
	}

	return false
}

// SetTgtCcy gets a reference to the given string and assigns it to the TgtCcy field.
func (o *CreateTradeOrderPrecheckV5Req) SetTgtCcy(v string) {
	o.TgtCcy = &v
}

func (o CreateTradeOrderPrecheckV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradeOrderPrecheckV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttachAlgoOrds) {
		toSerialize["attachAlgoOrds"] = o.AttachAlgoOrds
	}
	toSerialize["instId"] = o.InstId
	toSerialize["ordType"] = o.OrdType
	if !IsNil(o.PosSide) {
		toSerialize["posSide"] = o.PosSide
	}
	if !IsNil(o.Px) {
		toSerialize["px"] = o.Px
	}
	if !IsNil(o.ReduceOnly) {
		toSerialize["reduceOnly"] = o.ReduceOnly
	}
	toSerialize["side"] = o.Side
	toSerialize["sz"] = o.Sz
	toSerialize["tdMode"] = o.TdMode
	if !IsNil(o.TgtCcy) {
		toSerialize["tgtCcy"] = o.TgtCcy
	}
	return toSerialize, nil
}

func (o *CreateTradeOrderPrecheckV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instId",
		"ordType",
		"side",
		"sz",
		"tdMode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradeOrderPrecheckV5Req := _CreateTradeOrderPrecheckV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradeOrderPrecheckV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradeOrderPrecheckV5Req(varCreateTradeOrderPrecheckV5Req)

	return err
}

type NullableCreateTradeOrderPrecheckV5Req struct {
	value *CreateTradeOrderPrecheckV5Req
	isSet bool
}

func (v NullableCreateTradeOrderPrecheckV5Req) Get() *CreateTradeOrderPrecheckV5Req {
	return v.value
}

func (v *NullableCreateTradeOrderPrecheckV5Req) Set(val *CreateTradeOrderPrecheckV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradeOrderPrecheckV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradeOrderPrecheckV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradeOrderPrecheckV5Req(val *CreateTradeOrderPrecheckV5Req) *NullableCreateTradeOrderPrecheckV5Req {
	return &NullableCreateTradeOrderPrecheckV5Req{value: val, isSet: true}
}

func (v NullableCreateTradeOrderPrecheckV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradeOrderPrecheckV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


