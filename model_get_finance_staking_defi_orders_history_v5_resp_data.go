/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetFinanceStakingDefiOrdersHistoryV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFinanceStakingDefiOrdersHistoryV5RespData{}

// GetFinanceStakingDefiOrdersHistoryV5RespData struct for GetFinanceStakingDefiOrdersHistoryV5RespData
type GetFinanceStakingDefiOrdersHistoryV5RespData struct {
	// Estimated APY  If the estimated APY is 7% , this field is `0.07`  Retain to 4 decimal places (truncated)
	Apy *string `json:"apy,omitempty"`
	// Currency, e.g. `BTC`
	Ccy *string `json:"ccy,omitempty"`
	// Earning data
	EarningData []GetFinanceStakingDefiOrdersHistoryV5RespDataEarningDataInner `json:"earningData,omitempty"`
	// Investment data
	InvestData []GetFinanceStakingDefiOrdersActiveV5RespDataInvestDataInner `json:"investData,omitempty"`
	// Order ID
	OrdId *string `json:"ordId,omitempty"`
	// Product ID
	ProductId *string `json:"productId,omitempty"`
	// Protocol
	Protocol *string `json:"protocol,omitempty"`
	// Protocol type  `defi`: on-chain earn
	ProtocolType *string `json:"protocolType,omitempty"`
	// Order purchased time, Unix timestamp format in milliseconds, e.g. `1597026383085`
	PurchasedTime *string `json:"purchasedTime,omitempty"`
	// Order redeemed time, Unix timestamp format in milliseconds, e.g. `1597026383085`
	RedeemedTime *string `json:"redeemedTime,omitempty"`
	// Order state  `3`: Completed (including canceled and redeemed)
	State *string `json:"state,omitempty"`
	// Order tag
	Tag *string `json:"tag,omitempty"`
	// Protocol term  It will return the days of fixed term and will return `0` for flexible product
	Term *string `json:"term,omitempty"`
}

// NewGetFinanceStakingDefiOrdersHistoryV5RespData instantiates a new GetFinanceStakingDefiOrdersHistoryV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFinanceStakingDefiOrdersHistoryV5RespData() *GetFinanceStakingDefiOrdersHistoryV5RespData {
	this := GetFinanceStakingDefiOrdersHistoryV5RespData{}
	var apy string = ""
	this.Apy = &apy
	var ccy string = ""
	this.Ccy = &ccy
	var ordId string = ""
	this.OrdId = &ordId
	var productId string = ""
	this.ProductId = &productId
	var protocol string = ""
	this.Protocol = &protocol
	var protocolType string = ""
	this.ProtocolType = &protocolType
	var purchasedTime string = ""
	this.PurchasedTime = &purchasedTime
	var redeemedTime string = ""
	this.RedeemedTime = &redeemedTime
	var state string = ""
	this.State = &state
	var tag string = ""
	this.Tag = &tag
	var term string = ""
	this.Term = &term
	return &this
}

// NewGetFinanceStakingDefiOrdersHistoryV5RespDataWithDefaults instantiates a new GetFinanceStakingDefiOrdersHistoryV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFinanceStakingDefiOrdersHistoryV5RespDataWithDefaults() *GetFinanceStakingDefiOrdersHistoryV5RespData {
	this := GetFinanceStakingDefiOrdersHistoryV5RespData{}
	var apy string = ""
	this.Apy = &apy
	var ccy string = ""
	this.Ccy = &ccy
	var ordId string = ""
	this.OrdId = &ordId
	var productId string = ""
	this.ProductId = &productId
	var protocol string = ""
	this.Protocol = &protocol
	var protocolType string = ""
	this.ProtocolType = &protocolType
	var purchasedTime string = ""
	this.PurchasedTime = &purchasedTime
	var redeemedTime string = ""
	this.RedeemedTime = &redeemedTime
	var state string = ""
	this.State = &state
	var tag string = ""
	this.Tag = &tag
	var term string = ""
	this.Term = &term
	return &this
}

// GetApy returns the Apy field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetApy() string {
	if o == nil || IsNil(o.Apy) {
		var ret string
		return ret
	}
	return *o.Apy
}

// GetApyOk returns a tuple with the Apy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetApyOk() (*string, bool) {
	if o == nil || IsNil(o.Apy) {
		return nil, false
	}
	return o.Apy, true
}

// HasApy returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasApy() bool {
	if o != nil && !IsNil(o.Apy) {
		return true
	}

	return false
}

// SetApy gets a reference to the given string and assigns it to the Apy field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetApy(v string) {
	o.Apy = &v
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetCcy(v string) {
	o.Ccy = &v
}

// GetEarningData returns the EarningData field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetEarningData() []GetFinanceStakingDefiOrdersHistoryV5RespDataEarningDataInner {
	if o == nil || IsNil(o.EarningData) {
		var ret []GetFinanceStakingDefiOrdersHistoryV5RespDataEarningDataInner
		return ret
	}
	return o.EarningData
}

// GetEarningDataOk returns a tuple with the EarningData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetEarningDataOk() ([]GetFinanceStakingDefiOrdersHistoryV5RespDataEarningDataInner, bool) {
	if o == nil || IsNil(o.EarningData) {
		return nil, false
	}
	return o.EarningData, true
}

// HasEarningData returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasEarningData() bool {
	if o != nil && !IsNil(o.EarningData) {
		return true
	}

	return false
}

// SetEarningData gets a reference to the given []GetFinanceStakingDefiOrdersHistoryV5RespDataEarningDataInner and assigns it to the EarningData field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetEarningData(v []GetFinanceStakingDefiOrdersHistoryV5RespDataEarningDataInner) {
	o.EarningData = v
}

// GetInvestData returns the InvestData field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetInvestData() []GetFinanceStakingDefiOrdersActiveV5RespDataInvestDataInner {
	if o == nil || IsNil(o.InvestData) {
		var ret []GetFinanceStakingDefiOrdersActiveV5RespDataInvestDataInner
		return ret
	}
	return o.InvestData
}

// GetInvestDataOk returns a tuple with the InvestData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetInvestDataOk() ([]GetFinanceStakingDefiOrdersActiveV5RespDataInvestDataInner, bool) {
	if o == nil || IsNil(o.InvestData) {
		return nil, false
	}
	return o.InvestData, true
}

// HasInvestData returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasInvestData() bool {
	if o != nil && !IsNil(o.InvestData) {
		return true
	}

	return false
}

// SetInvestData gets a reference to the given []GetFinanceStakingDefiOrdersActiveV5RespDataInvestDataInner and assigns it to the InvestData field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetInvestData(v []GetFinanceStakingDefiOrdersActiveV5RespDataInvestDataInner) {
	o.InvestData = v
}

// GetOrdId returns the OrdId field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetOrdId() string {
	if o == nil || IsNil(o.OrdId) {
		var ret string
		return ret
	}
	return *o.OrdId
}

// GetOrdIdOk returns a tuple with the OrdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetOrdIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrdId) {
		return nil, false
	}
	return o.OrdId, true
}

// HasOrdId returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasOrdId() bool {
	if o != nil && !IsNil(o.OrdId) {
		return true
	}

	return false
}

// SetOrdId gets a reference to the given string and assigns it to the OrdId field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetOrdId(v string) {
	o.OrdId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetProductId(v string) {
	o.ProductId = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetProtocol(v string) {
	o.Protocol = &v
}

// GetProtocolType returns the ProtocolType field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetProtocolType() string {
	if o == nil || IsNil(o.ProtocolType) {
		var ret string
		return ret
	}
	return *o.ProtocolType
}

// GetProtocolTypeOk returns a tuple with the ProtocolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetProtocolTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProtocolType) {
		return nil, false
	}
	return o.ProtocolType, true
}

// HasProtocolType returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasProtocolType() bool {
	if o != nil && !IsNil(o.ProtocolType) {
		return true
	}

	return false
}

// SetProtocolType gets a reference to the given string and assigns it to the ProtocolType field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetProtocolType(v string) {
	o.ProtocolType = &v
}

// GetPurchasedTime returns the PurchasedTime field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetPurchasedTime() string {
	if o == nil || IsNil(o.PurchasedTime) {
		var ret string
		return ret
	}
	return *o.PurchasedTime
}

// GetPurchasedTimeOk returns a tuple with the PurchasedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetPurchasedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PurchasedTime) {
		return nil, false
	}
	return o.PurchasedTime, true
}

// HasPurchasedTime returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasPurchasedTime() bool {
	if o != nil && !IsNil(o.PurchasedTime) {
		return true
	}

	return false
}

// SetPurchasedTime gets a reference to the given string and assigns it to the PurchasedTime field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetPurchasedTime(v string) {
	o.PurchasedTime = &v
}

// GetRedeemedTime returns the RedeemedTime field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetRedeemedTime() string {
	if o == nil || IsNil(o.RedeemedTime) {
		var ret string
		return ret
	}
	return *o.RedeemedTime
}

// GetRedeemedTimeOk returns a tuple with the RedeemedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetRedeemedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.RedeemedTime) {
		return nil, false
	}
	return o.RedeemedTime, true
}

// HasRedeemedTime returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasRedeemedTime() bool {
	if o != nil && !IsNil(o.RedeemedTime) {
		return true
	}

	return false
}

// SetRedeemedTime gets a reference to the given string and assigns it to the RedeemedTime field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetRedeemedTime(v string) {
	o.RedeemedTime = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetState(v string) {
	o.State = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetTag(v string) {
	o.Tag = &v
}

// GetTerm returns the Term field value if set, zero value otherwise.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetTerm() string {
	if o == nil || IsNil(o.Term) {
		var ret string
		return ret
	}
	return *o.Term
}

// GetTermOk returns a tuple with the Term field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) GetTermOk() (*string, bool) {
	if o == nil || IsNil(o.Term) {
		return nil, false
	}
	return o.Term, true
}

// HasTerm returns a boolean if a field has been set.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) HasTerm() bool {
	if o != nil && !IsNil(o.Term) {
		return true
	}

	return false
}

// SetTerm gets a reference to the given string and assigns it to the Term field.
func (o *GetFinanceStakingDefiOrdersHistoryV5RespData) SetTerm(v string) {
	o.Term = &v
}

func (o GetFinanceStakingDefiOrdersHistoryV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFinanceStakingDefiOrdersHistoryV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apy) {
		toSerialize["apy"] = o.Apy
	}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	if !IsNil(o.EarningData) {
		toSerialize["earningData"] = o.EarningData
	}
	if !IsNil(o.InvestData) {
		toSerialize["investData"] = o.InvestData
	}
	if !IsNil(o.OrdId) {
		toSerialize["ordId"] = o.OrdId
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.ProtocolType) {
		toSerialize["protocolType"] = o.ProtocolType
	}
	if !IsNil(o.PurchasedTime) {
		toSerialize["purchasedTime"] = o.PurchasedTime
	}
	if !IsNil(o.RedeemedTime) {
		toSerialize["redeemedTime"] = o.RedeemedTime
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.Term) {
		toSerialize["term"] = o.Term
	}
	return toSerialize, nil
}

type NullableGetFinanceStakingDefiOrdersHistoryV5RespData struct {
	value *GetFinanceStakingDefiOrdersHistoryV5RespData
	isSet bool
}

func (v NullableGetFinanceStakingDefiOrdersHistoryV5RespData) Get() *GetFinanceStakingDefiOrdersHistoryV5RespData {
	return v.value
}

func (v *NullableGetFinanceStakingDefiOrdersHistoryV5RespData) Set(val *GetFinanceStakingDefiOrdersHistoryV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFinanceStakingDefiOrdersHistoryV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFinanceStakingDefiOrdersHistoryV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFinanceStakingDefiOrdersHistoryV5RespData(val *GetFinanceStakingDefiOrdersHistoryV5RespData) *NullableGetFinanceStakingDefiOrdersHistoryV5RespData {
	return &NullableGetFinanceStakingDefiOrdersHistoryV5RespData{value: val, isSet: true}
}

func (v NullableGetFinanceStakingDefiOrdersHistoryV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFinanceStakingDefiOrdersHistoryV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


