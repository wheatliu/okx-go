/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetTradeOrderAlgoV5RespDataInnerLinkedOrd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradeOrderAlgoV5RespDataInnerLinkedOrd{}

// GetTradeOrderAlgoV5RespDataInnerLinkedOrd Linked TP order detail, only applicable to SL order that comes from the one-cancels-the-other (OCO) order that contains the TP limit order.
type GetTradeOrderAlgoV5RespDataInnerLinkedOrd struct {
	// Order ID
	OrdId *string `json:"ordId,omitempty"`
}

// NewGetTradeOrderAlgoV5RespDataInnerLinkedOrd instantiates a new GetTradeOrderAlgoV5RespDataInnerLinkedOrd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradeOrderAlgoV5RespDataInnerLinkedOrd() *GetTradeOrderAlgoV5RespDataInnerLinkedOrd {
	this := GetTradeOrderAlgoV5RespDataInnerLinkedOrd{}
	var ordId string = ""
	this.OrdId = &ordId
	return &this
}

// NewGetTradeOrderAlgoV5RespDataInnerLinkedOrdWithDefaults instantiates a new GetTradeOrderAlgoV5RespDataInnerLinkedOrd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradeOrderAlgoV5RespDataInnerLinkedOrdWithDefaults() *GetTradeOrderAlgoV5RespDataInnerLinkedOrd {
	this := GetTradeOrderAlgoV5RespDataInnerLinkedOrd{}
	var ordId string = ""
	this.OrdId = &ordId
	return &this
}

// GetOrdId returns the OrdId field value if set, zero value otherwise.
func (o *GetTradeOrderAlgoV5RespDataInnerLinkedOrd) GetOrdId() string {
	if o == nil || IsNil(o.OrdId) {
		var ret string
		return ret
	}
	return *o.OrdId
}

// GetOrdIdOk returns a tuple with the OrdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeOrderAlgoV5RespDataInnerLinkedOrd) GetOrdIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrdId) {
		return nil, false
	}
	return o.OrdId, true
}

// HasOrdId returns a boolean if a field has been set.
func (o *GetTradeOrderAlgoV5RespDataInnerLinkedOrd) HasOrdId() bool {
	if o != nil && !IsNil(o.OrdId) {
		return true
	}

	return false
}

// SetOrdId gets a reference to the given string and assigns it to the OrdId field.
func (o *GetTradeOrderAlgoV5RespDataInnerLinkedOrd) SetOrdId(v string) {
	o.OrdId = &v
}

func (o GetTradeOrderAlgoV5RespDataInnerLinkedOrd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradeOrderAlgoV5RespDataInnerLinkedOrd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrdId) {
		toSerialize["ordId"] = o.OrdId
	}
	return toSerialize, nil
}

type NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd struct {
	value *GetTradeOrderAlgoV5RespDataInnerLinkedOrd
	isSet bool
}

func (v NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd) Get() *GetTradeOrderAlgoV5RespDataInnerLinkedOrd {
	return v.value
}

func (v *NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd) Set(val *GetTradeOrderAlgoV5RespDataInnerLinkedOrd) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd(val *GetTradeOrderAlgoV5RespDataInnerLinkedOrd) *NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd {
	return &NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd{value: val, isSet: true}
}

func (v NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradeOrderAlgoV5RespDataInnerLinkedOrd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


