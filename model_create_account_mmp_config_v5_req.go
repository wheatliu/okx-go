/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAccountMmpConfigV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAccountMmpConfigV5Req{}

// CreateAccountMmpConfigV5Req struct for CreateAccountMmpConfigV5Req
type CreateAccountMmpConfigV5Req struct {
	// Frozen period (ms).   \"0\" means the trade will remain frozen until you request \"Reset MMP Status\" to unfrozen
	FrozenInterval string `json:"frozenInterval"`
	// Instrument family
	InstFamily string `json:"instFamily"`
	// Trade qty limit in number of contracts  Must be > 0
	QtyLimit string `json:"qtyLimit"`
	// Time window (ms). MMP interval where monitoring is done  \"0\" means disable MMP
	TimeInterval string `json:"timeInterval"`
}

type _CreateAccountMmpConfigV5Req CreateAccountMmpConfigV5Req

// NewCreateAccountMmpConfigV5Req instantiates a new CreateAccountMmpConfigV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccountMmpConfigV5Req(frozenInterval string, instFamily string, qtyLimit string, timeInterval string) *CreateAccountMmpConfigV5Req {
	this := CreateAccountMmpConfigV5Req{}
	this.FrozenInterval = frozenInterval
	this.InstFamily = instFamily
	this.QtyLimit = qtyLimit
	this.TimeInterval = timeInterval
	return &this
}

// NewCreateAccountMmpConfigV5ReqWithDefaults instantiates a new CreateAccountMmpConfigV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccountMmpConfigV5ReqWithDefaults() *CreateAccountMmpConfigV5Req {
	this := CreateAccountMmpConfigV5Req{}
	var frozenInterval string = ""
	this.FrozenInterval = frozenInterval
	var instFamily string = ""
	this.InstFamily = instFamily
	var qtyLimit string = ""
	this.QtyLimit = qtyLimit
	var timeInterval string = ""
	this.TimeInterval = timeInterval
	return &this
}

// GetFrozenInterval returns the FrozenInterval field value
func (o *CreateAccountMmpConfigV5Req) GetFrozenInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrozenInterval
}

// GetFrozenIntervalOk returns a tuple with the FrozenInterval field value
// and a boolean to check if the value has been set.
func (o *CreateAccountMmpConfigV5Req) GetFrozenIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrozenInterval, true
}

// SetFrozenInterval sets field value
func (o *CreateAccountMmpConfigV5Req) SetFrozenInterval(v string) {
	o.FrozenInterval = v
}

// GetInstFamily returns the InstFamily field value
func (o *CreateAccountMmpConfigV5Req) GetInstFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstFamily
}

// GetInstFamilyOk returns a tuple with the InstFamily field value
// and a boolean to check if the value has been set.
func (o *CreateAccountMmpConfigV5Req) GetInstFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstFamily, true
}

// SetInstFamily sets field value
func (o *CreateAccountMmpConfigV5Req) SetInstFamily(v string) {
	o.InstFamily = v
}

// GetQtyLimit returns the QtyLimit field value
func (o *CreateAccountMmpConfigV5Req) GetQtyLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QtyLimit
}

// GetQtyLimitOk returns a tuple with the QtyLimit field value
// and a boolean to check if the value has been set.
func (o *CreateAccountMmpConfigV5Req) GetQtyLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QtyLimit, true
}

// SetQtyLimit sets field value
func (o *CreateAccountMmpConfigV5Req) SetQtyLimit(v string) {
	o.QtyLimit = v
}

// GetTimeInterval returns the TimeInterval field value
func (o *CreateAccountMmpConfigV5Req) GetTimeInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeInterval
}

// GetTimeIntervalOk returns a tuple with the TimeInterval field value
// and a boolean to check if the value has been set.
func (o *CreateAccountMmpConfigV5Req) GetTimeIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeInterval, true
}

// SetTimeInterval sets field value
func (o *CreateAccountMmpConfigV5Req) SetTimeInterval(v string) {
	o.TimeInterval = v
}

func (o CreateAccountMmpConfigV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAccountMmpConfigV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["frozenInterval"] = o.FrozenInterval
	toSerialize["instFamily"] = o.InstFamily
	toSerialize["qtyLimit"] = o.QtyLimit
	toSerialize["timeInterval"] = o.TimeInterval
	return toSerialize, nil
}

func (o *CreateAccountMmpConfigV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"frozenInterval",
		"instFamily",
		"qtyLimit",
		"timeInterval",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAccountMmpConfigV5Req := _CreateAccountMmpConfigV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAccountMmpConfigV5Req)

	if err != nil {
		return err
	}

	*o = CreateAccountMmpConfigV5Req(varCreateAccountMmpConfigV5Req)

	return err
}

type NullableCreateAccountMmpConfigV5Req struct {
	value *CreateAccountMmpConfigV5Req
	isSet bool
}

func (v NullableCreateAccountMmpConfigV5Req) Get() *CreateAccountMmpConfigV5Req {
	return v.value
}

func (v *NullableCreateAccountMmpConfigV5Req) Set(val *CreateAccountMmpConfigV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccountMmpConfigV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccountMmpConfigV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccountMmpConfigV5Req(val *CreateAccountMmpConfigV5Req) *NullableCreateAccountMmpConfigV5Req {
	return &NullableCreateAccountMmpConfigV5Req{value: val, isSet: true}
}

func (v NullableCreateAccountMmpConfigV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccountMmpConfigV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


