/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotGridAdjustInvestmentV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotGridAdjustInvestmentV5Req{}

// CreateTradingBotGridAdjustInvestmentV5Req struct for CreateTradingBotGridAdjustInvestmentV5Req
type CreateTradingBotGridAdjustInvestmentV5Req struct {
	// Algo ID
	AlgoId string `json:"algoId"`
	// The amount is going to be added
	Amt string `json:"amt"`
}

type _CreateTradingBotGridAdjustInvestmentV5Req CreateTradingBotGridAdjustInvestmentV5Req

// NewCreateTradingBotGridAdjustInvestmentV5Req instantiates a new CreateTradingBotGridAdjustInvestmentV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotGridAdjustInvestmentV5Req(algoId string, amt string) *CreateTradingBotGridAdjustInvestmentV5Req {
	this := CreateTradingBotGridAdjustInvestmentV5Req{}
	this.AlgoId = algoId
	this.Amt = amt
	return &this
}

// NewCreateTradingBotGridAdjustInvestmentV5ReqWithDefaults instantiates a new CreateTradingBotGridAdjustInvestmentV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotGridAdjustInvestmentV5ReqWithDefaults() *CreateTradingBotGridAdjustInvestmentV5Req {
	this := CreateTradingBotGridAdjustInvestmentV5Req{}
	var algoId string = ""
	this.AlgoId = algoId
	var amt string = ""
	this.Amt = amt
	return &this
}

// GetAlgoId returns the AlgoId field value
func (o *CreateTradingBotGridAdjustInvestmentV5Req) GetAlgoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlgoId
}

// GetAlgoIdOk returns a tuple with the AlgoId field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridAdjustInvestmentV5Req) GetAlgoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlgoId, true
}

// SetAlgoId sets field value
func (o *CreateTradingBotGridAdjustInvestmentV5Req) SetAlgoId(v string) {
	o.AlgoId = v
}

// GetAmt returns the Amt field value
func (o *CreateTradingBotGridAdjustInvestmentV5Req) GetAmt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amt
}

// GetAmtOk returns a tuple with the Amt field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridAdjustInvestmentV5Req) GetAmtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amt, true
}

// SetAmt sets field value
func (o *CreateTradingBotGridAdjustInvestmentV5Req) SetAmt(v string) {
	o.Amt = v
}

func (o CreateTradingBotGridAdjustInvestmentV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotGridAdjustInvestmentV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algoId"] = o.AlgoId
	toSerialize["amt"] = o.Amt
	return toSerialize, nil
}

func (o *CreateTradingBotGridAdjustInvestmentV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algoId",
		"amt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotGridAdjustInvestmentV5Req := _CreateTradingBotGridAdjustInvestmentV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotGridAdjustInvestmentV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotGridAdjustInvestmentV5Req(varCreateTradingBotGridAdjustInvestmentV5Req)

	return err
}

type NullableCreateTradingBotGridAdjustInvestmentV5Req struct {
	value *CreateTradingBotGridAdjustInvestmentV5Req
	isSet bool
}

func (v NullableCreateTradingBotGridAdjustInvestmentV5Req) Get() *CreateTradingBotGridAdjustInvestmentV5Req {
	return v.value
}

func (v *NullableCreateTradingBotGridAdjustInvestmentV5Req) Set(val *CreateTradingBotGridAdjustInvestmentV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotGridAdjustInvestmentV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotGridAdjustInvestmentV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotGridAdjustInvestmentV5Req(val *CreateTradingBotGridAdjustInvestmentV5Req) *NullableCreateTradingBotGridAdjustInvestmentV5Req {
	return &NullableCreateTradingBotGridAdjustInvestmentV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotGridAdjustInvestmentV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotGridAdjustInvestmentV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


