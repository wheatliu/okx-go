/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateTradingBotGridMinInvestmentV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotGridMinInvestmentV5RespData{}

// CreateTradingBotGridMinInvestmentV5RespData struct for CreateTradingBotGridMinInvestmentV5RespData
type CreateTradingBotGridMinInvestmentV5RespData struct {
	// Minimum invest Data
	MinInvestmentData []CreateTradingBotGridMinInvestmentV5RespDataMinInvestmentDataInner `json:"minInvestmentData,omitempty"`
	// Single grid trading amount  In terms of `spot grid`, the unit is `quote currency`  In terms of `contract grid`, the unit is `contract`
	SingleAmt *string `json:"singleAmt,omitempty"`
}

// NewCreateTradingBotGridMinInvestmentV5RespData instantiates a new CreateTradingBotGridMinInvestmentV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotGridMinInvestmentV5RespData() *CreateTradingBotGridMinInvestmentV5RespData {
	this := CreateTradingBotGridMinInvestmentV5RespData{}
	var singleAmt string = ""
	this.SingleAmt = &singleAmt
	return &this
}

// NewCreateTradingBotGridMinInvestmentV5RespDataWithDefaults instantiates a new CreateTradingBotGridMinInvestmentV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotGridMinInvestmentV5RespDataWithDefaults() *CreateTradingBotGridMinInvestmentV5RespData {
	this := CreateTradingBotGridMinInvestmentV5RespData{}
	var singleAmt string = ""
	this.SingleAmt = &singleAmt
	return &this
}

// GetMinInvestmentData returns the MinInvestmentData field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5RespData) GetMinInvestmentData() []CreateTradingBotGridMinInvestmentV5RespDataMinInvestmentDataInner {
	if o == nil || IsNil(o.MinInvestmentData) {
		var ret []CreateTradingBotGridMinInvestmentV5RespDataMinInvestmentDataInner
		return ret
	}
	return o.MinInvestmentData
}

// GetMinInvestmentDataOk returns a tuple with the MinInvestmentData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5RespData) GetMinInvestmentDataOk() ([]CreateTradingBotGridMinInvestmentV5RespDataMinInvestmentDataInner, bool) {
	if o == nil || IsNil(o.MinInvestmentData) {
		return nil, false
	}
	return o.MinInvestmentData, true
}

// HasMinInvestmentData returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5RespData) HasMinInvestmentData() bool {
	if o != nil && !IsNil(o.MinInvestmentData) {
		return true
	}

	return false
}

// SetMinInvestmentData gets a reference to the given []CreateTradingBotGridMinInvestmentV5RespDataMinInvestmentDataInner and assigns it to the MinInvestmentData field.
func (o *CreateTradingBotGridMinInvestmentV5RespData) SetMinInvestmentData(v []CreateTradingBotGridMinInvestmentV5RespDataMinInvestmentDataInner) {
	o.MinInvestmentData = v
}

// GetSingleAmt returns the SingleAmt field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5RespData) GetSingleAmt() string {
	if o == nil || IsNil(o.SingleAmt) {
		var ret string
		return ret
	}
	return *o.SingleAmt
}

// GetSingleAmtOk returns a tuple with the SingleAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5RespData) GetSingleAmtOk() (*string, bool) {
	if o == nil || IsNil(o.SingleAmt) {
		return nil, false
	}
	return o.SingleAmt, true
}

// HasSingleAmt returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5RespData) HasSingleAmt() bool {
	if o != nil && !IsNil(o.SingleAmt) {
		return true
	}

	return false
}

// SetSingleAmt gets a reference to the given string and assigns it to the SingleAmt field.
func (o *CreateTradingBotGridMinInvestmentV5RespData) SetSingleAmt(v string) {
	o.SingleAmt = &v
}

func (o CreateTradingBotGridMinInvestmentV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotGridMinInvestmentV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinInvestmentData) {
		toSerialize["minInvestmentData"] = o.MinInvestmentData
	}
	if !IsNil(o.SingleAmt) {
		toSerialize["singleAmt"] = o.SingleAmt
	}
	return toSerialize, nil
}

type NullableCreateTradingBotGridMinInvestmentV5RespData struct {
	value *CreateTradingBotGridMinInvestmentV5RespData
	isSet bool
}

func (v NullableCreateTradingBotGridMinInvestmentV5RespData) Get() *CreateTradingBotGridMinInvestmentV5RespData {
	return v.value
}

func (v *NullableCreateTradingBotGridMinInvestmentV5RespData) Set(val *CreateTradingBotGridMinInvestmentV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotGridMinInvestmentV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotGridMinInvestmentV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotGridMinInvestmentV5RespData(val *CreateTradingBotGridMinInvestmentV5RespData) *NullableCreateTradingBotGridMinInvestmentV5RespData {
	return &NullableCreateTradingBotGridMinInvestmentV5RespData{value: val, isSet: true}
}

func (v NullableCreateTradingBotGridMinInvestmentV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotGridMinInvestmentV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


