/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetRfqCounterpartiesV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRfqCounterpartiesV5RespDataInner{}

// GetRfqCounterpartiesV5RespDataInner struct for GetRfqCounterpartiesV5RespDataInner
type GetRfqCounterpartiesV5RespDataInner struct {
	// A unique identifier of maker which will be publicly visible on the platform. All RFQ and Quote endpoints will use this as the unique counterparty identifier.
	TraderCode *string `json:"traderCode,omitempty"`
	// The long formative username of trader or entity on the platform.
	TraderName *string `json:"traderName,omitempty"`
	// The counterparty type. `LP` refers to API connected auto market makers.
	Type *string `json:"type,omitempty"`
}

// NewGetRfqCounterpartiesV5RespDataInner instantiates a new GetRfqCounterpartiesV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRfqCounterpartiesV5RespDataInner() *GetRfqCounterpartiesV5RespDataInner {
	this := GetRfqCounterpartiesV5RespDataInner{}
	var traderCode string = ""
	this.TraderCode = &traderCode
	var traderName string = ""
	this.TraderName = &traderName
	var type_ string = ""
	this.Type = &type_
	return &this
}

// NewGetRfqCounterpartiesV5RespDataInnerWithDefaults instantiates a new GetRfqCounterpartiesV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRfqCounterpartiesV5RespDataInnerWithDefaults() *GetRfqCounterpartiesV5RespDataInner {
	this := GetRfqCounterpartiesV5RespDataInner{}
	var traderCode string = ""
	this.TraderCode = &traderCode
	var traderName string = ""
	this.TraderName = &traderName
	var type_ string = ""
	this.Type = &type_
	return &this
}

// GetTraderCode returns the TraderCode field value if set, zero value otherwise.
func (o *GetRfqCounterpartiesV5RespDataInner) GetTraderCode() string {
	if o == nil || IsNil(o.TraderCode) {
		var ret string
		return ret
	}
	return *o.TraderCode
}

// GetTraderCodeOk returns a tuple with the TraderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRfqCounterpartiesV5RespDataInner) GetTraderCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TraderCode) {
		return nil, false
	}
	return o.TraderCode, true
}

// HasTraderCode returns a boolean if a field has been set.
func (o *GetRfqCounterpartiesV5RespDataInner) HasTraderCode() bool {
	if o != nil && !IsNil(o.TraderCode) {
		return true
	}

	return false
}

// SetTraderCode gets a reference to the given string and assigns it to the TraderCode field.
func (o *GetRfqCounterpartiesV5RespDataInner) SetTraderCode(v string) {
	o.TraderCode = &v
}

// GetTraderName returns the TraderName field value if set, zero value otherwise.
func (o *GetRfqCounterpartiesV5RespDataInner) GetTraderName() string {
	if o == nil || IsNil(o.TraderName) {
		var ret string
		return ret
	}
	return *o.TraderName
}

// GetTraderNameOk returns a tuple with the TraderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRfqCounterpartiesV5RespDataInner) GetTraderNameOk() (*string, bool) {
	if o == nil || IsNil(o.TraderName) {
		return nil, false
	}
	return o.TraderName, true
}

// HasTraderName returns a boolean if a field has been set.
func (o *GetRfqCounterpartiesV5RespDataInner) HasTraderName() bool {
	if o != nil && !IsNil(o.TraderName) {
		return true
	}

	return false
}

// SetTraderName gets a reference to the given string and assigns it to the TraderName field.
func (o *GetRfqCounterpartiesV5RespDataInner) SetTraderName(v string) {
	o.TraderName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetRfqCounterpartiesV5RespDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRfqCounterpartiesV5RespDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetRfqCounterpartiesV5RespDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetRfqCounterpartiesV5RespDataInner) SetType(v string) {
	o.Type = &v
}

func (o GetRfqCounterpartiesV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRfqCounterpartiesV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TraderCode) {
		toSerialize["traderCode"] = o.TraderCode
	}
	if !IsNil(o.TraderName) {
		toSerialize["traderName"] = o.TraderName
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetRfqCounterpartiesV5RespDataInner struct {
	value *GetRfqCounterpartiesV5RespDataInner
	isSet bool
}

func (v NullableGetRfqCounterpartiesV5RespDataInner) Get() *GetRfqCounterpartiesV5RespDataInner {
	return v.value
}

func (v *NullableGetRfqCounterpartiesV5RespDataInner) Set(val *GetRfqCounterpartiesV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRfqCounterpartiesV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRfqCounterpartiesV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRfqCounterpartiesV5RespDataInner(val *GetRfqCounterpartiesV5RespDataInner) *NullableGetRfqCounterpartiesV5RespDataInner {
	return &NullableGetRfqCounterpartiesV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetRfqCounterpartiesV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRfqCounterpartiesV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


