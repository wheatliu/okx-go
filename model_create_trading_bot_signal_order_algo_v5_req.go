/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotSignalOrderAlgoV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotSignalOrderAlgoV5Req{}

// CreateTradingBotSignalOrderAlgoV5Req struct for CreateTradingBotSignalOrderAlgoV5Req
type CreateTradingBotSignalOrderAlgoV5Req struct {
	// Entry setting
	EntrySettingParam *string `json:"entrySettingParam,omitempty"`
	// Exit setting
	ExitSettingParam *string `json:"exitSettingParam,omitempty"`
	// Whether to include all USDT-margined contract.The default value is `false`. `true`: include `false` : exclude
	IncludeAll *bool `json:"includeAll,omitempty"`
	// Instrument IDs. Single currency or multiple currencies separated with comma. When `includeAll` is `true`, it is ignored
	InstIds *string `json:"instIds,omitempty"`
	// Investment amount
	InvestAmt string `json:"investAmt"`
	// Leverage  Only applicable to `contract signal`
	Lever string `json:"lever"`
	// Price offset ratio, calculate the limit price as a percentage offset from the best bid/ask price.  Only applicable to `subOrdType` is `limit` order
	Ratio *string `json:"ratio,omitempty"`
	// Signal channel Id
	SignalChanId string `json:"signalChanId"`
	// Sub order type `1`：limit order `2`：market order `9`：tradingView signal
	SubOrdType string `json:"subOrdType"`
}

type _CreateTradingBotSignalOrderAlgoV5Req CreateTradingBotSignalOrderAlgoV5Req

// NewCreateTradingBotSignalOrderAlgoV5Req instantiates a new CreateTradingBotSignalOrderAlgoV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotSignalOrderAlgoV5Req(investAmt string, lever string, signalChanId string, subOrdType string) *CreateTradingBotSignalOrderAlgoV5Req {
	this := CreateTradingBotSignalOrderAlgoV5Req{}
	var entrySettingParam string = ""
	this.EntrySettingParam = &entrySettingParam
	var exitSettingParam string = ""
	this.ExitSettingParam = &exitSettingParam
	var instIds string = ""
	this.InstIds = &instIds
	this.InvestAmt = investAmt
	this.Lever = lever
	var ratio string = ""
	this.Ratio = &ratio
	this.SignalChanId = signalChanId
	this.SubOrdType = subOrdType
	return &this
}

// NewCreateTradingBotSignalOrderAlgoV5ReqWithDefaults instantiates a new CreateTradingBotSignalOrderAlgoV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotSignalOrderAlgoV5ReqWithDefaults() *CreateTradingBotSignalOrderAlgoV5Req {
	this := CreateTradingBotSignalOrderAlgoV5Req{}
	var entrySettingParam string = ""
	this.EntrySettingParam = &entrySettingParam
	var exitSettingParam string = ""
	this.ExitSettingParam = &exitSettingParam
	var instIds string = ""
	this.InstIds = &instIds
	var investAmt string = ""
	this.InvestAmt = investAmt
	var lever string = ""
	this.Lever = lever
	var ratio string = ""
	this.Ratio = &ratio
	var signalChanId string = ""
	this.SignalChanId = signalChanId
	var subOrdType string = ""
	this.SubOrdType = subOrdType
	return &this
}

// GetEntrySettingParam returns the EntrySettingParam field value if set, zero value otherwise.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetEntrySettingParam() string {
	if o == nil || IsNil(o.EntrySettingParam) {
		var ret string
		return ret
	}
	return *o.EntrySettingParam
}

// GetEntrySettingParamOk returns a tuple with the EntrySettingParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetEntrySettingParamOk() (*string, bool) {
	if o == nil || IsNil(o.EntrySettingParam) {
		return nil, false
	}
	return o.EntrySettingParam, true
}

// HasEntrySettingParam returns a boolean if a field has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) HasEntrySettingParam() bool {
	if o != nil && !IsNil(o.EntrySettingParam) {
		return true
	}

	return false
}

// SetEntrySettingParam gets a reference to the given string and assigns it to the EntrySettingParam field.
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetEntrySettingParam(v string) {
	o.EntrySettingParam = &v
}

// GetExitSettingParam returns the ExitSettingParam field value if set, zero value otherwise.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetExitSettingParam() string {
	if o == nil || IsNil(o.ExitSettingParam) {
		var ret string
		return ret
	}
	return *o.ExitSettingParam
}

// GetExitSettingParamOk returns a tuple with the ExitSettingParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetExitSettingParamOk() (*string, bool) {
	if o == nil || IsNil(o.ExitSettingParam) {
		return nil, false
	}
	return o.ExitSettingParam, true
}

// HasExitSettingParam returns a boolean if a field has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) HasExitSettingParam() bool {
	if o != nil && !IsNil(o.ExitSettingParam) {
		return true
	}

	return false
}

// SetExitSettingParam gets a reference to the given string and assigns it to the ExitSettingParam field.
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetExitSettingParam(v string) {
	o.ExitSettingParam = &v
}

// GetIncludeAll returns the IncludeAll field value if set, zero value otherwise.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetIncludeAll() bool {
	if o == nil || IsNil(o.IncludeAll) {
		var ret bool
		return ret
	}
	return *o.IncludeAll
}

// GetIncludeAllOk returns a tuple with the IncludeAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetIncludeAllOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeAll) {
		return nil, false
	}
	return o.IncludeAll, true
}

// HasIncludeAll returns a boolean if a field has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) HasIncludeAll() bool {
	if o != nil && !IsNil(o.IncludeAll) {
		return true
	}

	return false
}

// SetIncludeAll gets a reference to the given bool and assigns it to the IncludeAll field.
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetIncludeAll(v bool) {
	o.IncludeAll = &v
}

// GetInstIds returns the InstIds field value if set, zero value otherwise.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetInstIds() string {
	if o == nil || IsNil(o.InstIds) {
		var ret string
		return ret
	}
	return *o.InstIds
}

// GetInstIdsOk returns a tuple with the InstIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetInstIdsOk() (*string, bool) {
	if o == nil || IsNil(o.InstIds) {
		return nil, false
	}
	return o.InstIds, true
}

// HasInstIds returns a boolean if a field has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) HasInstIds() bool {
	if o != nil && !IsNil(o.InstIds) {
		return true
	}

	return false
}

// SetInstIds gets a reference to the given string and assigns it to the InstIds field.
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetInstIds(v string) {
	o.InstIds = &v
}

// GetInvestAmt returns the InvestAmt field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetInvestAmt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvestAmt
}

// GetInvestAmtOk returns a tuple with the InvestAmt field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetInvestAmtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvestAmt, true
}

// SetInvestAmt sets field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetInvestAmt(v string) {
	o.InvestAmt = v
}

// GetLever returns the Lever field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetLever() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Lever
}

// GetLeverOk returns a tuple with the Lever field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetLeverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lever, true
}

// SetLever sets field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetLever(v string) {
	o.Lever = v
}

// GetRatio returns the Ratio field value if set, zero value otherwise.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetRatio() string {
	if o == nil || IsNil(o.Ratio) {
		var ret string
		return ret
	}
	return *o.Ratio
}

// GetRatioOk returns a tuple with the Ratio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetRatioOk() (*string, bool) {
	if o == nil || IsNil(o.Ratio) {
		return nil, false
	}
	return o.Ratio, true
}

// HasRatio returns a boolean if a field has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) HasRatio() bool {
	if o != nil && !IsNil(o.Ratio) {
		return true
	}

	return false
}

// SetRatio gets a reference to the given string and assigns it to the Ratio field.
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetRatio(v string) {
	o.Ratio = &v
}

// GetSignalChanId returns the SignalChanId field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetSignalChanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignalChanId
}

// GetSignalChanIdOk returns a tuple with the SignalChanId field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetSignalChanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignalChanId, true
}

// SetSignalChanId sets field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetSignalChanId(v string) {
	o.SignalChanId = v
}

// GetSubOrdType returns the SubOrdType field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetSubOrdType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubOrdType
}

// GetSubOrdTypeOk returns a tuple with the SubOrdType field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotSignalOrderAlgoV5Req) GetSubOrdTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubOrdType, true
}

// SetSubOrdType sets field value
func (o *CreateTradingBotSignalOrderAlgoV5Req) SetSubOrdType(v string) {
	o.SubOrdType = v
}

func (o CreateTradingBotSignalOrderAlgoV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotSignalOrderAlgoV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntrySettingParam) {
		toSerialize["entrySettingParam"] = o.EntrySettingParam
	}
	if !IsNil(o.ExitSettingParam) {
		toSerialize["exitSettingParam"] = o.ExitSettingParam
	}
	if !IsNil(o.IncludeAll) {
		toSerialize["includeAll"] = o.IncludeAll
	}
	if !IsNil(o.InstIds) {
		toSerialize["instIds"] = o.InstIds
	}
	toSerialize["investAmt"] = o.InvestAmt
	toSerialize["lever"] = o.Lever
	if !IsNil(o.Ratio) {
		toSerialize["ratio"] = o.Ratio
	}
	toSerialize["signalChanId"] = o.SignalChanId
	toSerialize["subOrdType"] = o.SubOrdType
	return toSerialize, nil
}

func (o *CreateTradingBotSignalOrderAlgoV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"investAmt",
		"lever",
		"signalChanId",
		"subOrdType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotSignalOrderAlgoV5Req := _CreateTradingBotSignalOrderAlgoV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotSignalOrderAlgoV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotSignalOrderAlgoV5Req(varCreateTradingBotSignalOrderAlgoV5Req)

	return err
}

type NullableCreateTradingBotSignalOrderAlgoV5Req struct {
	value *CreateTradingBotSignalOrderAlgoV5Req
	isSet bool
}

func (v NullableCreateTradingBotSignalOrderAlgoV5Req) Get() *CreateTradingBotSignalOrderAlgoV5Req {
	return v.value
}

func (v *NullableCreateTradingBotSignalOrderAlgoV5Req) Set(val *CreateTradingBotSignalOrderAlgoV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotSignalOrderAlgoV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotSignalOrderAlgoV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotSignalOrderAlgoV5Req(val *CreateTradingBotSignalOrderAlgoV5Req) *NullableCreateTradingBotSignalOrderAlgoV5Req {
	return &NullableCreateTradingBotSignalOrderAlgoV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotSignalOrderAlgoV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotSignalOrderAlgoV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


