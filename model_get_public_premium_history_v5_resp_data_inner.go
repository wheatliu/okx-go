/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetPublicPremiumHistoryV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPublicPremiumHistoryV5RespDataInner{}

// GetPublicPremiumHistoryV5RespDataInner struct for GetPublicPremiumHistoryV5RespDataInner
type GetPublicPremiumHistoryV5RespDataInner struct {
	// Instrument ID, e.g. `BTC-USDT-SWAP`
	InstId *string `json:"instId,omitempty"`
	// Premium between the mid price of perps market and the index price
	Premium *string `json:"premium,omitempty"`
	// Data generation time, Unix timestamp format in milliseconds, e.g. `1597026383085`
	Ts *string `json:"ts,omitempty"`
}

// NewGetPublicPremiumHistoryV5RespDataInner instantiates a new GetPublicPremiumHistoryV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPublicPremiumHistoryV5RespDataInner() *GetPublicPremiumHistoryV5RespDataInner {
	this := GetPublicPremiumHistoryV5RespDataInner{}
	var instId string = ""
	this.InstId = &instId
	var premium string = ""
	this.Premium = &premium
	var ts string = ""
	this.Ts = &ts
	return &this
}

// NewGetPublicPremiumHistoryV5RespDataInnerWithDefaults instantiates a new GetPublicPremiumHistoryV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPublicPremiumHistoryV5RespDataInnerWithDefaults() *GetPublicPremiumHistoryV5RespDataInner {
	this := GetPublicPremiumHistoryV5RespDataInner{}
	var instId string = ""
	this.InstId = &instId
	var premium string = ""
	this.Premium = &premium
	var ts string = ""
	this.Ts = &ts
	return &this
}

// GetInstId returns the InstId field value if set, zero value otherwise.
func (o *GetPublicPremiumHistoryV5RespDataInner) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicPremiumHistoryV5RespDataInner) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *GetPublicPremiumHistoryV5RespDataInner) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
func (o *GetPublicPremiumHistoryV5RespDataInner) SetInstId(v string) {
	o.InstId = &v
}

// GetPremium returns the Premium field value if set, zero value otherwise.
func (o *GetPublicPremiumHistoryV5RespDataInner) GetPremium() string {
	if o == nil || IsNil(o.Premium) {
		var ret string
		return ret
	}
	return *o.Premium
}

// GetPremiumOk returns a tuple with the Premium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicPremiumHistoryV5RespDataInner) GetPremiumOk() (*string, bool) {
	if o == nil || IsNil(o.Premium) {
		return nil, false
	}
	return o.Premium, true
}

// HasPremium returns a boolean if a field has been set.
func (o *GetPublicPremiumHistoryV5RespDataInner) HasPremium() bool {
	if o != nil && !IsNil(o.Premium) {
		return true
	}

	return false
}

// SetPremium gets a reference to the given string and assigns it to the Premium field.
func (o *GetPublicPremiumHistoryV5RespDataInner) SetPremium(v string) {
	o.Premium = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *GetPublicPremiumHistoryV5RespDataInner) GetTs() string {
	if o == nil || IsNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPublicPremiumHistoryV5RespDataInner) GetTsOk() (*string, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *GetPublicPremiumHistoryV5RespDataInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *GetPublicPremiumHistoryV5RespDataInner) SetTs(v string) {
	o.Ts = &v
}

func (o GetPublicPremiumHistoryV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPublicPremiumHistoryV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstId) {
		toSerialize["instId"] = o.InstId
	}
	if !IsNil(o.Premium) {
		toSerialize["premium"] = o.Premium
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return toSerialize, nil
}

type NullableGetPublicPremiumHistoryV5RespDataInner struct {
	value *GetPublicPremiumHistoryV5RespDataInner
	isSet bool
}

func (v NullableGetPublicPremiumHistoryV5RespDataInner) Get() *GetPublicPremiumHistoryV5RespDataInner {
	return v.value
}

func (v *NullableGetPublicPremiumHistoryV5RespDataInner) Set(val *GetPublicPremiumHistoryV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPublicPremiumHistoryV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPublicPremiumHistoryV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPublicPremiumHistoryV5RespDataInner(val *GetPublicPremiumHistoryV5RespDataInner) *NullableGetPublicPremiumHistoryV5RespDataInner {
	return &NullableGetPublicPremiumHistoryV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetPublicPremiumHistoryV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPublicPremiumHistoryV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


