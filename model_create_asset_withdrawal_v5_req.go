/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateAssetWithdrawalV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetWithdrawalV5Req{}

// CreateAssetWithdrawalV5Req struct for CreateAssetWithdrawalV5Req
type CreateAssetWithdrawalV5Req struct {
	// Withdrawal amount  Withdrawal fee is not included in withdrawal amount. Please reserve sufficient transaction fees when withdrawing.  You can get fee amount by .  For `internal transfer`, transaction fee is always `0`.
	Amt string `json:"amt"`
	// Area code for the phone number, e.g. `86`  If `toAddr` is a phone number, this parameter is required.  Apply to `internal transfer`
	AreaCode *string `json:"areaCode,omitempty"`
	// Currency, e.g. `USDT`
	Ccy string `json:"ccy"`
	// Chain name  There are multiple chains under some currencies, such as `USDT` has `USDT-ERC20`, `USDT-TRC20`  If the parameter is not filled in, the default will be the main chain.  When you withdrawal the non-tradable asset, if the parameter is not filled in, the default will be the unique withdrawal chain.  Apply to `on-chain withdrawal`.  You can get supported chain name by the endpoint of .
	Chain *string `json:"chain,omitempty"`
	// Client-supplied ID  A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.
	ClientId *string `json:"clientId,omitempty"`
	// Withdrawal method  `3`: internal transfer  `4`: on-chain withdrawal
	Dest string `json:"dest"`
	RcvrInfo *CreateAssetWithdrawalV5ReqRcvrInfo `json:"rcvrInfo,omitempty"`
	// `toAddr` should be a trusted address/account.   If your `dest` is `4`, some crypto currency addresses are formatted as `'address:tag'`, e.g. `'ARDOR-7JF3-8F2E-QUWZ-CAN7F:123456'`  If your `dest` is `3`,`toAddr` should be a recipient address which can be email, phone or login account name (account name is only for sub-account).
	ToAddr string `json:"toAddr"`
}

type _CreateAssetWithdrawalV5Req CreateAssetWithdrawalV5Req

// NewCreateAssetWithdrawalV5Req instantiates a new CreateAssetWithdrawalV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetWithdrawalV5Req(amt string, ccy string, dest string, toAddr string) *CreateAssetWithdrawalV5Req {
	this := CreateAssetWithdrawalV5Req{}
	this.Amt = amt
	var areaCode string = ""
	this.AreaCode = &areaCode
	this.Ccy = ccy
	var chain string = ""
	this.Chain = &chain
	var clientId string = ""
	this.ClientId = &clientId
	this.Dest = dest
	this.ToAddr = toAddr
	return &this
}

// NewCreateAssetWithdrawalV5ReqWithDefaults instantiates a new CreateAssetWithdrawalV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetWithdrawalV5ReqWithDefaults() *CreateAssetWithdrawalV5Req {
	this := CreateAssetWithdrawalV5Req{}
	var amt string = ""
	this.Amt = amt
	var areaCode string = ""
	this.AreaCode = &areaCode
	var ccy string = ""
	this.Ccy = ccy
	var chain string = ""
	this.Chain = &chain
	var clientId string = ""
	this.ClientId = &clientId
	var dest string = ""
	this.Dest = dest
	var toAddr string = ""
	this.ToAddr = toAddr
	return &this
}

// GetAmt returns the Amt field value
func (o *CreateAssetWithdrawalV5Req) GetAmt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amt
}

// GetAmtOk returns a tuple with the Amt field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetAmtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amt, true
}

// SetAmt sets field value
func (o *CreateAssetWithdrawalV5Req) SetAmt(v string) {
	o.Amt = v
}

// GetAreaCode returns the AreaCode field value if set, zero value otherwise.
func (o *CreateAssetWithdrawalV5Req) GetAreaCode() string {
	if o == nil || IsNil(o.AreaCode) {
		var ret string
		return ret
	}
	return *o.AreaCode
}

// GetAreaCodeOk returns a tuple with the AreaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetAreaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCode) {
		return nil, false
	}
	return o.AreaCode, true
}

// HasAreaCode returns a boolean if a field has been set.
func (o *CreateAssetWithdrawalV5Req) HasAreaCode() bool {
	if o != nil && !IsNil(o.AreaCode) {
		return true
	}

	return false
}

// SetAreaCode gets a reference to the given string and assigns it to the AreaCode field.
func (o *CreateAssetWithdrawalV5Req) SetAreaCode(v string) {
	o.AreaCode = &v
}

// GetCcy returns the Ccy field value
func (o *CreateAssetWithdrawalV5Req) GetCcy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetCcyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ccy, true
}

// SetCcy sets field value
func (o *CreateAssetWithdrawalV5Req) SetCcy(v string) {
	o.Ccy = v
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *CreateAssetWithdrawalV5Req) GetChain() string {
	if o == nil || IsNil(o.Chain) {
		var ret string
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetChainOk() (*string, bool) {
	if o == nil || IsNil(o.Chain) {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *CreateAssetWithdrawalV5Req) HasChain() bool {
	if o != nil && !IsNil(o.Chain) {
		return true
	}

	return false
}

// SetChain gets a reference to the given string and assigns it to the Chain field.
func (o *CreateAssetWithdrawalV5Req) SetChain(v string) {
	o.Chain = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CreateAssetWithdrawalV5Req) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CreateAssetWithdrawalV5Req) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CreateAssetWithdrawalV5Req) SetClientId(v string) {
	o.ClientId = &v
}

// GetDest returns the Dest field value
func (o *CreateAssetWithdrawalV5Req) GetDest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dest
}

// GetDestOk returns a tuple with the Dest field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetDestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dest, true
}

// SetDest sets field value
func (o *CreateAssetWithdrawalV5Req) SetDest(v string) {
	o.Dest = v
}

// GetRcvrInfo returns the RcvrInfo field value if set, zero value otherwise.
func (o *CreateAssetWithdrawalV5Req) GetRcvrInfo() CreateAssetWithdrawalV5ReqRcvrInfo {
	if o == nil || IsNil(o.RcvrInfo) {
		var ret CreateAssetWithdrawalV5ReqRcvrInfo
		return ret
	}
	return *o.RcvrInfo
}

// GetRcvrInfoOk returns a tuple with the RcvrInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetRcvrInfoOk() (*CreateAssetWithdrawalV5ReqRcvrInfo, bool) {
	if o == nil || IsNil(o.RcvrInfo) {
		return nil, false
	}
	return o.RcvrInfo, true
}

// HasRcvrInfo returns a boolean if a field has been set.
func (o *CreateAssetWithdrawalV5Req) HasRcvrInfo() bool {
	if o != nil && !IsNil(o.RcvrInfo) {
		return true
	}

	return false
}

// SetRcvrInfo gets a reference to the given CreateAssetWithdrawalV5ReqRcvrInfo and assigns it to the RcvrInfo field.
func (o *CreateAssetWithdrawalV5Req) SetRcvrInfo(v CreateAssetWithdrawalV5ReqRcvrInfo) {
	o.RcvrInfo = &v
}

// GetToAddr returns the ToAddr field value
func (o *CreateAssetWithdrawalV5Req) GetToAddr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAddr
}

// GetToAddrOk returns a tuple with the ToAddr field value
// and a boolean to check if the value has been set.
func (o *CreateAssetWithdrawalV5Req) GetToAddrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddr, true
}

// SetToAddr sets field value
func (o *CreateAssetWithdrawalV5Req) SetToAddr(v string) {
	o.ToAddr = v
}

func (o CreateAssetWithdrawalV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetWithdrawalV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amt"] = o.Amt
	if !IsNil(o.AreaCode) {
		toSerialize["areaCode"] = o.AreaCode
	}
	toSerialize["ccy"] = o.Ccy
	if !IsNil(o.Chain) {
		toSerialize["chain"] = o.Chain
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	toSerialize["dest"] = o.Dest
	if !IsNil(o.RcvrInfo) {
		toSerialize["rcvrInfo"] = o.RcvrInfo
	}
	toSerialize["toAddr"] = o.ToAddr
	return toSerialize, nil
}

func (o *CreateAssetWithdrawalV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amt",
		"ccy",
		"dest",
		"toAddr",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAssetWithdrawalV5Req := _CreateAssetWithdrawalV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAssetWithdrawalV5Req)

	if err != nil {
		return err
	}

	*o = CreateAssetWithdrawalV5Req(varCreateAssetWithdrawalV5Req)

	return err
}

type NullableCreateAssetWithdrawalV5Req struct {
	value *CreateAssetWithdrawalV5Req
	isSet bool
}

func (v NullableCreateAssetWithdrawalV5Req) Get() *CreateAssetWithdrawalV5Req {
	return v.value
}

func (v *NullableCreateAssetWithdrawalV5Req) Set(val *CreateAssetWithdrawalV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetWithdrawalV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetWithdrawalV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetWithdrawalV5Req(val *CreateAssetWithdrawalV5Req) *NullableCreateAssetWithdrawalV5Req {
	return &NullableCreateAssetWithdrawalV5Req{value: val, isSet: true}
}

func (v NullableCreateAssetWithdrawalV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetWithdrawalV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


