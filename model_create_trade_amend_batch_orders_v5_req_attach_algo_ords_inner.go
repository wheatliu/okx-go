/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner{}

// CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner struct for CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner
type CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner struct {
	// Whether to enable Cost-price SL. Only applicable to SL order of split TPs.   `0`: disable, the default value   `1`: Enable
	AmendPxOnTriggerType *string `json:"amendPxOnTriggerType,omitempty"`
	// Client-supplied Algo ID when placing order attaching TP/SL  A combination of case-sensitive alphanumerics, all numbers, or all letters of up to 32 characters.  It will be posted to `algoClOrdId` when placing TP/SL order once the general order is filled completely.
	AttachAlgoClOrdId *string `json:"attachAlgoClOrdId,omitempty"`
	// The order ID of attached TP/SL order. It can be used to identity the TP/SL order when amending. It will not be posted to algoId when placing TP/SL order after the general order is filled completely.
	AttachAlgoId *string `json:"attachAlgoId,omitempty"`
	// Stop-loss order price  If the price is -1, stop-loss will be executed at the market price.
	NewSlOrdPx *string `json:"newSlOrdPx,omitempty"`
	// Stop-loss trigger price  Either the stop loss trigger price or order price is 0, it means that the stop loss is deleted.
	NewSlTriggerPx *string `json:"newSlTriggerPx,omitempty"`
	// Stop-loss trigger price type  `last`: last price   `index`: index price   `mark`: mark price  Only applicable to `FUTURES`/`SWAP`  If you want to add the stop-loss, this parameter is required
	NewSlTriggerPxType *string `json:"newSlTriggerPxType,omitempty"`
	// TP order kind  `condition`  `limit`
	NewTpOrdKind *string `json:"newTpOrdKind,omitempty"`
	// Take-profit order price  If the price is -1, take-profit will be executed at the market price.
	NewTpOrdPx *string `json:"newTpOrdPx,omitempty"`
	// Take-profit trigger price.   Either the take profit trigger price or order price is 0, it means that the take profit is deleted.
	NewTpTriggerPx *string `json:"newTpTriggerPx,omitempty"`
	// Take-profit trigger price type  `last`: last price   `index`: index price   `mark`: mark price  Only applicable to `FUTURES`/`SWAP`  If you want to add the take-profit, this parameter is required
	NewTpTriggerPxType *string `json:"newTpTriggerPxType,omitempty"`
	// New size. Only applicable to TP order of split TPs, and it is required for TP order of split TPs
	Sz *string `json:"sz,omitempty"`
}

// NewCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner instantiates a new CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner() *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner {
	this := CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner{}
	var amendPxOnTriggerType string = ""
	this.AmendPxOnTriggerType = &amendPxOnTriggerType
	var attachAlgoClOrdId string = ""
	this.AttachAlgoClOrdId = &attachAlgoClOrdId
	var attachAlgoId string = ""
	this.AttachAlgoId = &attachAlgoId
	var newSlOrdPx string = ""
	this.NewSlOrdPx = &newSlOrdPx
	var newSlTriggerPx string = ""
	this.NewSlTriggerPx = &newSlTriggerPx
	var newSlTriggerPxType string = ""
	this.NewSlTriggerPxType = &newSlTriggerPxType
	var newTpOrdKind string = ""
	this.NewTpOrdKind = &newTpOrdKind
	var newTpOrdPx string = ""
	this.NewTpOrdPx = &newTpOrdPx
	var newTpTriggerPx string = ""
	this.NewTpTriggerPx = &newTpTriggerPx
	var newTpTriggerPxType string = ""
	this.NewTpTriggerPxType = &newTpTriggerPxType
	var sz string = ""
	this.Sz = &sz
	return &this
}

// NewCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInnerWithDefaults instantiates a new CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInnerWithDefaults() *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner {
	this := CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner{}
	var amendPxOnTriggerType string = ""
	this.AmendPxOnTriggerType = &amendPxOnTriggerType
	var attachAlgoClOrdId string = ""
	this.AttachAlgoClOrdId = &attachAlgoClOrdId
	var attachAlgoId string = ""
	this.AttachAlgoId = &attachAlgoId
	var newSlOrdPx string = ""
	this.NewSlOrdPx = &newSlOrdPx
	var newSlTriggerPx string = ""
	this.NewSlTriggerPx = &newSlTriggerPx
	var newSlTriggerPxType string = ""
	this.NewSlTriggerPxType = &newSlTriggerPxType
	var newTpOrdKind string = ""
	this.NewTpOrdKind = &newTpOrdKind
	var newTpOrdPx string = ""
	this.NewTpOrdPx = &newTpOrdPx
	var newTpTriggerPx string = ""
	this.NewTpTriggerPx = &newTpTriggerPx
	var newTpTriggerPxType string = ""
	this.NewTpTriggerPxType = &newTpTriggerPxType
	var sz string = ""
	this.Sz = &sz
	return &this
}

// GetAmendPxOnTriggerType returns the AmendPxOnTriggerType field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetAmendPxOnTriggerType() string {
	if o == nil || IsNil(o.AmendPxOnTriggerType) {
		var ret string
		return ret
	}
	return *o.AmendPxOnTriggerType
}

// GetAmendPxOnTriggerTypeOk returns a tuple with the AmendPxOnTriggerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetAmendPxOnTriggerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AmendPxOnTriggerType) {
		return nil, false
	}
	return o.AmendPxOnTriggerType, true
}

// HasAmendPxOnTriggerType returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasAmendPxOnTriggerType() bool {
	if o != nil && !IsNil(o.AmendPxOnTriggerType) {
		return true
	}

	return false
}

// SetAmendPxOnTriggerType gets a reference to the given string and assigns it to the AmendPxOnTriggerType field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetAmendPxOnTriggerType(v string) {
	o.AmendPxOnTriggerType = &v
}

// GetAttachAlgoClOrdId returns the AttachAlgoClOrdId field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetAttachAlgoClOrdId() string {
	if o == nil || IsNil(o.AttachAlgoClOrdId) {
		var ret string
		return ret
	}
	return *o.AttachAlgoClOrdId
}

// GetAttachAlgoClOrdIdOk returns a tuple with the AttachAlgoClOrdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetAttachAlgoClOrdIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttachAlgoClOrdId) {
		return nil, false
	}
	return o.AttachAlgoClOrdId, true
}

// HasAttachAlgoClOrdId returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasAttachAlgoClOrdId() bool {
	if o != nil && !IsNil(o.AttachAlgoClOrdId) {
		return true
	}

	return false
}

// SetAttachAlgoClOrdId gets a reference to the given string and assigns it to the AttachAlgoClOrdId field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetAttachAlgoClOrdId(v string) {
	o.AttachAlgoClOrdId = &v
}

// GetAttachAlgoId returns the AttachAlgoId field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetAttachAlgoId() string {
	if o == nil || IsNil(o.AttachAlgoId) {
		var ret string
		return ret
	}
	return *o.AttachAlgoId
}

// GetAttachAlgoIdOk returns a tuple with the AttachAlgoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetAttachAlgoIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttachAlgoId) {
		return nil, false
	}
	return o.AttachAlgoId, true
}

// HasAttachAlgoId returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasAttachAlgoId() bool {
	if o != nil && !IsNil(o.AttachAlgoId) {
		return true
	}

	return false
}

// SetAttachAlgoId gets a reference to the given string and assigns it to the AttachAlgoId field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetAttachAlgoId(v string) {
	o.AttachAlgoId = &v
}

// GetNewSlOrdPx returns the NewSlOrdPx field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewSlOrdPx() string {
	if o == nil || IsNil(o.NewSlOrdPx) {
		var ret string
		return ret
	}
	return *o.NewSlOrdPx
}

// GetNewSlOrdPxOk returns a tuple with the NewSlOrdPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewSlOrdPxOk() (*string, bool) {
	if o == nil || IsNil(o.NewSlOrdPx) {
		return nil, false
	}
	return o.NewSlOrdPx, true
}

// HasNewSlOrdPx returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasNewSlOrdPx() bool {
	if o != nil && !IsNil(o.NewSlOrdPx) {
		return true
	}

	return false
}

// SetNewSlOrdPx gets a reference to the given string and assigns it to the NewSlOrdPx field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetNewSlOrdPx(v string) {
	o.NewSlOrdPx = &v
}

// GetNewSlTriggerPx returns the NewSlTriggerPx field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewSlTriggerPx() string {
	if o == nil || IsNil(o.NewSlTriggerPx) {
		var ret string
		return ret
	}
	return *o.NewSlTriggerPx
}

// GetNewSlTriggerPxOk returns a tuple with the NewSlTriggerPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewSlTriggerPxOk() (*string, bool) {
	if o == nil || IsNil(o.NewSlTriggerPx) {
		return nil, false
	}
	return o.NewSlTriggerPx, true
}

// HasNewSlTriggerPx returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasNewSlTriggerPx() bool {
	if o != nil && !IsNil(o.NewSlTriggerPx) {
		return true
	}

	return false
}

// SetNewSlTriggerPx gets a reference to the given string and assigns it to the NewSlTriggerPx field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetNewSlTriggerPx(v string) {
	o.NewSlTriggerPx = &v
}

// GetNewSlTriggerPxType returns the NewSlTriggerPxType field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewSlTriggerPxType() string {
	if o == nil || IsNil(o.NewSlTriggerPxType) {
		var ret string
		return ret
	}
	return *o.NewSlTriggerPxType
}

// GetNewSlTriggerPxTypeOk returns a tuple with the NewSlTriggerPxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewSlTriggerPxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NewSlTriggerPxType) {
		return nil, false
	}
	return o.NewSlTriggerPxType, true
}

// HasNewSlTriggerPxType returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasNewSlTriggerPxType() bool {
	if o != nil && !IsNil(o.NewSlTriggerPxType) {
		return true
	}

	return false
}

// SetNewSlTriggerPxType gets a reference to the given string and assigns it to the NewSlTriggerPxType field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetNewSlTriggerPxType(v string) {
	o.NewSlTriggerPxType = &v
}

// GetNewTpOrdKind returns the NewTpOrdKind field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpOrdKind() string {
	if o == nil || IsNil(o.NewTpOrdKind) {
		var ret string
		return ret
	}
	return *o.NewTpOrdKind
}

// GetNewTpOrdKindOk returns a tuple with the NewTpOrdKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpOrdKindOk() (*string, bool) {
	if o == nil || IsNil(o.NewTpOrdKind) {
		return nil, false
	}
	return o.NewTpOrdKind, true
}

// HasNewTpOrdKind returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasNewTpOrdKind() bool {
	if o != nil && !IsNil(o.NewTpOrdKind) {
		return true
	}

	return false
}

// SetNewTpOrdKind gets a reference to the given string and assigns it to the NewTpOrdKind field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetNewTpOrdKind(v string) {
	o.NewTpOrdKind = &v
}

// GetNewTpOrdPx returns the NewTpOrdPx field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpOrdPx() string {
	if o == nil || IsNil(o.NewTpOrdPx) {
		var ret string
		return ret
	}
	return *o.NewTpOrdPx
}

// GetNewTpOrdPxOk returns a tuple with the NewTpOrdPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpOrdPxOk() (*string, bool) {
	if o == nil || IsNil(o.NewTpOrdPx) {
		return nil, false
	}
	return o.NewTpOrdPx, true
}

// HasNewTpOrdPx returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasNewTpOrdPx() bool {
	if o != nil && !IsNil(o.NewTpOrdPx) {
		return true
	}

	return false
}

// SetNewTpOrdPx gets a reference to the given string and assigns it to the NewTpOrdPx field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetNewTpOrdPx(v string) {
	o.NewTpOrdPx = &v
}

// GetNewTpTriggerPx returns the NewTpTriggerPx field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpTriggerPx() string {
	if o == nil || IsNil(o.NewTpTriggerPx) {
		var ret string
		return ret
	}
	return *o.NewTpTriggerPx
}

// GetNewTpTriggerPxOk returns a tuple with the NewTpTriggerPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpTriggerPxOk() (*string, bool) {
	if o == nil || IsNil(o.NewTpTriggerPx) {
		return nil, false
	}
	return o.NewTpTriggerPx, true
}

// HasNewTpTriggerPx returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasNewTpTriggerPx() bool {
	if o != nil && !IsNil(o.NewTpTriggerPx) {
		return true
	}

	return false
}

// SetNewTpTriggerPx gets a reference to the given string and assigns it to the NewTpTriggerPx field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetNewTpTriggerPx(v string) {
	o.NewTpTriggerPx = &v
}

// GetNewTpTriggerPxType returns the NewTpTriggerPxType field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpTriggerPxType() string {
	if o == nil || IsNil(o.NewTpTriggerPxType) {
		var ret string
		return ret
	}
	return *o.NewTpTriggerPxType
}

// GetNewTpTriggerPxTypeOk returns a tuple with the NewTpTriggerPxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetNewTpTriggerPxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NewTpTriggerPxType) {
		return nil, false
	}
	return o.NewTpTriggerPxType, true
}

// HasNewTpTriggerPxType returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasNewTpTriggerPxType() bool {
	if o != nil && !IsNil(o.NewTpTriggerPxType) {
		return true
	}

	return false
}

// SetNewTpTriggerPxType gets a reference to the given string and assigns it to the NewTpTriggerPxType field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetNewTpTriggerPxType(v string) {
	o.NewTpTriggerPxType = &v
}

// GetSz returns the Sz field value if set, zero value otherwise.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetSz() string {
	if o == nil || IsNil(o.Sz) {
		var ret string
		return ret
	}
	return *o.Sz
}

// GetSzOk returns a tuple with the Sz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) GetSzOk() (*string, bool) {
	if o == nil || IsNil(o.Sz) {
		return nil, false
	}
	return o.Sz, true
}

// HasSz returns a boolean if a field has been set.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) HasSz() bool {
	if o != nil && !IsNil(o.Sz) {
		return true
	}

	return false
}

// SetSz gets a reference to the given string and assigns it to the Sz field.
func (o *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) SetSz(v string) {
	o.Sz = &v
}

func (o CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmendPxOnTriggerType) {
		toSerialize["amendPxOnTriggerType"] = o.AmendPxOnTriggerType
	}
	if !IsNil(o.AttachAlgoClOrdId) {
		toSerialize["attachAlgoClOrdId"] = o.AttachAlgoClOrdId
	}
	if !IsNil(o.AttachAlgoId) {
		toSerialize["attachAlgoId"] = o.AttachAlgoId
	}
	if !IsNil(o.NewSlOrdPx) {
		toSerialize["newSlOrdPx"] = o.NewSlOrdPx
	}
	if !IsNil(o.NewSlTriggerPx) {
		toSerialize["newSlTriggerPx"] = o.NewSlTriggerPx
	}
	if !IsNil(o.NewSlTriggerPxType) {
		toSerialize["newSlTriggerPxType"] = o.NewSlTriggerPxType
	}
	if !IsNil(o.NewTpOrdKind) {
		toSerialize["newTpOrdKind"] = o.NewTpOrdKind
	}
	if !IsNil(o.NewTpOrdPx) {
		toSerialize["newTpOrdPx"] = o.NewTpOrdPx
	}
	if !IsNil(o.NewTpTriggerPx) {
		toSerialize["newTpTriggerPx"] = o.NewTpTriggerPx
	}
	if !IsNil(o.NewTpTriggerPxType) {
		toSerialize["newTpTriggerPxType"] = o.NewTpTriggerPxType
	}
	if !IsNil(o.Sz) {
		toSerialize["sz"] = o.Sz
	}
	return toSerialize, nil
}

type NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner struct {
	value *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner
	isSet bool
}

func (v NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) Get() *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner {
	return v.value
}

func (v *NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) Set(val *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner(val *CreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) *NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner {
	return &NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner{value: val, isSet: true}
}

func (v NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradeAmendBatchOrdersV5ReqAttachAlgoOrdsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


