/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetCopytradingPublicSubpositionsHistoryV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCopytradingPublicSubpositionsHistoryV5RespData{}

// GetCopytradingPublicSubpositionsHistoryV5RespData struct for GetCopytradingPublicSubpositionsHistoryV5RespData
type GetCopytradingPublicSubpositionsHistoryV5RespData struct {
	// Currency
	Ccy *string `json:"ccy,omitempty"`
	// Average price of closing position
	CloseAvgPx *string `json:"closeAvgPx,omitempty"`
	// Time of closing position
	CloseTime *string `json:"closeTime,omitempty"`
	// Instrument ID, e.g. BTC-USDT-SWAP
	InstId *string `json:"instId,omitempty"`
	// Instrument type
	InstType *string `json:"instType,omitempty"`
	// Leverage
	Lever *string `json:"lever,omitempty"`
	// Margin
	Margin *string `json:"margin,omitempty"`
	// Margin mode. `cross` `isolated`
	MgnMode *string `json:"mgnMode,omitempty"`
	// Average open price
	OpenAvgPx *string `json:"openAvgPx,omitempty"`
	// Time of opening
	OpenTime *string `json:"openTime,omitempty"`
	// Profit and loss
	Pnl *string `json:"pnl,omitempty"`
	// P&L ratio
	PnlRatio *string `json:"pnlRatio,omitempty"`
	// Position side  `long`   `short`   `net`  (long position has positive subPos; short position has negative subPos)
	PosSide *string `json:"posSide,omitempty"`
	// Quantity of positions
	SubPos *string `json:"subPos,omitempty"`
	// Lead position ID
	SubPosId *string `json:"subPosId,omitempty"`
	// Lead trader unique code
	UniqueCode *string `json:"uniqueCode,omitempty"`
}

// NewGetCopytradingPublicSubpositionsHistoryV5RespData instantiates a new GetCopytradingPublicSubpositionsHistoryV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCopytradingPublicSubpositionsHistoryV5RespData() *GetCopytradingPublicSubpositionsHistoryV5RespData {
	this := GetCopytradingPublicSubpositionsHistoryV5RespData{}
	var ccy string = ""
	this.Ccy = &ccy
	var closeAvgPx string = ""
	this.CloseAvgPx = &closeAvgPx
	var closeTime string = ""
	this.CloseTime = &closeTime
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var margin string = ""
	this.Margin = &margin
	var mgnMode string = ""
	this.MgnMode = &mgnMode
	var openAvgPx string = ""
	this.OpenAvgPx = &openAvgPx
	var openTime string = ""
	this.OpenTime = &openTime
	var pnl string = ""
	this.Pnl = &pnl
	var pnlRatio string = ""
	this.PnlRatio = &pnlRatio
	var posSide string = ""
	this.PosSide = &posSide
	var subPos string = ""
	this.SubPos = &subPos
	var subPosId string = ""
	this.SubPosId = &subPosId
	var uniqueCode string = ""
	this.UniqueCode = &uniqueCode
	return &this
}

// NewGetCopytradingPublicSubpositionsHistoryV5RespDataWithDefaults instantiates a new GetCopytradingPublicSubpositionsHistoryV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCopytradingPublicSubpositionsHistoryV5RespDataWithDefaults() *GetCopytradingPublicSubpositionsHistoryV5RespData {
	this := GetCopytradingPublicSubpositionsHistoryV5RespData{}
	var ccy string = ""
	this.Ccy = &ccy
	var closeAvgPx string = ""
	this.CloseAvgPx = &closeAvgPx
	var closeTime string = ""
	this.CloseTime = &closeTime
	var instId string = ""
	this.InstId = &instId
	var instType string = ""
	this.InstType = &instType
	var lever string = ""
	this.Lever = &lever
	var margin string = ""
	this.Margin = &margin
	var mgnMode string = ""
	this.MgnMode = &mgnMode
	var openAvgPx string = ""
	this.OpenAvgPx = &openAvgPx
	var openTime string = ""
	this.OpenTime = &openTime
	var pnl string = ""
	this.Pnl = &pnl
	var pnlRatio string = ""
	this.PnlRatio = &pnlRatio
	var posSide string = ""
	this.PosSide = &posSide
	var subPos string = ""
	this.SubPos = &subPos
	var subPosId string = ""
	this.SubPosId = &subPosId
	var uniqueCode string = ""
	this.UniqueCode = &uniqueCode
	return &this
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetCcy(v string) {
	o.Ccy = &v
}

// GetCloseAvgPx returns the CloseAvgPx field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetCloseAvgPx() string {
	if o == nil || IsNil(o.CloseAvgPx) {
		var ret string
		return ret
	}
	return *o.CloseAvgPx
}

// GetCloseAvgPxOk returns a tuple with the CloseAvgPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetCloseAvgPxOk() (*string, bool) {
	if o == nil || IsNil(o.CloseAvgPx) {
		return nil, false
	}
	return o.CloseAvgPx, true
}

// HasCloseAvgPx returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasCloseAvgPx() bool {
	if o != nil && !IsNil(o.CloseAvgPx) {
		return true
	}

	return false
}

// SetCloseAvgPx gets a reference to the given string and assigns it to the CloseAvgPx field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetCloseAvgPx(v string) {
	o.CloseAvgPx = &v
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetCloseTime() string {
	if o == nil || IsNil(o.CloseTime) {
		var ret string
		return ret
	}
	return *o.CloseTime
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetCloseTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CloseTime) {
		return nil, false
	}
	return o.CloseTime, true
}

// HasCloseTime returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasCloseTime() bool {
	if o != nil && !IsNil(o.CloseTime) {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given string and assigns it to the CloseTime field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetCloseTime(v string) {
	o.CloseTime = &v
}

// GetInstId returns the InstId field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetInstId() string {
	if o == nil || IsNil(o.InstId) {
		var ret string
		return ret
	}
	return *o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetInstIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstId) {
		return nil, false
	}
	return o.InstId, true
}

// HasInstId returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasInstId() bool {
	if o != nil && !IsNil(o.InstId) {
		return true
	}

	return false
}

// SetInstId gets a reference to the given string and assigns it to the InstId field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetInstId(v string) {
	o.InstId = &v
}

// GetInstType returns the InstType field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetInstType() string {
	if o == nil || IsNil(o.InstType) {
		var ret string
		return ret
	}
	return *o.InstType
}

// GetInstTypeOk returns a tuple with the InstType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetInstTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstType) {
		return nil, false
	}
	return o.InstType, true
}

// HasInstType returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasInstType() bool {
	if o != nil && !IsNil(o.InstType) {
		return true
	}

	return false
}

// SetInstType gets a reference to the given string and assigns it to the InstType field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetInstType(v string) {
	o.InstType = &v
}

// GetLever returns the Lever field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetLever() string {
	if o == nil || IsNil(o.Lever) {
		var ret string
		return ret
	}
	return *o.Lever
}

// GetLeverOk returns a tuple with the Lever field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetLeverOk() (*string, bool) {
	if o == nil || IsNil(o.Lever) {
		return nil, false
	}
	return o.Lever, true
}

// HasLever returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasLever() bool {
	if o != nil && !IsNil(o.Lever) {
		return true
	}

	return false
}

// SetLever gets a reference to the given string and assigns it to the Lever field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetLever(v string) {
	o.Lever = &v
}

// GetMargin returns the Margin field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetMargin() string {
	if o == nil || IsNil(o.Margin) {
		var ret string
		return ret
	}
	return *o.Margin
}

// GetMarginOk returns a tuple with the Margin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetMarginOk() (*string, bool) {
	if o == nil || IsNil(o.Margin) {
		return nil, false
	}
	return o.Margin, true
}

// HasMargin returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasMargin() bool {
	if o != nil && !IsNil(o.Margin) {
		return true
	}

	return false
}

// SetMargin gets a reference to the given string and assigns it to the Margin field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetMargin(v string) {
	o.Margin = &v
}

// GetMgnMode returns the MgnMode field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetMgnMode() string {
	if o == nil || IsNil(o.MgnMode) {
		var ret string
		return ret
	}
	return *o.MgnMode
}

// GetMgnModeOk returns a tuple with the MgnMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetMgnModeOk() (*string, bool) {
	if o == nil || IsNil(o.MgnMode) {
		return nil, false
	}
	return o.MgnMode, true
}

// HasMgnMode returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasMgnMode() bool {
	if o != nil && !IsNil(o.MgnMode) {
		return true
	}

	return false
}

// SetMgnMode gets a reference to the given string and assigns it to the MgnMode field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetMgnMode(v string) {
	o.MgnMode = &v
}

// GetOpenAvgPx returns the OpenAvgPx field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetOpenAvgPx() string {
	if o == nil || IsNil(o.OpenAvgPx) {
		var ret string
		return ret
	}
	return *o.OpenAvgPx
}

// GetOpenAvgPxOk returns a tuple with the OpenAvgPx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetOpenAvgPxOk() (*string, bool) {
	if o == nil || IsNil(o.OpenAvgPx) {
		return nil, false
	}
	return o.OpenAvgPx, true
}

// HasOpenAvgPx returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasOpenAvgPx() bool {
	if o != nil && !IsNil(o.OpenAvgPx) {
		return true
	}

	return false
}

// SetOpenAvgPx gets a reference to the given string and assigns it to the OpenAvgPx field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetOpenAvgPx(v string) {
	o.OpenAvgPx = &v
}

// GetOpenTime returns the OpenTime field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetOpenTime() string {
	if o == nil || IsNil(o.OpenTime) {
		var ret string
		return ret
	}
	return *o.OpenTime
}

// GetOpenTimeOk returns a tuple with the OpenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetOpenTimeOk() (*string, bool) {
	if o == nil || IsNil(o.OpenTime) {
		return nil, false
	}
	return o.OpenTime, true
}

// HasOpenTime returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasOpenTime() bool {
	if o != nil && !IsNil(o.OpenTime) {
		return true
	}

	return false
}

// SetOpenTime gets a reference to the given string and assigns it to the OpenTime field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetOpenTime(v string) {
	o.OpenTime = &v
}

// GetPnl returns the Pnl field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetPnl() string {
	if o == nil || IsNil(o.Pnl) {
		var ret string
		return ret
	}
	return *o.Pnl
}

// GetPnlOk returns a tuple with the Pnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetPnlOk() (*string, bool) {
	if o == nil || IsNil(o.Pnl) {
		return nil, false
	}
	return o.Pnl, true
}

// HasPnl returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasPnl() bool {
	if o != nil && !IsNil(o.Pnl) {
		return true
	}

	return false
}

// SetPnl gets a reference to the given string and assigns it to the Pnl field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetPnl(v string) {
	o.Pnl = &v
}

// GetPnlRatio returns the PnlRatio field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetPnlRatio() string {
	if o == nil || IsNil(o.PnlRatio) {
		var ret string
		return ret
	}
	return *o.PnlRatio
}

// GetPnlRatioOk returns a tuple with the PnlRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetPnlRatioOk() (*string, bool) {
	if o == nil || IsNil(o.PnlRatio) {
		return nil, false
	}
	return o.PnlRatio, true
}

// HasPnlRatio returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasPnlRatio() bool {
	if o != nil && !IsNil(o.PnlRatio) {
		return true
	}

	return false
}

// SetPnlRatio gets a reference to the given string and assigns it to the PnlRatio field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetPnlRatio(v string) {
	o.PnlRatio = &v
}

// GetPosSide returns the PosSide field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetPosSide() string {
	if o == nil || IsNil(o.PosSide) {
		var ret string
		return ret
	}
	return *o.PosSide
}

// GetPosSideOk returns a tuple with the PosSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetPosSideOk() (*string, bool) {
	if o == nil || IsNil(o.PosSide) {
		return nil, false
	}
	return o.PosSide, true
}

// HasPosSide returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasPosSide() bool {
	if o != nil && !IsNil(o.PosSide) {
		return true
	}

	return false
}

// SetPosSide gets a reference to the given string and assigns it to the PosSide field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetPosSide(v string) {
	o.PosSide = &v
}

// GetSubPos returns the SubPos field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetSubPos() string {
	if o == nil || IsNil(o.SubPos) {
		var ret string
		return ret
	}
	return *o.SubPos
}

// GetSubPosOk returns a tuple with the SubPos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetSubPosOk() (*string, bool) {
	if o == nil || IsNil(o.SubPos) {
		return nil, false
	}
	return o.SubPos, true
}

// HasSubPos returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasSubPos() bool {
	if o != nil && !IsNil(o.SubPos) {
		return true
	}

	return false
}

// SetSubPos gets a reference to the given string and assigns it to the SubPos field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetSubPos(v string) {
	o.SubPos = &v
}

// GetSubPosId returns the SubPosId field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetSubPosId() string {
	if o == nil || IsNil(o.SubPosId) {
		var ret string
		return ret
	}
	return *o.SubPosId
}

// GetSubPosIdOk returns a tuple with the SubPosId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetSubPosIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubPosId) {
		return nil, false
	}
	return o.SubPosId, true
}

// HasSubPosId returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasSubPosId() bool {
	if o != nil && !IsNil(o.SubPosId) {
		return true
	}

	return false
}

// SetSubPosId gets a reference to the given string and assigns it to the SubPosId field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetSubPosId(v string) {
	o.SubPosId = &v
}

// GetUniqueCode returns the UniqueCode field value if set, zero value otherwise.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetUniqueCode() string {
	if o == nil || IsNil(o.UniqueCode) {
		var ret string
		return ret
	}
	return *o.UniqueCode
}

// GetUniqueCodeOk returns a tuple with the UniqueCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) GetUniqueCodeOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueCode) {
		return nil, false
	}
	return o.UniqueCode, true
}

// HasUniqueCode returns a boolean if a field has been set.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) HasUniqueCode() bool {
	if o != nil && !IsNil(o.UniqueCode) {
		return true
	}

	return false
}

// SetUniqueCode gets a reference to the given string and assigns it to the UniqueCode field.
func (o *GetCopytradingPublicSubpositionsHistoryV5RespData) SetUniqueCode(v string) {
	o.UniqueCode = &v
}

func (o GetCopytradingPublicSubpositionsHistoryV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCopytradingPublicSubpositionsHistoryV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	if !IsNil(o.CloseAvgPx) {
		toSerialize["closeAvgPx"] = o.CloseAvgPx
	}
	if !IsNil(o.CloseTime) {
		toSerialize["closeTime"] = o.CloseTime
	}
	if !IsNil(o.InstId) {
		toSerialize["instId"] = o.InstId
	}
	if !IsNil(o.InstType) {
		toSerialize["instType"] = o.InstType
	}
	if !IsNil(o.Lever) {
		toSerialize["lever"] = o.Lever
	}
	if !IsNil(o.Margin) {
		toSerialize["margin"] = o.Margin
	}
	if !IsNil(o.MgnMode) {
		toSerialize["mgnMode"] = o.MgnMode
	}
	if !IsNil(o.OpenAvgPx) {
		toSerialize["openAvgPx"] = o.OpenAvgPx
	}
	if !IsNil(o.OpenTime) {
		toSerialize["openTime"] = o.OpenTime
	}
	if !IsNil(o.Pnl) {
		toSerialize["pnl"] = o.Pnl
	}
	if !IsNil(o.PnlRatio) {
		toSerialize["pnlRatio"] = o.PnlRatio
	}
	if !IsNil(o.PosSide) {
		toSerialize["posSide"] = o.PosSide
	}
	if !IsNil(o.SubPos) {
		toSerialize["subPos"] = o.SubPos
	}
	if !IsNil(o.SubPosId) {
		toSerialize["subPosId"] = o.SubPosId
	}
	if !IsNil(o.UniqueCode) {
		toSerialize["uniqueCode"] = o.UniqueCode
	}
	return toSerialize, nil
}

type NullableGetCopytradingPublicSubpositionsHistoryV5RespData struct {
	value *GetCopytradingPublicSubpositionsHistoryV5RespData
	isSet bool
}

func (v NullableGetCopytradingPublicSubpositionsHistoryV5RespData) Get() *GetCopytradingPublicSubpositionsHistoryV5RespData {
	return v.value
}

func (v *NullableGetCopytradingPublicSubpositionsHistoryV5RespData) Set(val *GetCopytradingPublicSubpositionsHistoryV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCopytradingPublicSubpositionsHistoryV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCopytradingPublicSubpositionsHistoryV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCopytradingPublicSubpositionsHistoryV5RespData(val *GetCopytradingPublicSubpositionsHistoryV5RespData) *NullableGetCopytradingPublicSubpositionsHistoryV5RespData {
	return &NullableGetCopytradingPublicSubpositionsHistoryV5RespData{value: val, isSet: true}
}

func (v NullableGetCopytradingPublicSubpositionsHistoryV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCopytradingPublicSubpositionsHistoryV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


