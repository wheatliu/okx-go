/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotGridMinInvestmentV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotGridMinInvestmentV5Req{}

// CreateTradingBotGridMinInvestmentV5Req struct for CreateTradingBotGridMinInvestmentV5Req
type CreateTradingBotGridMinInvestmentV5Req struct {
	// Algo order type  `grid`: Spot grid  `contract_grid`: Contract grid
	AlgoOrdType string `json:"algoOrdType"`
	// Whether or not open a position when the strategy activates  Default is `false`  Neutral contract grid should omit the parameter  Only applicable to `contract grid`
	BasePos *bool `json:"basePos,omitempty"`
	// Contract grid type  `long`,`short`,`neutral`  Only applicable to `contract grid`
	Direction *string `json:"direction,omitempty"`
	// Grid quantity
	GridNum string `json:"gridNum"`
	// Instrument ID, e.g. `BTC-USDT-SWAP`
	InstId string `json:"instId"`
	// Invest Data
	InvestmentData []CreateTradingBotGridMinInvestmentV5ReqInvestmentDataInner `json:"investmentData,omitempty"`
	// Investment type, only applicable to `grid`   `quote`  `base`  `dual`
	InvestmentType *string `json:"investmentType,omitempty"`
	// Leverage  Only applicable to `contract grid`
	Lever *string `json:"lever,omitempty"`
	// Upper price of price range
	MaxPx string `json:"maxPx"`
	// Lower price of price range
	MinPx string `json:"minPx"`
	// Grid type  `1`: Arithmetic, `2`: Geometric
	RunType string `json:"runType"`
	// Trigger stragety,    `instant`  `price`  `rsi`
	TriggerStrategy *string `json:"triggerStrategy,omitempty"`
}

type _CreateTradingBotGridMinInvestmentV5Req CreateTradingBotGridMinInvestmentV5Req

// NewCreateTradingBotGridMinInvestmentV5Req instantiates a new CreateTradingBotGridMinInvestmentV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotGridMinInvestmentV5Req(algoOrdType string, gridNum string, instId string, maxPx string, minPx string, runType string) *CreateTradingBotGridMinInvestmentV5Req {
	this := CreateTradingBotGridMinInvestmentV5Req{}
	this.AlgoOrdType = algoOrdType
	var direction string = ""
	this.Direction = &direction
	this.GridNum = gridNum
	this.InstId = instId
	var investmentType string = ""
	this.InvestmentType = &investmentType
	var lever string = ""
	this.Lever = &lever
	this.MaxPx = maxPx
	this.MinPx = minPx
	this.RunType = runType
	var triggerStrategy string = ""
	this.TriggerStrategy = &triggerStrategy
	return &this
}

// NewCreateTradingBotGridMinInvestmentV5ReqWithDefaults instantiates a new CreateTradingBotGridMinInvestmentV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotGridMinInvestmentV5ReqWithDefaults() *CreateTradingBotGridMinInvestmentV5Req {
	this := CreateTradingBotGridMinInvestmentV5Req{}
	var algoOrdType string = ""
	this.AlgoOrdType = algoOrdType
	var direction string = ""
	this.Direction = &direction
	var gridNum string = ""
	this.GridNum = gridNum
	var instId string = ""
	this.InstId = instId
	var investmentType string = ""
	this.InvestmentType = &investmentType
	var lever string = ""
	this.Lever = &lever
	var maxPx string = ""
	this.MaxPx = maxPx
	var minPx string = ""
	this.MinPx = minPx
	var runType string = ""
	this.RunType = runType
	var triggerStrategy string = ""
	this.TriggerStrategy = &triggerStrategy
	return &this
}

// GetAlgoOrdType returns the AlgoOrdType field value
func (o *CreateTradingBotGridMinInvestmentV5Req) GetAlgoOrdType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlgoOrdType
}

// GetAlgoOrdTypeOk returns a tuple with the AlgoOrdType field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetAlgoOrdTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlgoOrdType, true
}

// SetAlgoOrdType sets field value
func (o *CreateTradingBotGridMinInvestmentV5Req) SetAlgoOrdType(v string) {
	o.AlgoOrdType = v
}

// GetBasePos returns the BasePos field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetBasePos() bool {
	if o == nil || IsNil(o.BasePos) {
		var ret bool
		return ret
	}
	return *o.BasePos
}

// GetBasePosOk returns a tuple with the BasePos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetBasePosOk() (*bool, bool) {
	if o == nil || IsNil(o.BasePos) {
		return nil, false
	}
	return o.BasePos, true
}

// HasBasePos returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) HasBasePos() bool {
	if o != nil && !IsNil(o.BasePos) {
		return true
	}

	return false
}

// SetBasePos gets a reference to the given bool and assigns it to the BasePos field.
func (o *CreateTradingBotGridMinInvestmentV5Req) SetBasePos(v bool) {
	o.BasePos = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *CreateTradingBotGridMinInvestmentV5Req) SetDirection(v string) {
	o.Direction = &v
}

// GetGridNum returns the GridNum field value
func (o *CreateTradingBotGridMinInvestmentV5Req) GetGridNum() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GridNum
}

// GetGridNumOk returns a tuple with the GridNum field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetGridNumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GridNum, true
}

// SetGridNum sets field value
func (o *CreateTradingBotGridMinInvestmentV5Req) SetGridNum(v string) {
	o.GridNum = v
}

// GetInstId returns the InstId field value
func (o *CreateTradingBotGridMinInvestmentV5Req) GetInstId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstId
}

// GetInstIdOk returns a tuple with the InstId field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetInstIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstId, true
}

// SetInstId sets field value
func (o *CreateTradingBotGridMinInvestmentV5Req) SetInstId(v string) {
	o.InstId = v
}

// GetInvestmentData returns the InvestmentData field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetInvestmentData() []CreateTradingBotGridMinInvestmentV5ReqInvestmentDataInner {
	if o == nil || IsNil(o.InvestmentData) {
		var ret []CreateTradingBotGridMinInvestmentV5ReqInvestmentDataInner
		return ret
	}
	return o.InvestmentData
}

// GetInvestmentDataOk returns a tuple with the InvestmentData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetInvestmentDataOk() ([]CreateTradingBotGridMinInvestmentV5ReqInvestmentDataInner, bool) {
	if o == nil || IsNil(o.InvestmentData) {
		return nil, false
	}
	return o.InvestmentData, true
}

// HasInvestmentData returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) HasInvestmentData() bool {
	if o != nil && !IsNil(o.InvestmentData) {
		return true
	}

	return false
}

// SetInvestmentData gets a reference to the given []CreateTradingBotGridMinInvestmentV5ReqInvestmentDataInner and assigns it to the InvestmentData field.
func (o *CreateTradingBotGridMinInvestmentV5Req) SetInvestmentData(v []CreateTradingBotGridMinInvestmentV5ReqInvestmentDataInner) {
	o.InvestmentData = v
}

// GetInvestmentType returns the InvestmentType field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetInvestmentType() string {
	if o == nil || IsNil(o.InvestmentType) {
		var ret string
		return ret
	}
	return *o.InvestmentType
}

// GetInvestmentTypeOk returns a tuple with the InvestmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetInvestmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InvestmentType) {
		return nil, false
	}
	return o.InvestmentType, true
}

// HasInvestmentType returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) HasInvestmentType() bool {
	if o != nil && !IsNil(o.InvestmentType) {
		return true
	}

	return false
}

// SetInvestmentType gets a reference to the given string and assigns it to the InvestmentType field.
func (o *CreateTradingBotGridMinInvestmentV5Req) SetInvestmentType(v string) {
	o.InvestmentType = &v
}

// GetLever returns the Lever field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetLever() string {
	if o == nil || IsNil(o.Lever) {
		var ret string
		return ret
	}
	return *o.Lever
}

// GetLeverOk returns a tuple with the Lever field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetLeverOk() (*string, bool) {
	if o == nil || IsNil(o.Lever) {
		return nil, false
	}
	return o.Lever, true
}

// HasLever returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) HasLever() bool {
	if o != nil && !IsNil(o.Lever) {
		return true
	}

	return false
}

// SetLever gets a reference to the given string and assigns it to the Lever field.
func (o *CreateTradingBotGridMinInvestmentV5Req) SetLever(v string) {
	o.Lever = &v
}

// GetMaxPx returns the MaxPx field value
func (o *CreateTradingBotGridMinInvestmentV5Req) GetMaxPx() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxPx
}

// GetMaxPxOk returns a tuple with the MaxPx field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetMaxPxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxPx, true
}

// SetMaxPx sets field value
func (o *CreateTradingBotGridMinInvestmentV5Req) SetMaxPx(v string) {
	o.MaxPx = v
}

// GetMinPx returns the MinPx field value
func (o *CreateTradingBotGridMinInvestmentV5Req) GetMinPx() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MinPx
}

// GetMinPxOk returns a tuple with the MinPx field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetMinPxOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinPx, true
}

// SetMinPx sets field value
func (o *CreateTradingBotGridMinInvestmentV5Req) SetMinPx(v string) {
	o.MinPx = v
}

// GetRunType returns the RunType field value
func (o *CreateTradingBotGridMinInvestmentV5Req) GetRunType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RunType
}

// GetRunTypeOk returns a tuple with the RunType field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetRunTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunType, true
}

// SetRunType sets field value
func (o *CreateTradingBotGridMinInvestmentV5Req) SetRunType(v string) {
	o.RunType = v
}

// GetTriggerStrategy returns the TriggerStrategy field value if set, zero value otherwise.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetTriggerStrategy() string {
	if o == nil || IsNil(o.TriggerStrategy) {
		var ret string
		return ret
	}
	return *o.TriggerStrategy
}

// GetTriggerStrategyOk returns a tuple with the TriggerStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) GetTriggerStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerStrategy) {
		return nil, false
	}
	return o.TriggerStrategy, true
}

// HasTriggerStrategy returns a boolean if a field has been set.
func (o *CreateTradingBotGridMinInvestmentV5Req) HasTriggerStrategy() bool {
	if o != nil && !IsNil(o.TriggerStrategy) {
		return true
	}

	return false
}

// SetTriggerStrategy gets a reference to the given string and assigns it to the TriggerStrategy field.
func (o *CreateTradingBotGridMinInvestmentV5Req) SetTriggerStrategy(v string) {
	o.TriggerStrategy = &v
}

func (o CreateTradingBotGridMinInvestmentV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotGridMinInvestmentV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algoOrdType"] = o.AlgoOrdType
	if !IsNil(o.BasePos) {
		toSerialize["basePos"] = o.BasePos
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	toSerialize["gridNum"] = o.GridNum
	toSerialize["instId"] = o.InstId
	if !IsNil(o.InvestmentData) {
		toSerialize["investmentData"] = o.InvestmentData
	}
	if !IsNil(o.InvestmentType) {
		toSerialize["investmentType"] = o.InvestmentType
	}
	if !IsNil(o.Lever) {
		toSerialize["lever"] = o.Lever
	}
	toSerialize["maxPx"] = o.MaxPx
	toSerialize["minPx"] = o.MinPx
	toSerialize["runType"] = o.RunType
	if !IsNil(o.TriggerStrategy) {
		toSerialize["triggerStrategy"] = o.TriggerStrategy
	}
	return toSerialize, nil
}

func (o *CreateTradingBotGridMinInvestmentV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algoOrdType",
		"gridNum",
		"instId",
		"maxPx",
		"minPx",
		"runType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotGridMinInvestmentV5Req := _CreateTradingBotGridMinInvestmentV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotGridMinInvestmentV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotGridMinInvestmentV5Req(varCreateTradingBotGridMinInvestmentV5Req)

	return err
}

type NullableCreateTradingBotGridMinInvestmentV5Req struct {
	value *CreateTradingBotGridMinInvestmentV5Req
	isSet bool
}

func (v NullableCreateTradingBotGridMinInvestmentV5Req) Get() *CreateTradingBotGridMinInvestmentV5Req {
	return v.value
}

func (v *NullableCreateTradingBotGridMinInvestmentV5Req) Set(val *CreateTradingBotGridMinInvestmentV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotGridMinInvestmentV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotGridMinInvestmentV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotGridMinInvestmentV5Req(val *CreateTradingBotGridMinInvestmentV5Req) *NullableCreateTradingBotGridMinInvestmentV5Req {
	return &NullableCreateTradingBotGridMinInvestmentV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotGridMinInvestmentV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotGridMinInvestmentV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


