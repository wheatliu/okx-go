/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner{}

// CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner struct for CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner
type CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner struct {
	// Investment amount
	Amt *string `json:"amt,omitempty"`
	// Investment currency, e.g. `BTC`
	Ccy *string `json:"ccy,omitempty"`
}

// NewCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner instantiates a new CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner() *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner {
	this := CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner{}
	var amt string = ""
	this.Amt = &amt
	var ccy string = ""
	this.Ccy = &ccy
	return &this
}

// NewCreateFinanceStakingDefiPurchaseV5ReqInvestDataInnerWithDefaults instantiates a new CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFinanceStakingDefiPurchaseV5ReqInvestDataInnerWithDefaults() *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner {
	this := CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner{}
	var amt string = ""
	this.Amt = &amt
	var ccy string = ""
	this.Ccy = &ccy
	return &this
}

// GetAmt returns the Amt field value if set, zero value otherwise.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) GetAmt() string {
	if o == nil || IsNil(o.Amt) {
		var ret string
		return ret
	}
	return *o.Amt
}

// GetAmtOk returns a tuple with the Amt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) GetAmtOk() (*string, bool) {
	if o == nil || IsNil(o.Amt) {
		return nil, false
	}
	return o.Amt, true
}

// HasAmt returns a boolean if a field has been set.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) HasAmt() bool {
	if o != nil && !IsNil(o.Amt) {
		return true
	}

	return false
}

// SetAmt gets a reference to the given string and assigns it to the Amt field.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) SetAmt(v string) {
	o.Amt = &v
}

// GetCcy returns the Ccy field value if set, zero value otherwise.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) GetCcy() string {
	if o == nil || IsNil(o.Ccy) {
		var ret string
		return ret
	}
	return *o.Ccy
}

// GetCcyOk returns a tuple with the Ccy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) GetCcyOk() (*string, bool) {
	if o == nil || IsNil(o.Ccy) {
		return nil, false
	}
	return o.Ccy, true
}

// HasCcy returns a boolean if a field has been set.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) HasCcy() bool {
	if o != nil && !IsNil(o.Ccy) {
		return true
	}

	return false
}

// SetCcy gets a reference to the given string and assigns it to the Ccy field.
func (o *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) SetCcy(v string) {
	o.Ccy = &v
}

func (o CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amt) {
		toSerialize["amt"] = o.Amt
	}
	if !IsNil(o.Ccy) {
		toSerialize["ccy"] = o.Ccy
	}
	return toSerialize, nil
}

type NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner struct {
	value *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner
	isSet bool
}

func (v NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) Get() *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner {
	return v.value
}

func (v *NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) Set(val *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner(val *CreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) *NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner {
	return &NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner{value: val, isSet: true}
}

func (v NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFinanceStakingDefiPurchaseV5ReqInvestDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


