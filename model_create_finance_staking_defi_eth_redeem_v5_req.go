/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateFinanceStakingDefiEthRedeemV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFinanceStakingDefiEthRedeemV5Req{}

// CreateFinanceStakingDefiEthRedeemV5Req struct for CreateFinanceStakingDefiEthRedeemV5Req
type CreateFinanceStakingDefiEthRedeemV5Req struct {
	// Redeeming amount
	Amt string `json:"amt"`
}

type _CreateFinanceStakingDefiEthRedeemV5Req CreateFinanceStakingDefiEthRedeemV5Req

// NewCreateFinanceStakingDefiEthRedeemV5Req instantiates a new CreateFinanceStakingDefiEthRedeemV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFinanceStakingDefiEthRedeemV5Req(amt string) *CreateFinanceStakingDefiEthRedeemV5Req {
	this := CreateFinanceStakingDefiEthRedeemV5Req{}
	this.Amt = amt
	return &this
}

// NewCreateFinanceStakingDefiEthRedeemV5ReqWithDefaults instantiates a new CreateFinanceStakingDefiEthRedeemV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFinanceStakingDefiEthRedeemV5ReqWithDefaults() *CreateFinanceStakingDefiEthRedeemV5Req {
	this := CreateFinanceStakingDefiEthRedeemV5Req{}
	var amt string = ""
	this.Amt = amt
	return &this
}

// GetAmt returns the Amt field value
func (o *CreateFinanceStakingDefiEthRedeemV5Req) GetAmt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amt
}

// GetAmtOk returns a tuple with the Amt field value
// and a boolean to check if the value has been set.
func (o *CreateFinanceStakingDefiEthRedeemV5Req) GetAmtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amt, true
}

// SetAmt sets field value
func (o *CreateFinanceStakingDefiEthRedeemV5Req) SetAmt(v string) {
	o.Amt = v
}

func (o CreateFinanceStakingDefiEthRedeemV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFinanceStakingDefiEthRedeemV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amt"] = o.Amt
	return toSerialize, nil
}

func (o *CreateFinanceStakingDefiEthRedeemV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateFinanceStakingDefiEthRedeemV5Req := _CreateFinanceStakingDefiEthRedeemV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateFinanceStakingDefiEthRedeemV5Req)

	if err != nil {
		return err
	}

	*o = CreateFinanceStakingDefiEthRedeemV5Req(varCreateFinanceStakingDefiEthRedeemV5Req)

	return err
}

type NullableCreateFinanceStakingDefiEthRedeemV5Req struct {
	value *CreateFinanceStakingDefiEthRedeemV5Req
	isSet bool
}

func (v NullableCreateFinanceStakingDefiEthRedeemV5Req) Get() *CreateFinanceStakingDefiEthRedeemV5Req {
	return v.value
}

func (v *NullableCreateFinanceStakingDefiEthRedeemV5Req) Set(val *CreateFinanceStakingDefiEthRedeemV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFinanceStakingDefiEthRedeemV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFinanceStakingDefiEthRedeemV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFinanceStakingDefiEthRedeemV5Req(val *CreateFinanceStakingDefiEthRedeemV5Req) *NullableCreateFinanceStakingDefiEthRedeemV5Req {
	return &NullableCreateFinanceStakingDefiEthRedeemV5Req{value: val, isSet: true}
}

func (v NullableCreateFinanceStakingDefiEthRedeemV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFinanceStakingDefiEthRedeemV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


