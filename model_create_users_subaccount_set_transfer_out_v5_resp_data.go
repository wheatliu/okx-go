/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the CreateUsersSubaccountSetTransferOutV5RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUsersSubaccountSetTransferOutV5RespData{}

// CreateUsersSubaccountSetTransferOutV5RespData struct for CreateUsersSubaccountSetTransferOutV5RespData
type CreateUsersSubaccountSetTransferOutV5RespData struct {
	// Whether the sub-account has the right to transfer out.   `false`: cannot transfer out   `true`: can transfer out
	CanTransOut *bool `json:"canTransOut,omitempty"`
	// Name of the sub-account
	SubAcct *string `json:"subAcct,omitempty"`
}

// NewCreateUsersSubaccountSetTransferOutV5RespData instantiates a new CreateUsersSubaccountSetTransferOutV5RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUsersSubaccountSetTransferOutV5RespData() *CreateUsersSubaccountSetTransferOutV5RespData {
	this := CreateUsersSubaccountSetTransferOutV5RespData{}
	var subAcct string = ""
	this.SubAcct = &subAcct
	return &this
}

// NewCreateUsersSubaccountSetTransferOutV5RespDataWithDefaults instantiates a new CreateUsersSubaccountSetTransferOutV5RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUsersSubaccountSetTransferOutV5RespDataWithDefaults() *CreateUsersSubaccountSetTransferOutV5RespData {
	this := CreateUsersSubaccountSetTransferOutV5RespData{}
	var subAcct string = ""
	this.SubAcct = &subAcct
	return &this
}

// GetCanTransOut returns the CanTransOut field value if set, zero value otherwise.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) GetCanTransOut() bool {
	if o == nil || IsNil(o.CanTransOut) {
		var ret bool
		return ret
	}
	return *o.CanTransOut
}

// GetCanTransOutOk returns a tuple with the CanTransOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) GetCanTransOutOk() (*bool, bool) {
	if o == nil || IsNil(o.CanTransOut) {
		return nil, false
	}
	return o.CanTransOut, true
}

// HasCanTransOut returns a boolean if a field has been set.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) HasCanTransOut() bool {
	if o != nil && !IsNil(o.CanTransOut) {
		return true
	}

	return false
}

// SetCanTransOut gets a reference to the given bool and assigns it to the CanTransOut field.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) SetCanTransOut(v bool) {
	o.CanTransOut = &v
}

// GetSubAcct returns the SubAcct field value if set, zero value otherwise.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) GetSubAcct() string {
	if o == nil || IsNil(o.SubAcct) {
		var ret string
		return ret
	}
	return *o.SubAcct
}

// GetSubAcctOk returns a tuple with the SubAcct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) GetSubAcctOk() (*string, bool) {
	if o == nil || IsNil(o.SubAcct) {
		return nil, false
	}
	return o.SubAcct, true
}

// HasSubAcct returns a boolean if a field has been set.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) HasSubAcct() bool {
	if o != nil && !IsNil(o.SubAcct) {
		return true
	}

	return false
}

// SetSubAcct gets a reference to the given string and assigns it to the SubAcct field.
func (o *CreateUsersSubaccountSetTransferOutV5RespData) SetSubAcct(v string) {
	o.SubAcct = &v
}

func (o CreateUsersSubaccountSetTransferOutV5RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUsersSubaccountSetTransferOutV5RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanTransOut) {
		toSerialize["canTransOut"] = o.CanTransOut
	}
	if !IsNil(o.SubAcct) {
		toSerialize["subAcct"] = o.SubAcct
	}
	return toSerialize, nil
}

type NullableCreateUsersSubaccountSetTransferOutV5RespData struct {
	value *CreateUsersSubaccountSetTransferOutV5RespData
	isSet bool
}

func (v NullableCreateUsersSubaccountSetTransferOutV5RespData) Get() *CreateUsersSubaccountSetTransferOutV5RespData {
	return v.value
}

func (v *NullableCreateUsersSubaccountSetTransferOutV5RespData) Set(val *CreateUsersSubaccountSetTransferOutV5RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUsersSubaccountSetTransferOutV5RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUsersSubaccountSetTransferOutV5RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUsersSubaccountSetTransferOutV5RespData(val *CreateUsersSubaccountSetTransferOutV5RespData) *NullableCreateUsersSubaccountSetTransferOutV5RespData {
	return &NullableCreateUsersSubaccountSetTransferOutV5RespData{value: val, isSet: true}
}

func (v NullableCreateUsersSubaccountSetTransferOutV5RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUsersSubaccountSetTransferOutV5RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


