/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
)

// checks if the GetTradeEasyConvertCurrencyListV5RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradeEasyConvertCurrencyListV5RespDataInner{}

// GetTradeEasyConvertCurrencyListV5RespDataInner struct for GetTradeEasyConvertCurrencyListV5RespDataInner
type GetTradeEasyConvertCurrencyListV5RespDataInner struct {
	// Currently owned and convertible small currency list
	FromData []GetTradeEasyConvertCurrencyListV5RespDataInnerFromDataInner `json:"fromData,omitempty"`
	// Type of mainstream currency convert to, e.g. `USDT`
	ToCcy []string `json:"toCcy,omitempty"`
}

// NewGetTradeEasyConvertCurrencyListV5RespDataInner instantiates a new GetTradeEasyConvertCurrencyListV5RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradeEasyConvertCurrencyListV5RespDataInner() *GetTradeEasyConvertCurrencyListV5RespDataInner {
	this := GetTradeEasyConvertCurrencyListV5RespDataInner{}
	return &this
}

// NewGetTradeEasyConvertCurrencyListV5RespDataInnerWithDefaults instantiates a new GetTradeEasyConvertCurrencyListV5RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradeEasyConvertCurrencyListV5RespDataInnerWithDefaults() *GetTradeEasyConvertCurrencyListV5RespDataInner {
	this := GetTradeEasyConvertCurrencyListV5RespDataInner{}
	return &this
}

// GetFromData returns the FromData field value if set, zero value otherwise.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) GetFromData() []GetTradeEasyConvertCurrencyListV5RespDataInnerFromDataInner {
	if o == nil || IsNil(o.FromData) {
		var ret []GetTradeEasyConvertCurrencyListV5RespDataInnerFromDataInner
		return ret
	}
	return o.FromData
}

// GetFromDataOk returns a tuple with the FromData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) GetFromDataOk() ([]GetTradeEasyConvertCurrencyListV5RespDataInnerFromDataInner, bool) {
	if o == nil || IsNil(o.FromData) {
		return nil, false
	}
	return o.FromData, true
}

// HasFromData returns a boolean if a field has been set.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) HasFromData() bool {
	if o != nil && !IsNil(o.FromData) {
		return true
	}

	return false
}

// SetFromData gets a reference to the given []GetTradeEasyConvertCurrencyListV5RespDataInnerFromDataInner and assigns it to the FromData field.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) SetFromData(v []GetTradeEasyConvertCurrencyListV5RespDataInnerFromDataInner) {
	o.FromData = v
}

// GetToCcy returns the ToCcy field value if set, zero value otherwise.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) GetToCcy() []string {
	if o == nil || IsNil(o.ToCcy) {
		var ret []string
		return ret
	}
	return o.ToCcy
}

// GetToCcyOk returns a tuple with the ToCcy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) GetToCcyOk() ([]string, bool) {
	if o == nil || IsNil(o.ToCcy) {
		return nil, false
	}
	return o.ToCcy, true
}

// HasToCcy returns a boolean if a field has been set.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) HasToCcy() bool {
	if o != nil && !IsNil(o.ToCcy) {
		return true
	}

	return false
}

// SetToCcy gets a reference to the given []string and assigns it to the ToCcy field.
func (o *GetTradeEasyConvertCurrencyListV5RespDataInner) SetToCcy(v []string) {
	o.ToCcy = v
}

func (o GetTradeEasyConvertCurrencyListV5RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradeEasyConvertCurrencyListV5RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromData) {
		toSerialize["fromData"] = o.FromData
	}
	if !IsNil(o.ToCcy) {
		toSerialize["toCcy"] = o.ToCcy
	}
	return toSerialize, nil
}

type NullableGetTradeEasyConvertCurrencyListV5RespDataInner struct {
	value *GetTradeEasyConvertCurrencyListV5RespDataInner
	isSet bool
}

func (v NullableGetTradeEasyConvertCurrencyListV5RespDataInner) Get() *GetTradeEasyConvertCurrencyListV5RespDataInner {
	return v.value
}

func (v *NullableGetTradeEasyConvertCurrencyListV5RespDataInner) Set(val *GetTradeEasyConvertCurrencyListV5RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradeEasyConvertCurrencyListV5RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradeEasyConvertCurrencyListV5RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradeEasyConvertCurrencyListV5RespDataInner(val *GetTradeEasyConvertCurrencyListV5RespDataInner) *NullableGetTradeEasyConvertCurrencyListV5RespDataInner {
	return &NullableGetTradeEasyConvertCurrencyListV5RespDataInner{value: val, isSet: true}
}

func (v NullableGetTradeEasyConvertCurrencyListV5RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradeEasyConvertCurrencyListV5RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


