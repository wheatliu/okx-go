/*
OKX v5 API

OpenAPI specification for Okx exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateUsersSubaccountSetTransferOutV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUsersSubaccountSetTransferOutV5Req{}

// CreateUsersSubaccountSetTransferOutV5Req struct for CreateUsersSubaccountSetTransferOutV5Req
type CreateUsersSubaccountSetTransferOutV5Req struct {
	// Whether the sub-account has the right to transfer out. The default is `true`.  `false`: cannot transfer out   `true`: can transfer out
	CanTransOut *bool `json:"canTransOut,omitempty"`
	// Name of the sub-account. Single sub-account or multiple sub-account (no more than 20) separated with comma.
	SubAcct string `json:"subAcct"`
}

type _CreateUsersSubaccountSetTransferOutV5Req CreateUsersSubaccountSetTransferOutV5Req

// NewCreateUsersSubaccountSetTransferOutV5Req instantiates a new CreateUsersSubaccountSetTransferOutV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUsersSubaccountSetTransferOutV5Req(subAcct string) *CreateUsersSubaccountSetTransferOutV5Req {
	this := CreateUsersSubaccountSetTransferOutV5Req{}
	this.SubAcct = subAcct
	return &this
}

// NewCreateUsersSubaccountSetTransferOutV5ReqWithDefaults instantiates a new CreateUsersSubaccountSetTransferOutV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUsersSubaccountSetTransferOutV5ReqWithDefaults() *CreateUsersSubaccountSetTransferOutV5Req {
	this := CreateUsersSubaccountSetTransferOutV5Req{}
	var subAcct string = ""
	this.SubAcct = subAcct
	return &this
}

// GetCanTransOut returns the CanTransOut field value if set, zero value otherwise.
func (o *CreateUsersSubaccountSetTransferOutV5Req) GetCanTransOut() bool {
	if o == nil || IsNil(o.CanTransOut) {
		var ret bool
		return ret
	}
	return *o.CanTransOut
}

// GetCanTransOutOk returns a tuple with the CanTransOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountSetTransferOutV5Req) GetCanTransOutOk() (*bool, bool) {
	if o == nil || IsNil(o.CanTransOut) {
		return nil, false
	}
	return o.CanTransOut, true
}

// HasCanTransOut returns a boolean if a field has been set.
func (o *CreateUsersSubaccountSetTransferOutV5Req) HasCanTransOut() bool {
	if o != nil && !IsNil(o.CanTransOut) {
		return true
	}

	return false
}

// SetCanTransOut gets a reference to the given bool and assigns it to the CanTransOut field.
func (o *CreateUsersSubaccountSetTransferOutV5Req) SetCanTransOut(v bool) {
	o.CanTransOut = &v
}

// GetSubAcct returns the SubAcct field value
func (o *CreateUsersSubaccountSetTransferOutV5Req) GetSubAcct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubAcct
}

// GetSubAcctOk returns a tuple with the SubAcct field value
// and a boolean to check if the value has been set.
func (o *CreateUsersSubaccountSetTransferOutV5Req) GetSubAcctOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubAcct, true
}

// SetSubAcct sets field value
func (o *CreateUsersSubaccountSetTransferOutV5Req) SetSubAcct(v string) {
	o.SubAcct = v
}

func (o CreateUsersSubaccountSetTransferOutV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUsersSubaccountSetTransferOutV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanTransOut) {
		toSerialize["canTransOut"] = o.CanTransOut
	}
	toSerialize["subAcct"] = o.SubAcct
	return toSerialize, nil
}

func (o *CreateUsersSubaccountSetTransferOutV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subAcct",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUsersSubaccountSetTransferOutV5Req := _CreateUsersSubaccountSetTransferOutV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUsersSubaccountSetTransferOutV5Req)

	if err != nil {
		return err
	}

	*o = CreateUsersSubaccountSetTransferOutV5Req(varCreateUsersSubaccountSetTransferOutV5Req)

	return err
}

type NullableCreateUsersSubaccountSetTransferOutV5Req struct {
	value *CreateUsersSubaccountSetTransferOutV5Req
	isSet bool
}

func (v NullableCreateUsersSubaccountSetTransferOutV5Req) Get() *CreateUsersSubaccountSetTransferOutV5Req {
	return v.value
}

func (v *NullableCreateUsersSubaccountSetTransferOutV5Req) Set(val *CreateUsersSubaccountSetTransferOutV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUsersSubaccountSetTransferOutV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUsersSubaccountSetTransferOutV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUsersSubaccountSetTransferOutV5Req(val *CreateUsersSubaccountSetTransferOutV5Req) *NullableCreateUsersSubaccountSetTransferOutV5Req {
	return &NullableCreateUsersSubaccountSetTransferOutV5Req{value: val, isSet: true}
}

func (v NullableCreateUsersSubaccountSetTransferOutV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUsersSubaccountSetTransferOutV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


