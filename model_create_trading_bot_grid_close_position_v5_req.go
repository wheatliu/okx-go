/*
Okx Rest API

OpenAPI specification for Okx cryptocurrency exchange - Rest API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTradingBotGridClosePositionV5Req type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTradingBotGridClosePositionV5Req{}

// CreateTradingBotGridClosePositionV5Req struct for CreateTradingBotGridClosePositionV5Req
type CreateTradingBotGridClosePositionV5Req struct {
	// Algo ID
	AlgoId string `json:"algoId"`
	// Market close all the positions or not  `true`: Market close all position, `false`: Close part of position
	MktClose bool `json:"mktClose"`
	// Close position price  If `mktClose` is `false`, the parameter is required.
	Px *string `json:"px,omitempty"`
	// Close position amount, with unit of `contract`  If `mktClose` is `false`, the parameter is required.
	Sz *string `json:"sz,omitempty"`
}

type _CreateTradingBotGridClosePositionV5Req CreateTradingBotGridClosePositionV5Req

// NewCreateTradingBotGridClosePositionV5Req instantiates a new CreateTradingBotGridClosePositionV5Req object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTradingBotGridClosePositionV5Req(algoId string, mktClose bool) *CreateTradingBotGridClosePositionV5Req {
	this := CreateTradingBotGridClosePositionV5Req{}
	this.AlgoId = algoId
	this.MktClose = mktClose
	var px string = ""
	this.Px = &px
	var sz string = ""
	this.Sz = &sz
	return &this
}

// NewCreateTradingBotGridClosePositionV5ReqWithDefaults instantiates a new CreateTradingBotGridClosePositionV5Req object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTradingBotGridClosePositionV5ReqWithDefaults() *CreateTradingBotGridClosePositionV5Req {
	this := CreateTradingBotGridClosePositionV5Req{}
	var algoId string = ""
	this.AlgoId = algoId
	var px string = ""
	this.Px = &px
	var sz string = ""
	this.Sz = &sz
	return &this
}

// GetAlgoId returns the AlgoId field value
func (o *CreateTradingBotGridClosePositionV5Req) GetAlgoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlgoId
}

// GetAlgoIdOk returns a tuple with the AlgoId field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridClosePositionV5Req) GetAlgoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlgoId, true
}

// SetAlgoId sets field value
func (o *CreateTradingBotGridClosePositionV5Req) SetAlgoId(v string) {
	o.AlgoId = v
}

// GetMktClose returns the MktClose field value
func (o *CreateTradingBotGridClosePositionV5Req) GetMktClose() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MktClose
}

// GetMktCloseOk returns a tuple with the MktClose field value
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridClosePositionV5Req) GetMktCloseOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MktClose, true
}

// SetMktClose sets field value
func (o *CreateTradingBotGridClosePositionV5Req) SetMktClose(v bool) {
	o.MktClose = v
}

// GetPx returns the Px field value if set, zero value otherwise.
func (o *CreateTradingBotGridClosePositionV5Req) GetPx() string {
	if o == nil || IsNil(o.Px) {
		var ret string
		return ret
	}
	return *o.Px
}

// GetPxOk returns a tuple with the Px field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridClosePositionV5Req) GetPxOk() (*string, bool) {
	if o == nil || IsNil(o.Px) {
		return nil, false
	}
	return o.Px, true
}

// HasPx returns a boolean if a field has been set.
func (o *CreateTradingBotGridClosePositionV5Req) HasPx() bool {
	if o != nil && !IsNil(o.Px) {
		return true
	}

	return false
}

// SetPx gets a reference to the given string and assigns it to the Px field.
func (o *CreateTradingBotGridClosePositionV5Req) SetPx(v string) {
	o.Px = &v
}

// GetSz returns the Sz field value if set, zero value otherwise.
func (o *CreateTradingBotGridClosePositionV5Req) GetSz() string {
	if o == nil || IsNil(o.Sz) {
		var ret string
		return ret
	}
	return *o.Sz
}

// GetSzOk returns a tuple with the Sz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTradingBotGridClosePositionV5Req) GetSzOk() (*string, bool) {
	if o == nil || IsNil(o.Sz) {
		return nil, false
	}
	return o.Sz, true
}

// HasSz returns a boolean if a field has been set.
func (o *CreateTradingBotGridClosePositionV5Req) HasSz() bool {
	if o != nil && !IsNil(o.Sz) {
		return true
	}

	return false
}

// SetSz gets a reference to the given string and assigns it to the Sz field.
func (o *CreateTradingBotGridClosePositionV5Req) SetSz(v string) {
	o.Sz = &v
}

func (o CreateTradingBotGridClosePositionV5Req) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTradingBotGridClosePositionV5Req) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algoId"] = o.AlgoId
	toSerialize["mktClose"] = o.MktClose
	if !IsNil(o.Px) {
		toSerialize["px"] = o.Px
	}
	if !IsNil(o.Sz) {
		toSerialize["sz"] = o.Sz
	}
	return toSerialize, nil
}

func (o *CreateTradingBotGridClosePositionV5Req) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algoId",
		"mktClose",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTradingBotGridClosePositionV5Req := _CreateTradingBotGridClosePositionV5Req{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTradingBotGridClosePositionV5Req)

	if err != nil {
		return err
	}

	*o = CreateTradingBotGridClosePositionV5Req(varCreateTradingBotGridClosePositionV5Req)

	return err
}

type NullableCreateTradingBotGridClosePositionV5Req struct {
	value *CreateTradingBotGridClosePositionV5Req
	isSet bool
}

func (v NullableCreateTradingBotGridClosePositionV5Req) Get() *CreateTradingBotGridClosePositionV5Req {
	return v.value
}

func (v *NullableCreateTradingBotGridClosePositionV5Req) Set(val *CreateTradingBotGridClosePositionV5Req) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTradingBotGridClosePositionV5Req) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTradingBotGridClosePositionV5Req) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTradingBotGridClosePositionV5Req(val *CreateTradingBotGridClosePositionV5Req) *NullableCreateTradingBotGridClosePositionV5Req {
	return &NullableCreateTradingBotGridClosePositionV5Req{value: val, isSet: true}
}

func (v NullableCreateTradingBotGridClosePositionV5Req) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTradingBotGridClosePositionV5Req) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


